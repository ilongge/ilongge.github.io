<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>iOS--objc-runtime-new源码</title>
      <link href="/2021/10/19/ios-objc-runtime-new-yuan-ma/"/>
      <url>/2021/10/19/ios-objc-runtime-new-yuan-ma/</url>
      
        <content type="html"><![CDATA[<p>源码objc-runtime-new.m</p> <span id="more"></span><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br><span class="line">950</span><br><span class="line">951</span><br><span class="line">952</span><br><span class="line">953</span><br><span class="line">954</span><br><span class="line">955</span><br><span class="line">956</span><br><span class="line">957</span><br><span class="line">958</span><br><span class="line">959</span><br><span class="line">960</span><br><span class="line">961</span><br><span class="line">962</span><br><span class="line">963</span><br><span class="line">964</span><br><span class="line">965</span><br><span class="line">966</span><br><span class="line">967</span><br><span class="line">968</span><br><span class="line">969</span><br><span class="line">970</span><br><span class="line">971</span><br><span class="line">972</span><br><span class="line">973</span><br><span class="line">974</span><br><span class="line">975</span><br><span class="line">976</span><br><span class="line">977</span><br><span class="line">978</span><br><span class="line">979</span><br><span class="line">980</span><br><span class="line">981</span><br><span class="line">982</span><br><span class="line">983</span><br><span class="line">984</span><br><span class="line">985</span><br><span class="line">986</span><br><span class="line">987</span><br><span class="line">988</span><br><span class="line">989</span><br><span class="line">990</span><br><span class="line">991</span><br><span class="line">992</span><br><span class="line">993</span><br><span class="line">994</span><br><span class="line">995</span><br><span class="line">996</span><br><span class="line">997</span><br><span class="line">998</span><br><span class="line">999</span><br><span class="line">1000</span><br><span class="line">1001</span><br><span class="line">1002</span><br><span class="line">1003</span><br><span class="line">1004</span><br><span class="line">1005</span><br><span class="line">1006</span><br><span class="line">1007</span><br><span class="line">1008</span><br><span class="line">1009</span><br><span class="line">1010</span><br><span class="line">1011</span><br><span class="line">1012</span><br><span class="line">1013</span><br><span class="line">1014</span><br><span class="line">1015</span><br><span class="line">1016</span><br><span class="line">1017</span><br><span class="line">1018</span><br><span class="line">1019</span><br><span class="line">1020</span><br><span class="line">1021</span><br><span class="line">1022</span><br><span class="line">1023</span><br><span class="line">1024</span><br><span class="line">1025</span><br><span class="line">1026</span><br><span class="line">1027</span><br><span class="line">1028</span><br><span class="line">1029</span><br><span class="line">1030</span><br><span class="line">1031</span><br><span class="line">1032</span><br><span class="line">1033</span><br><span class="line">1034</span><br><span class="line">1035</span><br><span class="line">1036</span><br><span class="line">1037</span><br><span class="line">1038</span><br><span class="line">1039</span><br><span class="line">1040</span><br><span class="line">1041</span><br><span class="line">1042</span><br><span class="line">1043</span><br><span class="line">1044</span><br><span class="line">1045</span><br><span class="line">1046</span><br><span class="line">1047</span><br><span class="line">1048</span><br><span class="line">1049</span><br><span class="line">1050</span><br><span class="line">1051</span><br><span class="line">1052</span><br><span class="line">1053</span><br><span class="line">1054</span><br><span class="line">1055</span><br><span class="line">1056</span><br><span class="line">1057</span><br><span class="line">1058</span><br><span class="line">1059</span><br><span class="line">1060</span><br><span class="line">1061</span><br><span class="line">1062</span><br><span class="line">1063</span><br><span class="line">1064</span><br><span class="line">1065</span><br><span class="line">1066</span><br><span class="line">1067</span><br><span class="line">1068</span><br><span class="line">1069</span><br><span class="line">1070</span><br><span class="line">1071</span><br><span class="line">1072</span><br><span class="line">1073</span><br><span class="line">1074</span><br><span class="line">1075</span><br><span class="line">1076</span><br><span class="line">1077</span><br><span class="line">1078</span><br><span class="line">1079</span><br><span class="line">1080</span><br><span class="line">1081</span><br><span class="line">1082</span><br><span class="line">1083</span><br><span class="line">1084</span><br><span class="line">1085</span><br><span class="line">1086</span><br><span class="line">1087</span><br><span class="line">1088</span><br><span class="line">1089</span><br><span class="line">1090</span><br><span class="line">1091</span><br><span class="line">1092</span><br><span class="line">1093</span><br><span class="line">1094</span><br><span class="line">1095</span><br><span class="line">1096</span><br><span class="line">1097</span><br><span class="line">1098</span><br><span class="line">1099</span><br><span class="line">1100</span><br><span class="line">1101</span><br><span class="line">1102</span><br><span class="line">1103</span><br><span class="line">1104</span><br><span class="line">1105</span><br><span class="line">1106</span><br><span class="line">1107</span><br><span class="line">1108</span><br><span class="line">1109</span><br><span class="line">1110</span><br><span class="line">1111</span><br><span class="line">1112</span><br><span class="line">1113</span><br><span class="line">1114</span><br><span class="line">1115</span><br><span class="line">1116</span><br><span class="line">1117</span><br><span class="line">1118</span><br><span class="line">1119</span><br><span class="line">1120</span><br><span class="line">1121</span><br><span class="line">1122</span><br><span class="line">1123</span><br><span class="line">1124</span><br><span class="line">1125</span><br><span class="line">1126</span><br><span class="line">1127</span><br><span class="line">1128</span><br><span class="line">1129</span><br><span class="line">1130</span><br><span class="line">1131</span><br><span class="line">1132</span><br><span class="line">1133</span><br><span class="line">1134</span><br><span class="line">1135</span><br><span class="line">1136</span><br><span class="line">1137</span><br><span class="line">1138</span><br><span class="line">1139</span><br><span class="line">1140</span><br><span class="line">1141</span><br><span class="line">1142</span><br><span class="line">1143</span><br><span class="line">1144</span><br><span class="line">1145</span><br><span class="line">1146</span><br><span class="line">1147</span><br><span class="line">1148</span><br><span class="line">1149</span><br><span class="line">1150</span><br><span class="line">1151</span><br><span class="line">1152</span><br><span class="line">1153</span><br><span class="line">1154</span><br><span class="line">1155</span><br><span class="line">1156</span><br><span class="line">1157</span><br><span class="line">1158</span><br><span class="line">1159</span><br><span class="line">1160</span><br><span class="line">1161</span><br><span class="line">1162</span><br><span class="line">1163</span><br><span class="line">1164</span><br><span class="line">1165</span><br><span class="line">1166</span><br><span class="line">1167</span><br><span class="line">1168</span><br><span class="line">1169</span><br><span class="line">1170</span><br><span class="line">1171</span><br><span class="line">1172</span><br><span class="line">1173</span><br><span class="line">1174</span><br><span class="line">1175</span><br><span class="line">1176</span><br><span class="line">1177</span><br><span class="line">1178</span><br><span class="line">1179</span><br><span class="line">1180</span><br><span class="line">1181</span><br><span class="line">1182</span><br><span class="line">1183</span><br><span class="line">1184</span><br><span class="line">1185</span><br><span class="line">1186</span><br><span class="line">1187</span><br><span class="line">1188</span><br><span class="line">1189</span><br><span class="line">1190</span><br><span class="line">1191</span><br><span class="line">1192</span><br><span class="line">1193</span><br><span class="line">1194</span><br><span class="line">1195</span><br><span class="line">1196</span><br><span class="line">1197</span><br><span class="line">1198</span><br><span class="line">1199</span><br><span class="line">1200</span><br><span class="line">1201</span><br><span class="line">1202</span><br><span class="line">1203</span><br><span class="line">1204</span><br><span class="line">1205</span><br><span class="line">1206</span><br><span class="line">1207</span><br><span class="line">1208</span><br><span class="line">1209</span><br><span class="line">1210</span><br><span class="line">1211</span><br><span class="line">1212</span><br><span class="line">1213</span><br><span class="line">1214</span><br><span class="line">1215</span><br><span class="line">1216</span><br><span class="line">1217</span><br><span class="line">1218</span><br><span class="line">1219</span><br><span class="line">1220</span><br><span class="line">1221</span><br><span class="line">1222</span><br><span class="line">1223</span><br><span class="line">1224</span><br><span class="line">1225</span><br><span class="line">1226</span><br><span class="line">1227</span><br><span class="line">1228</span><br><span class="line">1229</span><br><span class="line">1230</span><br><span class="line">1231</span><br><span class="line">1232</span><br><span class="line">1233</span><br><span class="line">1234</span><br><span class="line">1235</span><br><span class="line">1236</span><br><span class="line">1237</span><br><span class="line">1238</span><br><span class="line">1239</span><br><span class="line">1240</span><br><span class="line">1241</span><br><span class="line">1242</span><br><span class="line">1243</span><br><span class="line">1244</span><br><span class="line">1245</span><br><span class="line">1246</span><br><span class="line">1247</span><br><span class="line">1248</span><br><span class="line">1249</span><br><span class="line">1250</span><br><span class="line">1251</span><br><span class="line">1252</span><br><span class="line">1253</span><br><span class="line">1254</span><br><span class="line">1255</span><br><span class="line">1256</span><br><span class="line">1257</span><br><span class="line">1258</span><br><span class="line">1259</span><br><span class="line">1260</span><br><span class="line">1261</span><br><span class="line">1262</span><br><span class="line">1263</span><br><span class="line">1264</span><br><span class="line">1265</span><br><span class="line">1266</span><br><span class="line">1267</span><br><span class="line">1268</span><br><span class="line">1269</span><br><span class="line">1270</span><br><span class="line">1271</span><br><span class="line">1272</span><br><span class="line">1273</span><br><span class="line">1274</span><br><span class="line">1275</span><br><span class="line">1276</span><br><span class="line">1277</span><br><span class="line">1278</span><br><span class="line">1279</span><br><span class="line">1280</span><br><span class="line">1281</span><br><span class="line">1282</span><br><span class="line">1283</span><br><span class="line">1284</span><br><span class="line">1285</span><br><span class="line">1286</span><br><span class="line">1287</span><br><span class="line">1288</span><br><span class="line">1289</span><br><span class="line">1290</span><br><span class="line">1291</span><br><span class="line">1292</span><br><span class="line">1293</span><br><span class="line">1294</span><br><span class="line">1295</span><br><span class="line">1296</span><br><span class="line">1297</span><br><span class="line">1298</span><br><span class="line">1299</span><br><span class="line">1300</span><br><span class="line">1301</span><br><span class="line">1302</span><br><span class="line">1303</span><br><span class="line">1304</span><br><span class="line">1305</span><br><span class="line">1306</span><br><span class="line">1307</span><br><span class="line">1308</span><br><span class="line">1309</span><br><span class="line">1310</span><br><span class="line">1311</span><br><span class="line">1312</span><br><span class="line">1313</span><br><span class="line">1314</span><br><span class="line">1315</span><br><span class="line">1316</span><br><span class="line">1317</span><br><span class="line">1318</span><br><span class="line">1319</span><br><span class="line">1320</span><br><span class="line">1321</span><br><span class="line">1322</span><br><span class="line">1323</span><br><span class="line">1324</span><br><span class="line">1325</span><br><span class="line">1326</span><br><span class="line">1327</span><br><span class="line">1328</span><br><span class="line">1329</span><br><span class="line">1330</span><br><span class="line">1331</span><br><span class="line">1332</span><br><span class="line">1333</span><br><span class="line">1334</span><br><span class="line">1335</span><br><span class="line">1336</span><br><span class="line">1337</span><br><span class="line">1338</span><br><span class="line">1339</span><br><span class="line">1340</span><br><span class="line">1341</span><br><span class="line">1342</span><br><span class="line">1343</span><br><span class="line">1344</span><br><span class="line">1345</span><br><span class="line">1346</span><br><span class="line">1347</span><br><span class="line">1348</span><br><span class="line">1349</span><br><span class="line">1350</span><br><span class="line">1351</span><br><span class="line">1352</span><br><span class="line">1353</span><br><span class="line">1354</span><br><span class="line">1355</span><br><span class="line">1356</span><br><span class="line">1357</span><br><span class="line">1358</span><br><span class="line">1359</span><br><span class="line">1360</span><br><span class="line">1361</span><br><span class="line">1362</span><br><span class="line">1363</span><br><span class="line">1364</span><br><span class="line">1365</span><br><span class="line">1366</span><br><span class="line">1367</span><br><span class="line">1368</span><br><span class="line">1369</span><br><span class="line">1370</span><br><span class="line">1371</span><br><span class="line">1372</span><br><span class="line">1373</span><br><span class="line">1374</span><br><span class="line">1375</span><br><span class="line">1376</span><br><span class="line">1377</span><br><span class="line">1378</span><br><span class="line">1379</span><br><span class="line">1380</span><br><span class="line">1381</span><br><span class="line">1382</span><br><span class="line">1383</span><br><span class="line">1384</span><br><span class="line">1385</span><br><span class="line">1386</span><br><span class="line">1387</span><br><span class="line">1388</span><br><span class="line">1389</span><br><span class="line">1390</span><br><span class="line">1391</span><br><span class="line">1392</span><br><span class="line">1393</span><br><span class="line">1394</span><br><span class="line">1395</span><br><span class="line">1396</span><br><span class="line">1397</span><br><span class="line">1398</span><br><span class="line">1399</span><br><span class="line">1400</span><br><span class="line">1401</span><br><span class="line">1402</span><br><span class="line">1403</span><br><span class="line">1404</span><br><span class="line">1405</span><br><span class="line">1406</span><br><span class="line">1407</span><br><span class="line">1408</span><br><span class="line">1409</span><br><span class="line">1410</span><br><span class="line">1411</span><br><span class="line">1412</span><br><span class="line">1413</span><br><span class="line">1414</span><br><span class="line">1415</span><br><span class="line">1416</span><br><span class="line">1417</span><br><span class="line">1418</span><br><span class="line">1419</span><br><span class="line">1420</span><br><span class="line">1421</span><br><span class="line">1422</span><br><span class="line">1423</span><br><span class="line">1424</span><br><span class="line">1425</span><br><span class="line">1426</span><br><span class="line">1427</span><br><span class="line">1428</span><br><span class="line">1429</span><br><span class="line">1430</span><br><span class="line">1431</span><br><span class="line">1432</span><br><span class="line">1433</span><br><span class="line">1434</span><br><span class="line">1435</span><br><span class="line">1436</span><br><span class="line">1437</span><br><span class="line">1438</span><br><span class="line">1439</span><br><span class="line">1440</span><br><span class="line">1441</span><br><span class="line">1442</span><br><span class="line">1443</span><br><span class="line">1444</span><br><span class="line">1445</span><br><span class="line">1446</span><br><span class="line">1447</span><br><span class="line">1448</span><br><span class="line">1449</span><br><span class="line">1450</span><br><span class="line">1451</span><br><span class="line">1452</span><br><span class="line">1453</span><br><span class="line">1454</span><br><span class="line">1455</span><br><span class="line">1456</span><br><span class="line">1457</span><br><span class="line">1458</span><br><span class="line">1459</span><br><span class="line">1460</span><br><span class="line">1461</span><br><span class="line">1462</span><br><span class="line">1463</span><br><span class="line">1464</span><br><span class="line">1465</span><br><span class="line">1466</span><br><span class="line">1467</span><br><span class="line">1468</span><br><span class="line">1469</span><br><span class="line">1470</span><br><span class="line">1471</span><br><span class="line">1472</span><br><span class="line">1473</span><br><span class="line">1474</span><br><span class="line">1475</span><br><span class="line">1476</span><br><span class="line">1477</span><br><span class="line">1478</span><br><span class="line">1479</span><br><span class="line">1480</span><br><span class="line">1481</span><br><span class="line">1482</span><br><span class="line">1483</span><br><span class="line">1484</span><br><span class="line">1485</span><br><span class="line">1486</span><br><span class="line">1487</span><br><span class="line">1488</span><br><span class="line">1489</span><br><span class="line">1490</span><br><span class="line">1491</span><br><span class="line">1492</span><br><span class="line">1493</span><br><span class="line">1494</span><br><span class="line">1495</span><br><span class="line">1496</span><br><span class="line">1497</span><br><span class="line">1498</span><br><span class="line">1499</span><br><span class="line">1500</span><br><span class="line">1501</span><br><span class="line">1502</span><br><span class="line">1503</span><br><span class="line">1504</span><br><span class="line">1505</span><br><span class="line">1506</span><br><span class="line">1507</span><br><span class="line">1508</span><br><span class="line">1509</span><br><span class="line">1510</span><br><span class="line">1511</span><br><span class="line">1512</span><br><span class="line">1513</span><br><span class="line">1514</span><br><span class="line">1515</span><br><span class="line">1516</span><br><span class="line">1517</span><br><span class="line">1518</span><br><span class="line">1519</span><br><span class="line">1520</span><br><span class="line">1521</span><br><span class="line">1522</span><br><span class="line">1523</span><br><span class="line">1524</span><br><span class="line">1525</span><br><span class="line">1526</span><br><span class="line">1527</span><br><span class="line">1528</span><br><span class="line">1529</span><br><span class="line">1530</span><br><span class="line">1531</span><br><span class="line">1532</span><br><span class="line">1533</span><br><span class="line">1534</span><br><span class="line">1535</span><br><span class="line">1536</span><br><span class="line">1537</span><br><span class="line">1538</span><br><span class="line">1539</span><br><span class="line">1540</span><br><span class="line">1541</span><br><span class="line">1542</span><br><span class="line">1543</span><br><span class="line">1544</span><br><span class="line">1545</span><br><span class="line">1546</span><br><span class="line">1547</span><br><span class="line">1548</span><br><span class="line">1549</span><br><span class="line">1550</span><br><span class="line">1551</span><br><span class="line">1552</span><br><span class="line">1553</span><br><span class="line">1554</span><br><span class="line">1555</span><br><span class="line">1556</span><br><span class="line">1557</span><br><span class="line">1558</span><br><span class="line">1559</span><br><span class="line">1560</span><br><span class="line">1561</span><br><span class="line">1562</span><br><span class="line">1563</span><br><span class="line">1564</span><br><span class="line">1565</span><br><span class="line">1566</span><br><span class="line">1567</span><br><span class="line">1568</span><br><span class="line">1569</span><br><span class="line">1570</span><br><span class="line">1571</span><br><span class="line">1572</span><br><span class="line">1573</span><br><span class="line">1574</span><br><span class="line">1575</span><br><span class="line">1576</span><br><span class="line">1577</span><br><span class="line">1578</span><br><span class="line">1579</span><br><span class="line">1580</span><br><span class="line">1581</span><br><span class="line">1582</span><br><span class="line">1583</span><br><span class="line">1584</span><br><span class="line">1585</span><br><span class="line">1586</span><br><span class="line">1587</span><br><span class="line">1588</span><br><span class="line">1589</span><br><span class="line">1590</span><br><span class="line">1591</span><br><span class="line">1592</span><br><span class="line">1593</span><br><span class="line">1594</span><br><span class="line">1595</span><br><span class="line">1596</span><br><span class="line">1597</span><br><span class="line">1598</span><br><span class="line">1599</span><br><span class="line">1600</span><br><span class="line">1601</span><br><span class="line">1602</span><br><span class="line">1603</span><br><span class="line">1604</span><br><span class="line">1605</span><br><span class="line">1606</span><br><span class="line">1607</span><br><span class="line">1608</span><br><span class="line">1609</span><br><span class="line">1610</span><br><span class="line">1611</span><br><span class="line">1612</span><br><span class="line">1613</span><br><span class="line">1614</span><br><span class="line">1615</span><br><span class="line">1616</span><br><span class="line">1617</span><br><span class="line">1618</span><br><span class="line">1619</span><br><span class="line">1620</span><br><span class="line">1621</span><br><span class="line">1622</span><br><span class="line">1623</span><br><span class="line">1624</span><br><span class="line">1625</span><br><span class="line">1626</span><br><span class="line">1627</span><br><span class="line">1628</span><br><span class="line">1629</span><br><span class="line">1630</span><br><span class="line">1631</span><br><span class="line">1632</span><br><span class="line">1633</span><br><span class="line">1634</span><br><span class="line">1635</span><br><span class="line">1636</span><br><span class="line">1637</span><br><span class="line">1638</span><br><span class="line">1639</span><br><span class="line">1640</span><br><span class="line">1641</span><br><span class="line">1642</span><br><span class="line">1643</span><br><span class="line">1644</span><br><span class="line">1645</span><br><span class="line">1646</span><br><span class="line">1647</span><br><span class="line">1648</span><br><span class="line">1649</span><br><span class="line">1650</span><br><span class="line">1651</span><br><span class="line">1652</span><br><span class="line">1653</span><br><span class="line">1654</span><br><span class="line">1655</span><br><span class="line">1656</span><br><span class="line">1657</span><br><span class="line">1658</span><br><span class="line">1659</span><br><span class="line">1660</span><br><span class="line">1661</span><br><span class="line">1662</span><br><span class="line">1663</span><br><span class="line">1664</span><br><span class="line">1665</span><br><span class="line">1666</span><br><span class="line">1667</span><br><span class="line">1668</span><br><span class="line">1669</span><br><span class="line">1670</span><br><span class="line">1671</span><br><span class="line">1672</span><br><span class="line">1673</span><br><span class="line">1674</span><br><span class="line">1675</span><br><span class="line">1676</span><br><span class="line">1677</span><br><span class="line">1678</span><br><span class="line">1679</span><br><span class="line">1680</span><br><span class="line">1681</span><br><span class="line">1682</span><br><span class="line">1683</span><br><span class="line">1684</span><br><span class="line">1685</span><br><span class="line">1686</span><br><span class="line">1687</span><br><span class="line">1688</span><br><span class="line">1689</span><br><span class="line">1690</span><br><span class="line">1691</span><br><span class="line">1692</span><br><span class="line">1693</span><br><span class="line">1694</span><br><span class="line">1695</span><br><span class="line">1696</span><br><span class="line">1697</span><br><span class="line">1698</span><br><span class="line">1699</span><br><span class="line">1700</span><br><span class="line">1701</span><br><span class="line">1702</span><br><span class="line">1703</span><br><span class="line">1704</span><br><span class="line">1705</span><br><span class="line">1706</span><br><span class="line">1707</span><br><span class="line">1708</span><br><span class="line">1709</span><br><span class="line">1710</span><br><span class="line">1711</span><br><span class="line">1712</span><br><span class="line">1713</span><br><span class="line">1714</span><br><span class="line">1715</span><br><span class="line">1716</span><br><span class="line">1717</span><br><span class="line">1718</span><br><span class="line">1719</span><br><span class="line">1720</span><br><span class="line">1721</span><br><span class="line">1722</span><br><span class="line">1723</span><br><span class="line">1724</span><br><span class="line">1725</span><br><span class="line">1726</span><br><span class="line">1727</span><br><span class="line">1728</span><br><span class="line">1729</span><br><span class="line">1730</span><br><span class="line">1731</span><br><span class="line">1732</span><br><span class="line">1733</span><br><span class="line">1734</span><br><span class="line">1735</span><br><span class="line">1736</span><br><span class="line">1737</span><br><span class="line">1738</span><br><span class="line">1739</span><br><span class="line">1740</span><br><span class="line">1741</span><br><span class="line">1742</span><br><span class="line">1743</span><br><span class="line">1744</span><br><span class="line">1745</span><br><span class="line">1746</span><br><span class="line">1747</span><br><span class="line">1748</span><br><span class="line">1749</span><br><span class="line">1750</span><br><span class="line">1751</span><br><span class="line">1752</span><br><span class="line">1753</span><br><span class="line">1754</span><br><span class="line">1755</span><br><span class="line">1756</span><br><span class="line">1757</span><br><span class="line">1758</span><br><span class="line">1759</span><br><span class="line">1760</span><br><span class="line">1761</span><br><span class="line">1762</span><br><span class="line">1763</span><br><span class="line">1764</span><br><span class="line">1765</span><br><span class="line">1766</span><br><span class="line">1767</span><br><span class="line">1768</span><br><span class="line">1769</span><br><span class="line">1770</span><br><span class="line">1771</span><br><span class="line">1772</span><br><span class="line">1773</span><br><span class="line">1774</span><br><span class="line">1775</span><br><span class="line">1776</span><br><span class="line">1777</span><br><span class="line">1778</span><br><span class="line">1779</span><br><span class="line">1780</span><br><span class="line">1781</span><br><span class="line">1782</span><br><span class="line">1783</span><br><span class="line">1784</span><br><span class="line">1785</span><br><span class="line">1786</span><br><span class="line">1787</span><br><span class="line">1788</span><br><span class="line">1789</span><br><span class="line">1790</span><br><span class="line">1791</span><br><span class="line">1792</span><br><span class="line">1793</span><br><span class="line">1794</span><br><span class="line">1795</span><br><span class="line">1796</span><br><span class="line">1797</span><br><span class="line">1798</span><br><span class="line">1799</span><br><span class="line">1800</span><br><span class="line">1801</span><br><span class="line">1802</span><br><span class="line">1803</span><br><span class="line">1804</span><br><span class="line">1805</span><br><span class="line">1806</span><br><span class="line">1807</span><br><span class="line">1808</span><br><span class="line">1809</span><br><span class="line">1810</span><br><span class="line">1811</span><br><span class="line">1812</span><br><span class="line">1813</span><br><span class="line">1814</span><br><span class="line">1815</span><br><span class="line">1816</span><br><span class="line">1817</span><br><span class="line">1818</span><br><span class="line">1819</span><br><span class="line">1820</span><br><span class="line">1821</span><br><span class="line">1822</span><br><span class="line">1823</span><br><span class="line">1824</span><br><span class="line">1825</span><br><span class="line">1826</span><br><span class="line">1827</span><br><span class="line">1828</span><br><span class="line">1829</span><br><span class="line">1830</span><br><span class="line">1831</span><br><span class="line">1832</span><br><span class="line">1833</span><br><span class="line">1834</span><br><span class="line">1835</span><br><span class="line">1836</span><br><span class="line">1837</span><br><span class="line">1838</span><br><span class="line">1839</span><br><span class="line">1840</span><br><span class="line">1841</span><br><span class="line">1842</span><br><span class="line">1843</span><br><span class="line">1844</span><br><span class="line">1845</span><br><span class="line">1846</span><br><span class="line">1847</span><br><span class="line">1848</span><br><span class="line">1849</span><br><span class="line">1850</span><br><span class="line">1851</span><br><span class="line">1852</span><br><span class="line">1853</span><br><span class="line">1854</span><br><span class="line">1855</span><br><span class="line">1856</span><br><span class="line">1857</span><br><span class="line">1858</span><br><span class="line">1859</span><br><span class="line">1860</span><br><span class="line">1861</span><br><span class="line">1862</span><br><span class="line">1863</span><br><span class="line">1864</span><br><span class="line">1865</span><br><span class="line">1866</span><br><span class="line">1867</span><br><span class="line">1868</span><br><span class="line">1869</span><br><span class="line">1870</span><br><span class="line">1871</span><br><span class="line">1872</span><br><span class="line">1873</span><br><span class="line">1874</span><br><span class="line">1875</span><br><span class="line">1876</span><br><span class="line">1877</span><br><span class="line">1878</span><br><span class="line">1879</span><br><span class="line">1880</span><br><span class="line">1881</span><br><span class="line">1882</span><br><span class="line">1883</span><br><span class="line">1884</span><br><span class="line">1885</span><br><span class="line">1886</span><br><span class="line">1887</span><br><span class="line">1888</span><br><span class="line">1889</span><br><span class="line">1890</span><br><span class="line">1891</span><br><span class="line">1892</span><br><span class="line">1893</span><br><span class="line">1894</span><br><span class="line">1895</span><br><span class="line">1896</span><br><span class="line">1897</span><br><span class="line">1898</span><br><span class="line">1899</span><br><span class="line">1900</span><br><span class="line">1901</span><br><span class="line">1902</span><br><span class="line">1903</span><br><span class="line">1904</span><br><span class="line">1905</span><br><span class="line">1906</span><br><span class="line">1907</span><br><span class="line">1908</span><br><span class="line">1909</span><br><span class="line">1910</span><br><span class="line">1911</span><br><span class="line">1912</span><br><span class="line">1913</span><br><span class="line">1914</span><br><span class="line">1915</span><br><span class="line">1916</span><br><span class="line">1917</span><br><span class="line">1918</span><br><span class="line">1919</span><br><span class="line">1920</span><br><span class="line">1921</span><br><span class="line">1922</span><br><span class="line">1923</span><br><span class="line">1924</span><br><span class="line">1925</span><br><span class="line">1926</span><br><span class="line">1927</span><br><span class="line">1928</span><br><span class="line">1929</span><br><span class="line">1930</span><br><span class="line">1931</span><br><span class="line">1932</span><br><span class="line">1933</span><br><span class="line">1934</span><br><span class="line">1935</span><br><span class="line">1936</span><br><span class="line">1937</span><br><span class="line">1938</span><br><span class="line">1939</span><br><span class="line">1940</span><br><span class="line">1941</span><br><span class="line">1942</span><br><span class="line">1943</span><br><span class="line">1944</span><br><span class="line">1945</span><br><span class="line">1946</span><br><span class="line">1947</span><br><span class="line">1948</span><br><span class="line">1949</span><br><span class="line">1950</span><br><span class="line">1951</span><br><span class="line">1952</span><br><span class="line">1953</span><br><span class="line">1954</span><br><span class="line">1955</span><br><span class="line">1956</span><br><span class="line">1957</span><br><span class="line">1958</span><br><span class="line">1959</span><br><span class="line">1960</span><br><span class="line">1961</span><br><span class="line">1962</span><br><span class="line">1963</span><br><span class="line">1964</span><br><span class="line">1965</span><br><span class="line">1966</span><br><span class="line">1967</span><br><span class="line">1968</span><br><span class="line">1969</span><br><span class="line">1970</span><br><span class="line">1971</span><br><span class="line">1972</span><br><span class="line">1973</span><br><span class="line">1974</span><br><span class="line">1975</span><br><span class="line">1976</span><br><span class="line">1977</span><br><span class="line">1978</span><br><span class="line">1979</span><br><span class="line">1980</span><br><span class="line">1981</span><br><span class="line">1982</span><br><span class="line">1983</span><br><span class="line">1984</span><br><span class="line">1985</span><br><span class="line">1986</span><br><span class="line">1987</span><br><span class="line">1988</span><br><span class="line">1989</span><br><span class="line">1990</span><br><span class="line">1991</span><br><span class="line">1992</span><br><span class="line">1993</span><br><span class="line">1994</span><br><span class="line">1995</span><br><span class="line">1996</span><br><span class="line">1997</span><br><span class="line">1998</span><br><span class="line">1999</span><br><span class="line">2000</span><br><span class="line">2001</span><br><span class="line">2002</span><br><span class="line">2003</span><br><span class="line">2004</span><br><span class="line">2005</span><br><span class="line">2006</span><br><span class="line">2007</span><br><span class="line">2008</span><br><span class="line">2009</span><br><span class="line">2010</span><br><span class="line">2011</span><br><span class="line">2012</span><br><span class="line">2013</span><br><span class="line">2014</span><br><span class="line">2015</span><br><span class="line">2016</span><br><span class="line">2017</span><br><span class="line">2018</span><br><span class="line">2019</span><br><span class="line">2020</span><br><span class="line">2021</span><br><span class="line">2022</span><br><span class="line">2023</span><br><span class="line">2024</span><br><span class="line">2025</span><br><span class="line">2026</span><br><span class="line">2027</span><br><span class="line">2028</span><br><span class="line">2029</span><br><span class="line">2030</span><br><span class="line">2031</span><br><span class="line">2032</span><br><span class="line">2033</span><br><span class="line">2034</span><br><span class="line">2035</span><br><span class="line">2036</span><br><span class="line">2037</span><br><span class="line">2038</span><br><span class="line">2039</span><br><span class="line">2040</span><br><span class="line">2041</span><br><span class="line">2042</span><br><span class="line">2043</span><br><span class="line">2044</span><br><span class="line">2045</span><br><span class="line">2046</span><br><span class="line">2047</span><br><span class="line">2048</span><br><span class="line">2049</span><br><span class="line">2050</span><br><span class="line">2051</span><br><span class="line">2052</span><br><span class="line">2053</span><br><span class="line">2054</span><br><span class="line">2055</span><br><span class="line">2056</span><br><span class="line">2057</span><br><span class="line">2058</span><br><span class="line">2059</span><br><span class="line">2060</span><br><span class="line">2061</span><br><span class="line">2062</span><br><span class="line">2063</span><br><span class="line">2064</span><br><span class="line">2065</span><br><span class="line">2066</span><br><span class="line">2067</span><br><span class="line">2068</span><br><span class="line">2069</span><br><span class="line">2070</span><br><span class="line">2071</span><br><span class="line">2072</span><br><span class="line">2073</span><br><span class="line">2074</span><br><span class="line">2075</span><br><span class="line">2076</span><br><span class="line">2077</span><br><span class="line">2078</span><br><span class="line">2079</span><br><span class="line">2080</span><br><span class="line">2081</span><br><span class="line">2082</span><br><span class="line">2083</span><br><span class="line">2084</span><br><span class="line">2085</span><br><span class="line">2086</span><br><span class="line">2087</span><br><span class="line">2088</span><br><span class="line">2089</span><br><span class="line">2090</span><br><span class="line">2091</span><br><span class="line">2092</span><br><span class="line">2093</span><br><span class="line">2094</span><br><span class="line">2095</span><br><span class="line">2096</span><br><span class="line">2097</span><br><span class="line">2098</span><br><span class="line">2099</span><br><span class="line">2100</span><br><span class="line">2101</span><br><span class="line">2102</span><br><span class="line">2103</span><br><span class="line">2104</span><br><span class="line">2105</span><br><span class="line">2106</span><br><span class="line">2107</span><br><span class="line">2108</span><br><span class="line">2109</span><br><span class="line">2110</span><br><span class="line">2111</span><br><span class="line">2112</span><br><span class="line">2113</span><br><span class="line">2114</span><br><span class="line">2115</span><br><span class="line">2116</span><br><span class="line">2117</span><br><span class="line">2118</span><br><span class="line">2119</span><br><span class="line">2120</span><br><span class="line">2121</span><br><span class="line">2122</span><br><span class="line">2123</span><br><span class="line">2124</span><br><span class="line">2125</span><br><span class="line">2126</span><br><span class="line">2127</span><br><span class="line">2128</span><br><span class="line">2129</span><br><span class="line">2130</span><br><span class="line">2131</span><br><span class="line">2132</span><br><span class="line">2133</span><br><span class="line">2134</span><br><span class="line">2135</span><br><span class="line">2136</span><br><span class="line">2137</span><br><span class="line">2138</span><br><span class="line">2139</span><br><span class="line">2140</span><br><span class="line">2141</span><br><span class="line">2142</span><br><span class="line">2143</span><br><span class="line">2144</span><br><span class="line">2145</span><br><span class="line">2146</span><br><span class="line">2147</span><br><span class="line">2148</span><br><span class="line">2149</span><br><span class="line">2150</span><br><span class="line">2151</span><br><span class="line">2152</span><br><span class="line">2153</span><br><span class="line">2154</span><br><span class="line">2155</span><br><span class="line">2156</span><br><span class="line">2157</span><br><span class="line">2158</span><br><span class="line">2159</span><br><span class="line">2160</span><br><span class="line">2161</span><br><span class="line">2162</span><br><span class="line">2163</span><br><span class="line">2164</span><br><span class="line">2165</span><br><span class="line">2166</span><br><span class="line">2167</span><br><span class="line">2168</span><br><span class="line">2169</span><br><span class="line">2170</span><br><span class="line">2171</span><br><span class="line">2172</span><br><span class="line">2173</span><br><span class="line">2174</span><br><span class="line">2175</span><br><span class="line">2176</span><br><span class="line">2177</span><br><span class="line">2178</span><br><span class="line">2179</span><br><span class="line">2180</span><br><span class="line">2181</span><br><span class="line">2182</span><br><span class="line">2183</span><br><span class="line">2184</span><br><span class="line">2185</span><br><span class="line">2186</span><br><span class="line">2187</span><br><span class="line">2188</span><br><span class="line">2189</span><br><span class="line">2190</span><br><span class="line">2191</span><br><span class="line">2192</span><br><span class="line">2193</span><br><span class="line">2194</span><br><span class="line">2195</span><br><span class="line">2196</span><br><span class="line">2197</span><br><span class="line">2198</span><br><span class="line">2199</span><br><span class="line">2200</span><br><span class="line">2201</span><br><span class="line">2202</span><br><span class="line">2203</span><br><span class="line">2204</span><br><span class="line">2205</span><br><span class="line">2206</span><br><span class="line">2207</span><br><span class="line">2208</span><br><span class="line">2209</span><br><span class="line">2210</span><br><span class="line">2211</span><br><span class="line">2212</span><br><span class="line">2213</span><br><span class="line">2214</span><br><span class="line">2215</span><br><span class="line">2216</span><br><span class="line">2217</span><br><span class="line">2218</span><br><span class="line">2219</span><br><span class="line">2220</span><br><span class="line">2221</span><br><span class="line">2222</span><br><span class="line">2223</span><br><span class="line">2224</span><br><span class="line">2225</span><br><span class="line">2226</span><br><span class="line">2227</span><br><span class="line">2228</span><br><span class="line">2229</span><br><span class="line">2230</span><br><span class="line">2231</span><br><span class="line">2232</span><br><span class="line">2233</span><br><span class="line">2234</span><br><span class="line">2235</span><br><span class="line">2236</span><br><span class="line">2237</span><br><span class="line">2238</span><br><span class="line">2239</span><br><span class="line">2240</span><br><span class="line">2241</span><br><span class="line">2242</span><br><span class="line">2243</span><br><span class="line">2244</span><br><span class="line">2245</span><br><span class="line">2246</span><br><span class="line">2247</span><br><span class="line">2248</span><br><span class="line">2249</span><br><span class="line">2250</span><br><span class="line">2251</span><br><span class="line">2252</span><br><span class="line">2253</span><br><span class="line">2254</span><br><span class="line">2255</span><br><span class="line">2256</span><br><span class="line">2257</span><br><span class="line">2258</span><br><span class="line">2259</span><br><span class="line">2260</span><br><span class="line">2261</span><br><span class="line">2262</span><br><span class="line">2263</span><br><span class="line">2264</span><br><span class="line">2265</span><br><span class="line">2266</span><br><span class="line">2267</span><br><span class="line">2268</span><br><span class="line">2269</span><br><span class="line">2270</span><br><span class="line">2271</span><br><span class="line">2272</span><br><span class="line">2273</span><br><span class="line">2274</span><br><span class="line">2275</span><br><span class="line">2276</span><br><span class="line">2277</span><br><span class="line">2278</span><br><span class="line">2279</span><br><span class="line">2280</span><br><span class="line">2281</span><br><span class="line">2282</span><br><span class="line">2283</span><br><span class="line">2284</span><br><span class="line">2285</span><br><span class="line">2286</span><br><span class="line">2287</span><br><span class="line">2288</span><br><span class="line">2289</span><br><span class="line">2290</span><br><span class="line">2291</span><br><span class="line">2292</span><br><span class="line">2293</span><br><span class="line">2294</span><br><span class="line">2295</span><br><span class="line">2296</span><br><span class="line">2297</span><br><span class="line">2298</span><br><span class="line">2299</span><br><span class="line">2300</span><br><span class="line">2301</span><br><span class="line">2302</span><br><span class="line">2303</span><br><span class="line">2304</span><br><span class="line">2305</span><br><span class="line">2306</span><br><span class="line">2307</span><br><span class="line">2308</span><br><span class="line">2309</span><br><span class="line">2310</span><br><span class="line">2311</span><br><span class="line">2312</span><br><span class="line">2313</span><br><span class="line">2314</span><br><span class="line">2315</span><br><span class="line">2316</span><br><span class="line">2317</span><br><span class="line">2318</span><br><span class="line">2319</span><br><span class="line">2320</span><br><span class="line">2321</span><br><span class="line">2322</span><br><span class="line">2323</span><br><span class="line">2324</span><br><span class="line">2325</span><br><span class="line">2326</span><br><span class="line">2327</span><br><span class="line">2328</span><br><span class="line">2329</span><br><span class="line">2330</span><br><span class="line">2331</span><br><span class="line">2332</span><br><span class="line">2333</span><br><span class="line">2334</span><br><span class="line">2335</span><br><span class="line">2336</span><br><span class="line">2337</span><br><span class="line">2338</span><br><span class="line">2339</span><br><span class="line">2340</span><br><span class="line">2341</span><br><span class="line">2342</span><br><span class="line">2343</span><br><span class="line">2344</span><br><span class="line">2345</span><br><span class="line">2346</span><br><span class="line">2347</span><br><span class="line">2348</span><br><span class="line">2349</span><br><span class="line">2350</span><br><span class="line">2351</span><br><span class="line">2352</span><br><span class="line">2353</span><br><span class="line">2354</span><br><span class="line">2355</span><br><span class="line">2356</span><br><span class="line">2357</span><br><span class="line">2358</span><br><span class="line">2359</span><br><span class="line">2360</span><br><span class="line">2361</span><br><span class="line">2362</span><br><span class="line">2363</span><br><span class="line">2364</span><br><span class="line">2365</span><br><span class="line">2366</span><br><span class="line">2367</span><br><span class="line">2368</span><br><span class="line">2369</span><br><span class="line">2370</span><br><span class="line">2371</span><br><span class="line">2372</span><br><span class="line">2373</span><br><span class="line">2374</span><br><span class="line">2375</span><br><span class="line">2376</span><br><span class="line">2377</span><br><span class="line">2378</span><br><span class="line">2379</span><br><span class="line">2380</span><br><span class="line">2381</span><br><span class="line">2382</span><br><span class="line">2383</span><br><span class="line">2384</span><br><span class="line">2385</span><br><span class="line">2386</span><br><span class="line">2387</span><br><span class="line">2388</span><br><span class="line">2389</span><br><span class="line">2390</span><br><span class="line">2391</span><br><span class="line">2392</span><br><span class="line">2393</span><br><span class="line">2394</span><br><span class="line">2395</span><br><span class="line">2396</span><br><span class="line">2397</span><br><span class="line">2398</span><br><span class="line">2399</span><br><span class="line">2400</span><br><span class="line">2401</span><br><span class="line">2402</span><br><span class="line">2403</span><br><span class="line">2404</span><br><span class="line">2405</span><br><span class="line">2406</span><br><span class="line">2407</span><br><span class="line">2408</span><br><span class="line">2409</span><br><span class="line">2410</span><br><span class="line">2411</span><br><span class="line">2412</span><br><span class="line">2413</span><br><span class="line">2414</span><br><span class="line">2415</span><br><span class="line">2416</span><br><span class="line">2417</span><br><span class="line">2418</span><br><span class="line">2419</span><br><span class="line">2420</span><br><span class="line">2421</span><br><span class="line">2422</span><br><span class="line">2423</span><br><span class="line">2424</span><br><span class="line">2425</span><br><span class="line">2426</span><br><span class="line">2427</span><br><span class="line">2428</span><br><span class="line">2429</span><br><span class="line">2430</span><br><span class="line">2431</span><br><span class="line">2432</span><br><span class="line">2433</span><br><span class="line">2434</span><br><span class="line">2435</span><br><span class="line">2436</span><br><span class="line">2437</span><br><span class="line">2438</span><br><span class="line">2439</span><br><span class="line">2440</span><br><span class="line">2441</span><br><span class="line">2442</span><br><span class="line">2443</span><br><span class="line">2444</span><br><span class="line">2445</span><br><span class="line">2446</span><br><span class="line">2447</span><br><span class="line">2448</span><br><span class="line">2449</span><br><span class="line">2450</span><br><span class="line">2451</span><br><span class="line">2452</span><br><span class="line">2453</span><br><span class="line">2454</span><br><span class="line">2455</span><br><span class="line">2456</span><br><span class="line">2457</span><br><span class="line">2458</span><br><span class="line">2459</span><br><span class="line">2460</span><br><span class="line">2461</span><br><span class="line">2462</span><br><span class="line">2463</span><br><span class="line">2464</span><br><span class="line">2465</span><br><span class="line">2466</span><br><span class="line">2467</span><br><span class="line">2468</span><br><span class="line">2469</span><br><span class="line">2470</span><br><span class="line">2471</span><br><span class="line">2472</span><br><span class="line">2473</span><br><span class="line">2474</span><br><span class="line">2475</span><br><span class="line">2476</span><br><span class="line">2477</span><br><span class="line">2478</span><br><span class="line">2479</span><br><span class="line">2480</span><br><span class="line">2481</span><br><span class="line">2482</span><br><span class="line">2483</span><br><span class="line">2484</span><br><span class="line">2485</span><br><span class="line">2486</span><br><span class="line">2487</span><br><span class="line">2488</span><br><span class="line">2489</span><br><span class="line">2490</span><br><span class="line">2491</span><br><span class="line">2492</span><br><span class="line">2493</span><br><span class="line">2494</span><br><span class="line">2495</span><br><span class="line">2496</span><br><span class="line">2497</span><br><span class="line">2498</span><br><span class="line">2499</span><br><span class="line">2500</span><br><span class="line">2501</span><br><span class="line">2502</span><br><span class="line">2503</span><br><span class="line">2504</span><br><span class="line">2505</span><br><span class="line">2506</span><br><span class="line">2507</span><br><span class="line">2508</span><br><span class="line">2509</span><br><span class="line">2510</span><br><span class="line">2511</span><br><span class="line">2512</span><br><span class="line">2513</span><br><span class="line">2514</span><br><span class="line">2515</span><br><span class="line">2516</span><br><span class="line">2517</span><br><span class="line">2518</span><br><span class="line">2519</span><br><span class="line">2520</span><br><span class="line">2521</span><br><span class="line">2522</span><br><span class="line">2523</span><br><span class="line">2524</span><br><span class="line">2525</span><br><span class="line">2526</span><br><span class="line">2527</span><br><span class="line">2528</span><br><span class="line">2529</span><br><span class="line">2530</span><br><span class="line">2531</span><br><span class="line">2532</span><br><span class="line">2533</span><br><span class="line">2534</span><br><span class="line">2535</span><br><span class="line">2536</span><br><span class="line">2537</span><br><span class="line">2538</span><br><span class="line">2539</span><br><span class="line">2540</span><br><span class="line">2541</span><br><span class="line">2542</span><br><span class="line">2543</span><br><span class="line">2544</span><br><span class="line">2545</span><br><span class="line">2546</span><br><span class="line">2547</span><br><span class="line">2548</span><br><span class="line">2549</span><br><span class="line">2550</span><br><span class="line">2551</span><br><span class="line">2552</span><br><span class="line">2553</span><br><span class="line">2554</span><br><span class="line">2555</span><br><span class="line">2556</span><br><span class="line">2557</span><br><span class="line">2558</span><br><span class="line">2559</span><br><span class="line">2560</span><br><span class="line">2561</span><br><span class="line">2562</span><br><span class="line">2563</span><br><span class="line">2564</span><br><span class="line">2565</span><br><span class="line">2566</span><br><span class="line">2567</span><br><span class="line">2568</span><br><span class="line">2569</span><br><span class="line">2570</span><br><span class="line">2571</span><br><span class="line">2572</span><br><span class="line">2573</span><br><span class="line">2574</span><br><span class="line">2575</span><br><span class="line">2576</span><br><span class="line">2577</span><br><span class="line">2578</span><br><span class="line">2579</span><br><span class="line">2580</span><br><span class="line">2581</span><br><span class="line">2582</span><br><span class="line">2583</span><br><span class="line">2584</span><br><span class="line">2585</span><br><span class="line">2586</span><br><span class="line">2587</span><br><span class="line">2588</span><br><span class="line">2589</span><br><span class="line">2590</span><br><span class="line">2591</span><br><span class="line">2592</span><br><span class="line">2593</span><br><span class="line">2594</span><br><span class="line">2595</span><br><span class="line">2596</span><br><span class="line">2597</span><br><span class="line">2598</span><br><span class="line">2599</span><br><span class="line">2600</span><br><span class="line">2601</span><br><span class="line">2602</span><br><span class="line">2603</span><br><span class="line">2604</span><br><span class="line">2605</span><br><span class="line">2606</span><br><span class="line">2607</span><br><span class="line">2608</span><br><span class="line">2609</span><br><span class="line">2610</span><br><span class="line">2611</span><br><span class="line">2612</span><br><span class="line">2613</span><br><span class="line">2614</span><br><span class="line">2615</span><br><span class="line">2616</span><br><span class="line">2617</span><br><span class="line">2618</span><br><span class="line">2619</span><br><span class="line">2620</span><br><span class="line">2621</span><br><span class="line">2622</span><br><span class="line">2623</span><br><span class="line">2624</span><br><span class="line">2625</span><br><span class="line">2626</span><br><span class="line">2627</span><br><span class="line">2628</span><br><span class="line">2629</span><br><span class="line">2630</span><br><span class="line">2631</span><br><span class="line">2632</span><br><span class="line">2633</span><br><span class="line">2634</span><br><span class="line">2635</span><br><span class="line">2636</span><br><span class="line">2637</span><br><span class="line">2638</span><br><span class="line">2639</span><br><span class="line">2640</span><br><span class="line">2641</span><br><span class="line">2642</span><br><span class="line">2643</span><br><span class="line">2644</span><br><span class="line">2645</span><br><span class="line">2646</span><br><span class="line">2647</span><br><span class="line">2648</span><br><span class="line">2649</span><br><span class="line">2650</span><br><span class="line">2651</span><br><span class="line">2652</span><br><span class="line">2653</span><br><span class="line">2654</span><br><span class="line">2655</span><br><span class="line">2656</span><br><span class="line">2657</span><br><span class="line">2658</span><br><span class="line">2659</span><br><span class="line">2660</span><br><span class="line">2661</span><br><span class="line">2662</span><br><span class="line">2663</span><br><span class="line">2664</span><br><span class="line">2665</span><br><span class="line">2666</span><br><span class="line">2667</span><br><span class="line">2668</span><br><span class="line">2669</span><br><span class="line">2670</span><br><span class="line">2671</span><br><span class="line">2672</span><br><span class="line">2673</span><br><span class="line">2674</span><br><span class="line">2675</span><br><span class="line">2676</span><br><span class="line">2677</span><br><span class="line">2678</span><br><span class="line">2679</span><br><span class="line">2680</span><br><span class="line">2681</span><br><span class="line">2682</span><br><span class="line">2683</span><br><span class="line">2684</span><br><span class="line">2685</span><br><span class="line">2686</span><br><span class="line">2687</span><br><span class="line">2688</span><br><span class="line">2689</span><br><span class="line">2690</span><br><span class="line">2691</span><br><span class="line">2692</span><br><span class="line">2693</span><br><span class="line">2694</span><br><span class="line">2695</span><br><span class="line">2696</span><br><span class="line">2697</span><br><span class="line">2698</span><br><span class="line">2699</span><br><span class="line">2700</span><br><span class="line">2701</span><br><span class="line">2702</span><br><span class="line">2703</span><br><span class="line">2704</span><br><span class="line">2705</span><br><span class="line">2706</span><br><span class="line">2707</span><br><span class="line">2708</span><br><span class="line">2709</span><br><span class="line">2710</span><br><span class="line">2711</span><br><span class="line">2712</span><br><span class="line">2713</span><br><span class="line">2714</span><br><span class="line">2715</span><br><span class="line">2716</span><br><span class="line">2717</span><br><span class="line">2718</span><br><span class="line">2719</span><br><span class="line">2720</span><br><span class="line">2721</span><br><span class="line">2722</span><br><span class="line">2723</span><br><span class="line">2724</span><br><span class="line">2725</span><br><span class="line">2726</span><br><span class="line">2727</span><br><span class="line">2728</span><br><span class="line">2729</span><br><span class="line">2730</span><br><span class="line">2731</span><br><span class="line">2732</span><br><span class="line">2733</span><br><span class="line">2734</span><br><span class="line">2735</span><br><span class="line">2736</span><br><span class="line">2737</span><br><span class="line">2738</span><br><span class="line">2739</span><br><span class="line">2740</span><br><span class="line">2741</span><br><span class="line">2742</span><br><span class="line">2743</span><br><span class="line">2744</span><br><span class="line">2745</span><br><span class="line">2746</span><br><span class="line">2747</span><br><span class="line">2748</span><br><span class="line">2749</span><br><span class="line">2750</span><br><span class="line">2751</span><br><span class="line">2752</span><br><span class="line">2753</span><br><span class="line">2754</span><br><span class="line">2755</span><br><span class="line">2756</span><br><span class="line">2757</span><br><span class="line">2758</span><br><span class="line">2759</span><br><span class="line">2760</span><br><span class="line">2761</span><br><span class="line">2762</span><br><span class="line">2763</span><br><span class="line">2764</span><br><span class="line">2765</span><br><span class="line">2766</span><br><span class="line">2767</span><br><span class="line">2768</span><br><span class="line">2769</span><br><span class="line">2770</span><br><span class="line">2771</span><br><span class="line">2772</span><br><span class="line">2773</span><br><span class="line">2774</span><br><span class="line">2775</span><br><span class="line">2776</span><br><span class="line">2777</span><br><span class="line">2778</span><br><span class="line">2779</span><br><span class="line">2780</span><br><span class="line">2781</span><br><span class="line">2782</span><br><span class="line">2783</span><br><span class="line">2784</span><br><span class="line">2785</span><br><span class="line">2786</span><br><span class="line">2787</span><br><span class="line">2788</span><br><span class="line">2789</span><br><span class="line">2790</span><br><span class="line">2791</span><br><span class="line">2792</span><br><span class="line">2793</span><br><span class="line">2794</span><br><span class="line">2795</span><br><span class="line">2796</span><br><span class="line">2797</span><br><span class="line">2798</span><br><span class="line">2799</span><br><span class="line">2800</span><br><span class="line">2801</span><br><span class="line">2802</span><br><span class="line">2803</span><br><span class="line">2804</span><br><span class="line">2805</span><br><span class="line">2806</span><br><span class="line">2807</span><br><span class="line">2808</span><br><span class="line">2809</span><br><span class="line">2810</span><br><span class="line">2811</span><br><span class="line">2812</span><br><span class="line">2813</span><br><span class="line">2814</span><br><span class="line">2815</span><br><span class="line">2816</span><br><span class="line">2817</span><br><span class="line">2818</span><br><span class="line">2819</span><br><span class="line">2820</span><br><span class="line">2821</span><br><span class="line">2822</span><br><span class="line">2823</span><br><span class="line">2824</span><br><span class="line">2825</span><br><span class="line">2826</span><br><span class="line">2827</span><br><span class="line">2828</span><br><span class="line">2829</span><br><span class="line">2830</span><br><span class="line">2831</span><br><span class="line">2832</span><br><span class="line">2833</span><br><span class="line">2834</span><br><span class="line">2835</span><br><span class="line">2836</span><br><span class="line">2837</span><br><span class="line">2838</span><br><span class="line">2839</span><br><span class="line">2840</span><br><span class="line">2841</span><br><span class="line">2842</span><br><span class="line">2843</span><br><span class="line">2844</span><br><span class="line">2845</span><br><span class="line">2846</span><br><span class="line">2847</span><br><span class="line">2848</span><br><span class="line">2849</span><br><span class="line">2850</span><br><span class="line">2851</span><br><span class="line">2852</span><br><span class="line">2853</span><br><span class="line">2854</span><br><span class="line">2855</span><br><span class="line">2856</span><br><span class="line">2857</span><br><span class="line">2858</span><br><span class="line">2859</span><br><span class="line">2860</span><br><span class="line">2861</span><br><span class="line">2862</span><br><span class="line">2863</span><br><span class="line">2864</span><br><span class="line">2865</span><br><span class="line">2866</span><br><span class="line">2867</span><br><span class="line">2868</span><br><span class="line">2869</span><br><span class="line">2870</span><br><span class="line">2871</span><br><span class="line">2872</span><br><span class="line">2873</span><br><span class="line">2874</span><br><span class="line">2875</span><br><span class="line">2876</span><br><span class="line">2877</span><br><span class="line">2878</span><br><span class="line">2879</span><br><span class="line">2880</span><br><span class="line">2881</span><br><span class="line">2882</span><br><span class="line">2883</span><br><span class="line">2884</span><br><span class="line">2885</span><br><span class="line">2886</span><br><span class="line">2887</span><br><span class="line">2888</span><br><span class="line">2889</span><br><span class="line">2890</span><br><span class="line">2891</span><br><span class="line">2892</span><br><span class="line">2893</span><br><span class="line">2894</span><br><span class="line">2895</span><br><span class="line">2896</span><br><span class="line">2897</span><br><span class="line">2898</span><br><span class="line">2899</span><br><span class="line">2900</span><br><span class="line">2901</span><br><span class="line">2902</span><br><span class="line">2903</span><br><span class="line">2904</span><br><span class="line">2905</span><br><span class="line">2906</span><br><span class="line">2907</span><br><span class="line">2908</span><br><span class="line">2909</span><br><span class="line">2910</span><br><span class="line">2911</span><br><span class="line">2912</span><br><span class="line">2913</span><br><span class="line">2914</span><br><span class="line">2915</span><br><span class="line">2916</span><br><span class="line">2917</span><br><span class="line">2918</span><br><span class="line">2919</span><br><span class="line">2920</span><br><span class="line">2921</span><br><span class="line">2922</span><br><span class="line">2923</span><br><span class="line">2924</span><br><span class="line">2925</span><br><span class="line">2926</span><br><span class="line">2927</span><br><span class="line">2928</span><br><span class="line">2929</span><br><span class="line">2930</span><br><span class="line">2931</span><br><span class="line">2932</span><br><span class="line">2933</span><br><span class="line">2934</span><br><span class="line">2935</span><br><span class="line">2936</span><br><span class="line">2937</span><br><span class="line">2938</span><br><span class="line">2939</span><br><span class="line">2940</span><br><span class="line">2941</span><br><span class="line">2942</span><br><span class="line">2943</span><br><span class="line">2944</span><br><span class="line">2945</span><br><span class="line">2946</span><br><span class="line">2947</span><br><span class="line">2948</span><br><span class="line">2949</span><br><span class="line">2950</span><br><span class="line">2951</span><br><span class="line">2952</span><br><span class="line">2953</span><br><span class="line">2954</span><br><span class="line">2955</span><br><span class="line">2956</span><br><span class="line">2957</span><br><span class="line">2958</span><br><span class="line">2959</span><br><span class="line">2960</span><br><span class="line">2961</span><br><span class="line">2962</span><br><span class="line">2963</span><br><span class="line">2964</span><br><span class="line">2965</span><br><span class="line">2966</span><br><span class="line">2967</span><br><span class="line">2968</span><br><span class="line">2969</span><br><span class="line">2970</span><br><span class="line">2971</span><br><span class="line">2972</span><br><span class="line">2973</span><br><span class="line">2974</span><br><span class="line">2975</span><br><span class="line">2976</span><br><span class="line">2977</span><br><span class="line">2978</span><br><span class="line">2979</span><br><span class="line">2980</span><br><span class="line">2981</span><br><span class="line">2982</span><br><span class="line">2983</span><br><span class="line">2984</span><br><span class="line">2985</span><br><span class="line">2986</span><br><span class="line">2987</span><br><span class="line">2988</span><br><span class="line">2989</span><br><span class="line">2990</span><br><span class="line">2991</span><br><span class="line">2992</span><br><span class="line">2993</span><br><span class="line">2994</span><br><span class="line">2995</span><br><span class="line">2996</span><br><span class="line">2997</span><br><span class="line">2998</span><br><span class="line">2999</span><br><span class="line">3000</span><br><span class="line">3001</span><br><span class="line">3002</span><br><span class="line">3003</span><br><span class="line">3004</span><br><span class="line">3005</span><br><span class="line">3006</span><br><span class="line">3007</span><br><span class="line">3008</span><br><span class="line">3009</span><br><span class="line">3010</span><br><span class="line">3011</span><br><span class="line">3012</span><br><span class="line">3013</span><br><span class="line">3014</span><br><span class="line">3015</span><br><span class="line">3016</span><br><span class="line">3017</span><br><span class="line">3018</span><br><span class="line">3019</span><br><span class="line">3020</span><br><span class="line">3021</span><br><span class="line">3022</span><br><span class="line">3023</span><br><span class="line">3024</span><br><span class="line">3025</span><br><span class="line">3026</span><br><span class="line">3027</span><br><span class="line">3028</span><br><span class="line">3029</span><br><span class="line">3030</span><br><span class="line">3031</span><br><span class="line">3032</span><br><span class="line">3033</span><br><span class="line">3034</span><br><span class="line">3035</span><br><span class="line">3036</span><br><span class="line">3037</span><br><span class="line">3038</span><br><span class="line">3039</span><br><span class="line">3040</span><br><span class="line">3041</span><br><span class="line">3042</span><br><span class="line">3043</span><br><span class="line">3044</span><br><span class="line">3045</span><br><span class="line">3046</span><br><span class="line">3047</span><br><span class="line">3048</span><br><span class="line">3049</span><br><span class="line">3050</span><br><span class="line">3051</span><br><span class="line">3052</span><br><span class="line">3053</span><br><span class="line">3054</span><br><span class="line">3055</span><br><span class="line">3056</span><br><span class="line">3057</span><br><span class="line">3058</span><br><span class="line">3059</span><br><span class="line">3060</span><br><span class="line">3061</span><br><span class="line">3062</span><br><span class="line">3063</span><br><span class="line">3064</span><br><span class="line">3065</span><br><span class="line">3066</span><br><span class="line">3067</span><br><span class="line">3068</span><br><span class="line">3069</span><br><span class="line">3070</span><br><span class="line">3071</span><br><span class="line">3072</span><br><span class="line">3073</span><br><span class="line">3074</span><br><span class="line">3075</span><br><span class="line">3076</span><br><span class="line">3077</span><br><span class="line">3078</span><br><span class="line">3079</span><br><span class="line">3080</span><br><span class="line">3081</span><br><span class="line">3082</span><br><span class="line">3083</span><br><span class="line">3084</span><br><span class="line">3085</span><br><span class="line">3086</span><br><span class="line">3087</span><br><span class="line">3088</span><br><span class="line">3089</span><br><span class="line">3090</span><br><span class="line">3091</span><br><span class="line">3092</span><br><span class="line">3093</span><br><span class="line">3094</span><br><span class="line">3095</span><br><span class="line">3096</span><br><span class="line">3097</span><br><span class="line">3098</span><br><span class="line">3099</span><br><span class="line">3100</span><br><span class="line">3101</span><br><span class="line">3102</span><br><span class="line">3103</span><br><span class="line">3104</span><br><span class="line">3105</span><br><span class="line">3106</span><br><span class="line">3107</span><br><span class="line">3108</span><br><span class="line">3109</span><br><span class="line">3110</span><br><span class="line">3111</span><br><span class="line">3112</span><br><span class="line">3113</span><br><span class="line">3114</span><br><span class="line">3115</span><br><span class="line">3116</span><br><span class="line">3117</span><br><span class="line">3118</span><br><span class="line">3119</span><br><span class="line">3120</span><br><span class="line">3121</span><br><span class="line">3122</span><br><span class="line">3123</span><br><span class="line">3124</span><br><span class="line">3125</span><br><span class="line">3126</span><br><span class="line">3127</span><br><span class="line">3128</span><br><span class="line">3129</span><br><span class="line">3130</span><br><span class="line">3131</span><br><span class="line">3132</span><br><span class="line">3133</span><br><span class="line">3134</span><br><span class="line">3135</span><br><span class="line">3136</span><br><span class="line">3137</span><br><span class="line">3138</span><br><span class="line">3139</span><br><span class="line">3140</span><br><span class="line">3141</span><br><span class="line">3142</span><br><span class="line">3143</span><br><span class="line">3144</span><br><span class="line">3145</span><br><span class="line">3146</span><br><span class="line">3147</span><br><span class="line">3148</span><br><span class="line">3149</span><br><span class="line">3150</span><br><span class="line">3151</span><br><span class="line">3152</span><br><span class="line">3153</span><br><span class="line">3154</span><br><span class="line">3155</span><br><span class="line">3156</span><br><span class="line">3157</span><br><span class="line">3158</span><br><span class="line">3159</span><br><span class="line">3160</span><br><span class="line">3161</span><br><span class="line">3162</span><br><span class="line">3163</span><br><span class="line">3164</span><br><span class="line">3165</span><br><span class="line">3166</span><br><span class="line">3167</span><br><span class="line">3168</span><br><span class="line">3169</span><br><span class="line">3170</span><br><span class="line">3171</span><br><span class="line">3172</span><br><span class="line">3173</span><br><span class="line">3174</span><br><span class="line">3175</span><br><span class="line">3176</span><br><span class="line">3177</span><br><span class="line">3178</span><br><span class="line">3179</span><br><span class="line">3180</span><br><span class="line">3181</span><br><span class="line">3182</span><br><span class="line">3183</span><br><span class="line">3184</span><br><span class="line">3185</span><br><span class="line">3186</span><br><span class="line">3187</span><br><span class="line">3188</span><br><span class="line">3189</span><br><span class="line">3190</span><br><span class="line">3191</span><br><span class="line">3192</span><br><span class="line">3193</span><br><span class="line">3194</span><br><span class="line">3195</span><br><span class="line">3196</span><br><span class="line">3197</span><br><span class="line">3198</span><br><span class="line">3199</span><br><span class="line">3200</span><br><span class="line">3201</span><br><span class="line">3202</span><br><span class="line">3203</span><br><span class="line">3204</span><br><span class="line">3205</span><br><span class="line">3206</span><br><span class="line">3207</span><br><span class="line">3208</span><br><span class="line">3209</span><br><span class="line">3210</span><br><span class="line">3211</span><br><span class="line">3212</span><br><span class="line">3213</span><br><span class="line">3214</span><br><span class="line">3215</span><br><span class="line">3216</span><br><span class="line">3217</span><br><span class="line">3218</span><br><span class="line">3219</span><br><span class="line">3220</span><br><span class="line">3221</span><br><span class="line">3222</span><br><span class="line">3223</span><br><span class="line">3224</span><br><span class="line">3225</span><br><span class="line">3226</span><br><span class="line">3227</span><br><span class="line">3228</span><br><span class="line">3229</span><br><span class="line">3230</span><br><span class="line">3231</span><br><span class="line">3232</span><br><span class="line">3233</span><br><span class="line">3234</span><br><span class="line">3235</span><br><span class="line">3236</span><br><span class="line">3237</span><br><span class="line">3238</span><br><span class="line">3239</span><br><span class="line">3240</span><br><span class="line">3241</span><br><span class="line">3242</span><br><span class="line">3243</span><br><span class="line">3244</span><br><span class="line">3245</span><br><span class="line">3246</span><br><span class="line">3247</span><br><span class="line">3248</span><br><span class="line">3249</span><br><span class="line">3250</span><br><span class="line">3251</span><br><span class="line">3252</span><br><span class="line">3253</span><br><span class="line">3254</span><br><span class="line">3255</span><br><span class="line">3256</span><br><span class="line">3257</span><br><span class="line">3258</span><br><span class="line">3259</span><br><span class="line">3260</span><br><span class="line">3261</span><br><span class="line">3262</span><br><span class="line">3263</span><br><span class="line">3264</span><br><span class="line">3265</span><br><span class="line">3266</span><br><span class="line">3267</span><br><span class="line">3268</span><br><span class="line">3269</span><br><span class="line">3270</span><br><span class="line">3271</span><br><span class="line">3272</span><br><span class="line">3273</span><br><span class="line">3274</span><br><span class="line">3275</span><br><span class="line">3276</span><br><span class="line">3277</span><br><span class="line">3278</span><br><span class="line">3279</span><br><span class="line">3280</span><br><span class="line">3281</span><br><span class="line">3282</span><br><span class="line">3283</span><br><span class="line">3284</span><br><span class="line">3285</span><br><span class="line">3286</span><br><span class="line">3287</span><br><span class="line">3288</span><br><span class="line">3289</span><br><span class="line">3290</span><br><span class="line">3291</span><br><span class="line">3292</span><br><span class="line">3293</span><br><span class="line">3294</span><br><span class="line">3295</span><br><span class="line">3296</span><br><span class="line">3297</span><br><span class="line">3298</span><br><span class="line">3299</span><br><span class="line">3300</span><br><span class="line">3301</span><br><span class="line">3302</span><br><span class="line">3303</span><br><span class="line">3304</span><br><span class="line">3305</span><br><span class="line">3306</span><br><span class="line">3307</span><br><span class="line">3308</span><br><span class="line">3309</span><br><span class="line">3310</span><br><span class="line">3311</span><br><span class="line">3312</span><br><span class="line">3313</span><br><span class="line">3314</span><br><span class="line">3315</span><br><span class="line">3316</span><br><span class="line">3317</span><br><span class="line">3318</span><br><span class="line">3319</span><br><span class="line">3320</span><br><span class="line">3321</span><br><span class="line">3322</span><br><span class="line">3323</span><br><span class="line">3324</span><br><span class="line">3325</span><br><span class="line">3326</span><br><span class="line">3327</span><br><span class="line">3328</span><br><span class="line">3329</span><br><span class="line">3330</span><br><span class="line">3331</span><br><span class="line">3332</span><br><span class="line">3333</span><br><span class="line">3334</span><br><span class="line">3335</span><br><span class="line">3336</span><br><span class="line">3337</span><br><span class="line">3338</span><br><span class="line">3339</span><br><span class="line">3340</span><br><span class="line">3341</span><br><span class="line">3342</span><br><span class="line">3343</span><br><span class="line">3344</span><br><span class="line">3345</span><br><span class="line">3346</span><br><span class="line">3347</span><br><span class="line">3348</span><br><span class="line">3349</span><br><span class="line">3350</span><br><span class="line">3351</span><br><span class="line">3352</span><br><span class="line">3353</span><br><span class="line">3354</span><br><span class="line">3355</span><br><span class="line">3356</span><br><span class="line">3357</span><br><span class="line">3358</span><br><span class="line">3359</span><br><span class="line">3360</span><br><span class="line">3361</span><br><span class="line">3362</span><br><span class="line">3363</span><br><span class="line">3364</span><br><span class="line">3365</span><br><span class="line">3366</span><br><span class="line">3367</span><br><span class="line">3368</span><br><span class="line">3369</span><br><span class="line">3370</span><br><span class="line">3371</span><br><span class="line">3372</span><br><span class="line">3373</span><br><span class="line">3374</span><br><span class="line">3375</span><br><span class="line">3376</span><br><span class="line">3377</span><br><span class="line">3378</span><br><span class="line">3379</span><br><span class="line">3380</span><br><span class="line">3381</span><br><span class="line">3382</span><br><span class="line">3383</span><br><span class="line">3384</span><br><span class="line">3385</span><br><span class="line">3386</span><br><span class="line">3387</span><br><span class="line">3388</span><br><span class="line">3389</span><br><span class="line">3390</span><br><span class="line">3391</span><br><span class="line">3392</span><br><span class="line">3393</span><br><span class="line">3394</span><br><span class="line">3395</span><br><span class="line">3396</span><br><span class="line">3397</span><br><span class="line">3398</span><br><span class="line">3399</span><br><span class="line">3400</span><br><span class="line">3401</span><br><span class="line">3402</span><br><span class="line">3403</span><br><span class="line">3404</span><br><span class="line">3405</span><br><span class="line">3406</span><br><span class="line">3407</span><br><span class="line">3408</span><br><span class="line">3409</span><br><span class="line">3410</span><br><span class="line">3411</span><br><span class="line">3412</span><br><span class="line">3413</span><br><span class="line">3414</span><br><span class="line">3415</span><br><span class="line">3416</span><br><span class="line">3417</span><br><span class="line">3418</span><br><span class="line">3419</span><br><span class="line">3420</span><br><span class="line">3421</span><br><span class="line">3422</span><br><span class="line">3423</span><br><span class="line">3424</span><br><span class="line">3425</span><br><span class="line">3426</span><br><span class="line">3427</span><br><span class="line">3428</span><br><span class="line">3429</span><br><span class="line">3430</span><br><span class="line">3431</span><br><span class="line">3432</span><br><span class="line">3433</span><br><span class="line">3434</span><br><span class="line">3435</span><br><span class="line">3436</span><br><span class="line">3437</span><br><span class="line">3438</span><br><span class="line">3439</span><br><span class="line">3440</span><br><span class="line">3441</span><br><span class="line">3442</span><br><span class="line">3443</span><br><span class="line">3444</span><br><span class="line">3445</span><br><span class="line">3446</span><br><span class="line">3447</span><br><span class="line">3448</span><br><span class="line">3449</span><br><span class="line">3450</span><br><span class="line">3451</span><br><span class="line">3452</span><br><span class="line">3453</span><br><span class="line">3454</span><br><span class="line">3455</span><br><span class="line">3456</span><br><span class="line">3457</span><br><span class="line">3458</span><br><span class="line">3459</span><br><span class="line">3460</span><br><span class="line">3461</span><br><span class="line">3462</span><br><span class="line">3463</span><br><span class="line">3464</span><br><span class="line">3465</span><br><span class="line">3466</span><br><span class="line">3467</span><br><span class="line">3468</span><br><span class="line">3469</span><br><span class="line">3470</span><br><span class="line">3471</span><br><span class="line">3472</span><br><span class="line">3473</span><br><span class="line">3474</span><br><span class="line">3475</span><br><span class="line">3476</span><br><span class="line">3477</span><br><span class="line">3478</span><br><span class="line">3479</span><br><span class="line">3480</span><br><span class="line">3481</span><br><span class="line">3482</span><br><span class="line">3483</span><br><span class="line">3484</span><br><span class="line">3485</span><br><span class="line">3486</span><br><span class="line">3487</span><br><span class="line">3488</span><br><span class="line">3489</span><br><span class="line">3490</span><br><span class="line">3491</span><br><span class="line">3492</span><br><span class="line">3493</span><br><span class="line">3494</span><br><span class="line">3495</span><br><span class="line">3496</span><br><span class="line">3497</span><br><span class="line">3498</span><br><span class="line">3499</span><br><span class="line">3500</span><br><span class="line">3501</span><br><span class="line">3502</span><br><span class="line">3503</span><br><span class="line">3504</span><br><span class="line">3505</span><br><span class="line">3506</span><br><span class="line">3507</span><br><span class="line">3508</span><br><span class="line">3509</span><br><span class="line">3510</span><br><span class="line">3511</span><br><span class="line">3512</span><br><span class="line">3513</span><br><span class="line">3514</span><br><span class="line">3515</span><br><span class="line">3516</span><br><span class="line">3517</span><br><span class="line">3518</span><br><span class="line">3519</span><br><span class="line">3520</span><br><span class="line">3521</span><br><span class="line">3522</span><br><span class="line">3523</span><br><span class="line">3524</span><br><span class="line">3525</span><br><span class="line">3526</span><br><span class="line">3527</span><br><span class="line">3528</span><br><span class="line">3529</span><br><span class="line">3530</span><br><span class="line">3531</span><br><span class="line">3532</span><br><span class="line">3533</span><br><span class="line">3534</span><br><span class="line">3535</span><br><span class="line">3536</span><br><span class="line">3537</span><br><span class="line">3538</span><br><span class="line">3539</span><br><span class="line">3540</span><br><span class="line">3541</span><br><span class="line">3542</span><br><span class="line">3543</span><br><span class="line">3544</span><br><span class="line">3545</span><br><span class="line">3546</span><br><span class="line">3547</span><br><span class="line">3548</span><br><span class="line">3549</span><br><span class="line">3550</span><br><span class="line">3551</span><br><span class="line">3552</span><br><span class="line">3553</span><br><span class="line">3554</span><br><span class="line">3555</span><br><span class="line">3556</span><br><span class="line">3557</span><br><span class="line">3558</span><br><span class="line">3559</span><br><span class="line">3560</span><br><span class="line">3561</span><br><span class="line">3562</span><br><span class="line">3563</span><br><span class="line">3564</span><br><span class="line">3565</span><br><span class="line">3566</span><br><span class="line">3567</span><br><span class="line">3568</span><br><span class="line">3569</span><br><span class="line">3570</span><br><span class="line">3571</span><br><span class="line">3572</span><br><span class="line">3573</span><br><span class="line">3574</span><br><span class="line">3575</span><br><span class="line">3576</span><br><span class="line">3577</span><br><span class="line">3578</span><br><span class="line">3579</span><br><span class="line">3580</span><br><span class="line">3581</span><br><span class="line">3582</span><br><span class="line">3583</span><br><span class="line">3584</span><br><span class="line">3585</span><br><span class="line">3586</span><br><span class="line">3587</span><br><span class="line">3588</span><br><span class="line">3589</span><br><span class="line">3590</span><br><span class="line">3591</span><br><span class="line">3592</span><br><span class="line">3593</span><br><span class="line">3594</span><br><span class="line">3595</span><br><span class="line">3596</span><br><span class="line">3597</span><br><span class="line">3598</span><br><span class="line">3599</span><br><span class="line">3600</span><br><span class="line">3601</span><br><span class="line">3602</span><br><span class="line">3603</span><br><span class="line">3604</span><br><span class="line">3605</span><br><span class="line">3606</span><br><span class="line">3607</span><br><span class="line">3608</span><br><span class="line">3609</span><br><span class="line">3610</span><br><span class="line">3611</span><br><span class="line">3612</span><br><span class="line">3613</span><br><span class="line">3614</span><br><span class="line">3615</span><br><span class="line">3616</span><br><span class="line">3617</span><br><span class="line">3618</span><br><span class="line">3619</span><br><span class="line">3620</span><br><span class="line">3621</span><br><span class="line">3622</span><br><span class="line">3623</span><br><span class="line">3624</span><br><span class="line">3625</span><br><span class="line">3626</span><br><span class="line">3627</span><br><span class="line">3628</span><br><span class="line">3629</span><br><span class="line">3630</span><br><span class="line">3631</span><br><span class="line">3632</span><br><span class="line">3633</span><br><span class="line">3634</span><br><span class="line">3635</span><br><span class="line">3636</span><br><span class="line">3637</span><br><span class="line">3638</span><br><span class="line">3639</span><br><span class="line">3640</span><br><span class="line">3641</span><br><span class="line">3642</span><br><span class="line">3643</span><br><span class="line">3644</span><br><span class="line">3645</span><br><span class="line">3646</span><br><span class="line">3647</span><br><span class="line">3648</span><br><span class="line">3649</span><br><span class="line">3650</span><br><span class="line">3651</span><br><span class="line">3652</span><br><span class="line">3653</span><br><span class="line">3654</span><br><span class="line">3655</span><br><span class="line">3656</span><br><span class="line">3657</span><br><span class="line">3658</span><br><span class="line">3659</span><br><span class="line">3660</span><br><span class="line">3661</span><br><span class="line">3662</span><br><span class="line">3663</span><br><span class="line">3664</span><br><span class="line">3665</span><br><span class="line">3666</span><br><span class="line">3667</span><br><span class="line">3668</span><br><span class="line">3669</span><br><span class="line">3670</span><br><span class="line">3671</span><br><span class="line">3672</span><br><span class="line">3673</span><br><span class="line">3674</span><br><span class="line">3675</span><br><span class="line">3676</span><br><span class="line">3677</span><br><span class="line">3678</span><br><span class="line">3679</span><br><span class="line">3680</span><br><span class="line">3681</span><br><span class="line">3682</span><br><span class="line">3683</span><br><span class="line">3684</span><br><span class="line">3685</span><br><span class="line">3686</span><br><span class="line">3687</span><br><span class="line">3688</span><br><span class="line">3689</span><br><span class="line">3690</span><br><span class="line">3691</span><br><span class="line">3692</span><br><span class="line">3693</span><br><span class="line">3694</span><br><span class="line">3695</span><br><span class="line">3696</span><br><span class="line">3697</span><br><span class="line">3698</span><br><span class="line">3699</span><br><span class="line">3700</span><br><span class="line">3701</span><br><span class="line">3702</span><br><span class="line">3703</span><br><span class="line">3704</span><br><span class="line">3705</span><br><span class="line">3706</span><br><span class="line">3707</span><br><span class="line">3708</span><br><span class="line">3709</span><br><span class="line">3710</span><br><span class="line">3711</span><br><span class="line">3712</span><br><span class="line">3713</span><br><span class="line">3714</span><br><span class="line">3715</span><br><span class="line">3716</span><br><span class="line">3717</span><br><span class="line">3718</span><br><span class="line">3719</span><br><span class="line">3720</span><br><span class="line">3721</span><br><span class="line">3722</span><br><span class="line">3723</span><br><span class="line">3724</span><br><span class="line">3725</span><br><span class="line">3726</span><br><span class="line">3727</span><br><span class="line">3728</span><br><span class="line">3729</span><br><span class="line">3730</span><br><span class="line">3731</span><br><span class="line">3732</span><br><span class="line">3733</span><br><span class="line">3734</span><br><span class="line">3735</span><br><span class="line">3736</span><br><span class="line">3737</span><br><span class="line">3738</span><br><span class="line">3739</span><br><span class="line">3740</span><br><span class="line">3741</span><br><span class="line">3742</span><br><span class="line">3743</span><br><span class="line">3744</span><br><span class="line">3745</span><br><span class="line">3746</span><br><span class="line">3747</span><br><span class="line">3748</span><br><span class="line">3749</span><br><span class="line">3750</span><br><span class="line">3751</span><br><span class="line">3752</span><br><span class="line">3753</span><br><span class="line">3754</span><br><span class="line">3755</span><br><span class="line">3756</span><br><span class="line">3757</span><br><span class="line">3758</span><br><span class="line">3759</span><br><span class="line">3760</span><br><span class="line">3761</span><br><span class="line">3762</span><br><span class="line">3763</span><br><span class="line">3764</span><br><span class="line">3765</span><br><span class="line">3766</span><br><span class="line">3767</span><br><span class="line">3768</span><br><span class="line">3769</span><br><span class="line">3770</span><br><span class="line">3771</span><br><span class="line">3772</span><br><span class="line">3773</span><br><span class="line">3774</span><br><span class="line">3775</span><br><span class="line">3776</span><br><span class="line">3777</span><br><span class="line">3778</span><br><span class="line">3779</span><br><span class="line">3780</span><br><span class="line">3781</span><br><span class="line">3782</span><br><span class="line">3783</span><br><span class="line">3784</span><br><span class="line">3785</span><br><span class="line">3786</span><br><span class="line">3787</span><br><span class="line">3788</span><br><span class="line">3789</span><br><span class="line">3790</span><br><span class="line">3791</span><br><span class="line">3792</span><br><span class="line">3793</span><br><span class="line">3794</span><br><span class="line">3795</span><br><span class="line">3796</span><br><span class="line">3797</span><br><span class="line">3798</span><br><span class="line">3799</span><br><span class="line">3800</span><br><span class="line">3801</span><br><span class="line">3802</span><br><span class="line">3803</span><br><span class="line">3804</span><br><span class="line">3805</span><br><span class="line">3806</span><br><span class="line">3807</span><br><span class="line">3808</span><br><span class="line">3809</span><br><span class="line">3810</span><br><span class="line">3811</span><br><span class="line">3812</span><br><span class="line">3813</span><br><span class="line">3814</span><br><span class="line">3815</span><br><span class="line">3816</span><br><span class="line">3817</span><br><span class="line">3818</span><br><span class="line">3819</span><br><span class="line">3820</span><br><span class="line">3821</span><br><span class="line">3822</span><br><span class="line">3823</span><br><span class="line">3824</span><br><span class="line">3825</span><br><span class="line">3826</span><br><span class="line">3827</span><br><span class="line">3828</span><br><span class="line">3829</span><br><span class="line">3830</span><br><span class="line">3831</span><br><span class="line">3832</span><br><span class="line">3833</span><br><span class="line">3834</span><br><span class="line">3835</span><br><span class="line">3836</span><br><span class="line">3837</span><br><span class="line">3838</span><br><span class="line">3839</span><br><span class="line">3840</span><br><span class="line">3841</span><br><span class="line">3842</span><br><span class="line">3843</span><br><span class="line">3844</span><br><span class="line">3845</span><br><span class="line">3846</span><br><span class="line">3847</span><br><span class="line">3848</span><br><span class="line">3849</span><br><span class="line">3850</span><br><span class="line">3851</span><br><span class="line">3852</span><br><span class="line">3853</span><br><span class="line">3854</span><br><span class="line">3855</span><br><span class="line">3856</span><br><span class="line">3857</span><br><span class="line">3858</span><br><span class="line">3859</span><br><span class="line">3860</span><br><span class="line">3861</span><br><span class="line">3862</span><br><span class="line">3863</span><br><span class="line">3864</span><br><span class="line">3865</span><br><span class="line">3866</span><br><span class="line">3867</span><br><span class="line">3868</span><br><span class="line">3869</span><br><span class="line">3870</span><br><span class="line">3871</span><br><span class="line">3872</span><br><span class="line">3873</span><br><span class="line">3874</span><br><span class="line">3875</span><br><span class="line">3876</span><br><span class="line">3877</span><br><span class="line">3878</span><br><span class="line">3879</span><br><span class="line">3880</span><br><span class="line">3881</span><br><span class="line">3882</span><br><span class="line">3883</span><br><span class="line">3884</span><br><span class="line">3885</span><br><span class="line">3886</span><br><span class="line">3887</span><br><span class="line">3888</span><br><span class="line">3889</span><br><span class="line">3890</span><br><span class="line">3891</span><br><span class="line">3892</span><br><span class="line">3893</span><br><span class="line">3894</span><br><span class="line">3895</span><br><span class="line">3896</span><br><span class="line">3897</span><br><span class="line">3898</span><br><span class="line">3899</span><br><span class="line">3900</span><br><span class="line">3901</span><br><span class="line">3902</span><br><span class="line">3903</span><br><span class="line">3904</span><br><span class="line">3905</span><br><span class="line">3906</span><br><span class="line">3907</span><br><span class="line">3908</span><br><span class="line">3909</span><br><span class="line">3910</span><br><span class="line">3911</span><br><span class="line">3912</span><br><span class="line">3913</span><br><span class="line">3914</span><br><span class="line">3915</span><br><span class="line">3916</span><br><span class="line">3917</span><br><span class="line">3918</span><br><span class="line">3919</span><br><span class="line">3920</span><br><span class="line">3921</span><br><span class="line">3922</span><br><span class="line">3923</span><br><span class="line">3924</span><br><span class="line">3925</span><br><span class="line">3926</span><br><span class="line">3927</span><br><span class="line">3928</span><br><span class="line">3929</span><br><span class="line">3930</span><br><span class="line">3931</span><br><span class="line">3932</span><br><span class="line">3933</span><br><span class="line">3934</span><br><span class="line">3935</span><br><span class="line">3936</span><br><span class="line">3937</span><br><span class="line">3938</span><br><span class="line">3939</span><br><span class="line">3940</span><br><span class="line">3941</span><br><span class="line">3942</span><br><span class="line">3943</span><br><span class="line">3944</span><br><span class="line">3945</span><br><span class="line">3946</span><br><span class="line">3947</span><br><span class="line">3948</span><br><span class="line">3949</span><br><span class="line">3950</span><br><span class="line">3951</span><br><span class="line">3952</span><br><span class="line">3953</span><br><span class="line">3954</span><br><span class="line">3955</span><br><span class="line">3956</span><br><span class="line">3957</span><br><span class="line">3958</span><br><span class="line">3959</span><br><span class="line">3960</span><br><span class="line">3961</span><br><span class="line">3962</span><br><span class="line">3963</span><br><span class="line">3964</span><br><span class="line">3965</span><br><span class="line">3966</span><br><span class="line">3967</span><br><span class="line">3968</span><br><span class="line">3969</span><br><span class="line">3970</span><br><span class="line">3971</span><br><span class="line">3972</span><br><span class="line">3973</span><br><span class="line">3974</span><br><span class="line">3975</span><br><span class="line">3976</span><br><span class="line">3977</span><br><span class="line">3978</span><br><span class="line">3979</span><br><span class="line">3980</span><br><span class="line">3981</span><br><span class="line">3982</span><br><span class="line">3983</span><br><span class="line">3984</span><br><span class="line">3985</span><br><span class="line">3986</span><br><span class="line">3987</span><br><span class="line">3988</span><br><span class="line">3989</span><br><span class="line">3990</span><br><span class="line">3991</span><br><span class="line">3992</span><br><span class="line">3993</span><br><span class="line">3994</span><br><span class="line">3995</span><br><span class="line">3996</span><br><span class="line">3997</span><br><span class="line">3998</span><br><span class="line">3999</span><br><span class="line">4000</span><br><span class="line">4001</span><br><span class="line">4002</span><br><span class="line">4003</span><br><span class="line">4004</span><br><span class="line">4005</span><br><span class="line">4006</span><br><span class="line">4007</span><br><span class="line">4008</span><br><span class="line">4009</span><br><span class="line">4010</span><br><span class="line">4011</span><br><span class="line">4012</span><br><span class="line">4013</span><br><span class="line">4014</span><br><span class="line">4015</span><br><span class="line">4016</span><br><span class="line">4017</span><br><span class="line">4018</span><br><span class="line">4019</span><br><span class="line">4020</span><br><span class="line">4021</span><br><span class="line">4022</span><br><span class="line">4023</span><br><span class="line">4024</span><br><span class="line">4025</span><br><span class="line">4026</span><br><span class="line">4027</span><br><span class="line">4028</span><br><span class="line">4029</span><br><span class="line">4030</span><br><span class="line">4031</span><br><span class="line">4032</span><br><span class="line">4033</span><br><span class="line">4034</span><br><span class="line">4035</span><br><span class="line">4036</span><br><span class="line">4037</span><br><span class="line">4038</span><br><span class="line">4039</span><br><span class="line">4040</span><br><span class="line">4041</span><br><span class="line">4042</span><br><span class="line">4043</span><br><span class="line">4044</span><br><span class="line">4045</span><br><span class="line">4046</span><br><span class="line">4047</span><br><span class="line">4048</span><br><span class="line">4049</span><br><span class="line">4050</span><br><span class="line">4051</span><br><span class="line">4052</span><br><span class="line">4053</span><br><span class="line">4054</span><br><span class="line">4055</span><br><span class="line">4056</span><br><span class="line">4057</span><br><span class="line">4058</span><br><span class="line">4059</span><br><span class="line">4060</span><br><span class="line">4061</span><br><span class="line">4062</span><br><span class="line">4063</span><br><span class="line">4064</span><br><span class="line">4065</span><br><span class="line">4066</span><br><span class="line">4067</span><br><span class="line">4068</span><br><span class="line">4069</span><br><span class="line">4070</span><br><span class="line">4071</span><br><span class="line">4072</span><br><span class="line">4073</span><br><span class="line">4074</span><br><span class="line">4075</span><br><span class="line">4076</span><br><span class="line">4077</span><br><span class="line">4078</span><br><span class="line">4079</span><br><span class="line">4080</span><br><span class="line">4081</span><br><span class="line">4082</span><br><span class="line">4083</span><br><span class="line">4084</span><br><span class="line">4085</span><br><span class="line">4086</span><br><span class="line">4087</span><br><span class="line">4088</span><br><span class="line">4089</span><br><span class="line">4090</span><br><span class="line">4091</span><br><span class="line">4092</span><br><span class="line">4093</span><br><span class="line">4094</span><br><span class="line">4095</span><br><span class="line">4096</span><br><span class="line">4097</span><br><span class="line">4098</span><br><span class="line">4099</span><br><span class="line">4100</span><br><span class="line">4101</span><br><span class="line">4102</span><br><span class="line">4103</span><br><span class="line">4104</span><br><span class="line">4105</span><br><span class="line">4106</span><br><span class="line">4107</span><br><span class="line">4108</span><br><span class="line">4109</span><br><span class="line">4110</span><br><span class="line">4111</span><br><span class="line">4112</span><br><span class="line">4113</span><br><span class="line">4114</span><br><span class="line">4115</span><br><span class="line">4116</span><br><span class="line">4117</span><br><span class="line">4118</span><br><span class="line">4119</span><br><span class="line">4120</span><br><span class="line">4121</span><br><span class="line">4122</span><br><span class="line">4123</span><br><span class="line">4124</span><br><span class="line">4125</span><br><span class="line">4126</span><br><span class="line">4127</span><br><span class="line">4128</span><br><span class="line">4129</span><br><span class="line">4130</span><br><span class="line">4131</span><br><span class="line">4132</span><br><span class="line">4133</span><br><span class="line">4134</span><br><span class="line">4135</span><br><span class="line">4136</span><br><span class="line">4137</span><br><span class="line">4138</span><br><span class="line">4139</span><br><span class="line">4140</span><br><span class="line">4141</span><br><span class="line">4142</span><br><span class="line">4143</span><br><span class="line">4144</span><br><span class="line">4145</span><br><span class="line">4146</span><br><span class="line">4147</span><br><span class="line">4148</span><br><span class="line">4149</span><br><span class="line">4150</span><br><span class="line">4151</span><br><span class="line">4152</span><br><span class="line">4153</span><br><span class="line">4154</span><br><span class="line">4155</span><br><span class="line">4156</span><br><span class="line">4157</span><br><span class="line">4158</span><br><span class="line">4159</span><br><span class="line">4160</span><br><span class="line">4161</span><br><span class="line">4162</span><br><span class="line">4163</span><br><span class="line">4164</span><br><span class="line">4165</span><br><span class="line">4166</span><br><span class="line">4167</span><br><span class="line">4168</span><br><span class="line">4169</span><br><span class="line">4170</span><br><span class="line">4171</span><br><span class="line">4172</span><br><span class="line">4173</span><br><span class="line">4174</span><br><span class="line">4175</span><br><span class="line">4176</span><br><span class="line">4177</span><br><span class="line">4178</span><br><span class="line">4179</span><br><span class="line">4180</span><br><span class="line">4181</span><br><span class="line">4182</span><br><span class="line">4183</span><br><span class="line">4184</span><br><span class="line">4185</span><br><span class="line">4186</span><br><span class="line">4187</span><br><span class="line">4188</span><br><span class="line">4189</span><br><span class="line">4190</span><br><span class="line">4191</span><br><span class="line">4192</span><br><span class="line">4193</span><br><span class="line">4194</span><br><span class="line">4195</span><br><span class="line">4196</span><br><span class="line">4197</span><br><span class="line">4198</span><br><span class="line">4199</span><br><span class="line">4200</span><br><span class="line">4201</span><br><span class="line">4202</span><br><span class="line">4203</span><br><span class="line">4204</span><br><span class="line">4205</span><br><span class="line">4206</span><br><span class="line">4207</span><br><span class="line">4208</span><br><span class="line">4209</span><br><span class="line">4210</span><br><span class="line">4211</span><br><span class="line">4212</span><br><span class="line">4213</span><br><span class="line">4214</span><br><span class="line">4215</span><br><span class="line">4216</span><br><span class="line">4217</span><br><span class="line">4218</span><br><span class="line">4219</span><br><span class="line">4220</span><br><span class="line">4221</span><br><span class="line">4222</span><br><span class="line">4223</span><br><span class="line">4224</span><br><span class="line">4225</span><br><span class="line">4226</span><br><span class="line">4227</span><br><span class="line">4228</span><br><span class="line">4229</span><br><span class="line">4230</span><br><span class="line">4231</span><br><span class="line">4232</span><br><span class="line">4233</span><br><span class="line">4234</span><br><span class="line">4235</span><br><span class="line">4236</span><br><span class="line">4237</span><br><span class="line">4238</span><br><span class="line">4239</span><br><span class="line">4240</span><br><span class="line">4241</span><br><span class="line">4242</span><br><span class="line">4243</span><br><span class="line">4244</span><br><span class="line">4245</span><br><span class="line">4246</span><br><span class="line">4247</span><br><span class="line">4248</span><br><span class="line">4249</span><br><span class="line">4250</span><br><span class="line">4251</span><br><span class="line">4252</span><br><span class="line">4253</span><br><span class="line">4254</span><br><span class="line">4255</span><br><span class="line">4256</span><br><span class="line">4257</span><br><span class="line">4258</span><br><span class="line">4259</span><br><span class="line">4260</span><br><span class="line">4261</span><br><span class="line">4262</span><br><span class="line">4263</span><br><span class="line">4264</span><br><span class="line">4265</span><br><span class="line">4266</span><br><span class="line">4267</span><br><span class="line">4268</span><br><span class="line">4269</span><br><span class="line">4270</span><br><span class="line">4271</span><br><span class="line">4272</span><br><span class="line">4273</span><br><span class="line">4274</span><br><span class="line">4275</span><br><span class="line">4276</span><br><span class="line">4277</span><br><span class="line">4278</span><br><span class="line">4279</span><br><span class="line">4280</span><br><span class="line">4281</span><br><span class="line">4282</span><br><span class="line">4283</span><br><span class="line">4284</span><br><span class="line">4285</span><br><span class="line">4286</span><br><span class="line">4287</span><br><span class="line">4288</span><br><span class="line">4289</span><br><span class="line">4290</span><br><span class="line">4291</span><br><span class="line">4292</span><br><span class="line">4293</span><br><span class="line">4294</span><br><span class="line">4295</span><br><span class="line">4296</span><br><span class="line">4297</span><br><span class="line">4298</span><br><span class="line">4299</span><br><span class="line">4300</span><br><span class="line">4301</span><br><span class="line">4302</span><br><span class="line">4303</span><br><span class="line">4304</span><br><span class="line">4305</span><br><span class="line">4306</span><br><span class="line">4307</span><br><span class="line">4308</span><br><span class="line">4309</span><br><span class="line">4310</span><br><span class="line">4311</span><br><span class="line">4312</span><br><span class="line">4313</span><br><span class="line">4314</span><br><span class="line">4315</span><br><span class="line">4316</span><br><span class="line">4317</span><br><span class="line">4318</span><br><span class="line">4319</span><br><span class="line">4320</span><br><span class="line">4321</span><br><span class="line">4322</span><br><span class="line">4323</span><br><span class="line">4324</span><br><span class="line">4325</span><br><span class="line">4326</span><br><span class="line">4327</span><br><span class="line">4328</span><br><span class="line">4329</span><br><span class="line">4330</span><br><span class="line">4331</span><br><span class="line">4332</span><br><span class="line">4333</span><br><span class="line">4334</span><br><span class="line">4335</span><br><span class="line">4336</span><br><span class="line">4337</span><br><span class="line">4338</span><br><span class="line">4339</span><br><span class="line">4340</span><br><span class="line">4341</span><br><span class="line">4342</span><br><span class="line">4343</span><br><span class="line">4344</span><br><span class="line">4345</span><br><span class="line">4346</span><br><span class="line">4347</span><br><span class="line">4348</span><br><span class="line">4349</span><br><span class="line">4350</span><br><span class="line">4351</span><br><span class="line">4352</span><br><span class="line">4353</span><br><span class="line">4354</span><br><span class="line">4355</span><br><span class="line">4356</span><br><span class="line">4357</span><br><span class="line">4358</span><br><span class="line">4359</span><br><span class="line">4360</span><br><span class="line">4361</span><br><span class="line">4362</span><br><span class="line">4363</span><br><span class="line">4364</span><br><span class="line">4365</span><br><span class="line">4366</span><br><span class="line">4367</span><br><span class="line">4368</span><br><span class="line">4369</span><br><span class="line">4370</span><br><span class="line">4371</span><br><span class="line">4372</span><br><span class="line">4373</span><br><span class="line">4374</span><br><span class="line">4375</span><br><span class="line">4376</span><br><span class="line">4377</span><br><span class="line">4378</span><br><span class="line">4379</span><br><span class="line">4380</span><br><span class="line">4381</span><br><span class="line">4382</span><br><span class="line">4383</span><br><span class="line">4384</span><br><span class="line">4385</span><br><span class="line">4386</span><br><span class="line">4387</span><br><span class="line">4388</span><br><span class="line">4389</span><br><span class="line">4390</span><br><span class="line">4391</span><br><span class="line">4392</span><br><span class="line">4393</span><br><span class="line">4394</span><br><span class="line">4395</span><br><span class="line">4396</span><br><span class="line">4397</span><br><span class="line">4398</span><br><span class="line">4399</span><br><span class="line">4400</span><br><span class="line">4401</span><br><span class="line">4402</span><br><span class="line">4403</span><br><span class="line">4404</span><br><span class="line">4405</span><br><span class="line">4406</span><br><span class="line">4407</span><br><span class="line">4408</span><br><span class="line">4409</span><br><span class="line">4410</span><br><span class="line">4411</span><br><span class="line">4412</span><br><span class="line">4413</span><br><span class="line">4414</span><br><span class="line">4415</span><br><span class="line">4416</span><br><span class="line">4417</span><br><span class="line">4418</span><br><span class="line">4419</span><br><span class="line">4420</span><br><span class="line">4421</span><br><span class="line">4422</span><br><span class="line">4423</span><br><span class="line">4424</span><br><span class="line">4425</span><br><span class="line">4426</span><br><span class="line">4427</span><br><span class="line">4428</span><br><span class="line">4429</span><br><span class="line">4430</span><br><span class="line">4431</span><br><span class="line">4432</span><br><span class="line">4433</span><br><span class="line">4434</span><br><span class="line">4435</span><br><span class="line">4436</span><br><span class="line">4437</span><br><span class="line">4438</span><br><span class="line">4439</span><br><span class="line">4440</span><br><span class="line">4441</span><br><span class="line">4442</span><br><span class="line">4443</span><br><span class="line">4444</span><br><span class="line">4445</span><br><span class="line">4446</span><br><span class="line">4447</span><br><span class="line">4448</span><br><span class="line">4449</span><br><span class="line">4450</span><br><span class="line">4451</span><br><span class="line">4452</span><br><span class="line">4453</span><br><span class="line">4454</span><br><span class="line">4455</span><br><span class="line">4456</span><br><span class="line">4457</span><br><span class="line">4458</span><br><span class="line">4459</span><br><span class="line">4460</span><br><span class="line">4461</span><br><span class="line">4462</span><br><span class="line">4463</span><br><span class="line">4464</span><br><span class="line">4465</span><br><span class="line">4466</span><br><span class="line">4467</span><br><span class="line">4468</span><br><span class="line">4469</span><br><span class="line">4470</span><br><span class="line">4471</span><br><span class="line">4472</span><br><span class="line">4473</span><br><span class="line">4474</span><br><span class="line">4475</span><br><span class="line">4476</span><br><span class="line">4477</span><br><span class="line">4478</span><br><span class="line">4479</span><br><span class="line">4480</span><br><span class="line">4481</span><br><span class="line">4482</span><br><span class="line">4483</span><br><span class="line">4484</span><br><span class="line">4485</span><br><span class="line">4486</span><br><span class="line">4487</span><br><span class="line">4488</span><br><span class="line">4489</span><br><span class="line">4490</span><br><span class="line">4491</span><br><span class="line">4492</span><br><span class="line">4493</span><br><span class="line">4494</span><br><span class="line">4495</span><br><span class="line">4496</span><br><span class="line">4497</span><br><span class="line">4498</span><br><span class="line">4499</span><br><span class="line">4500</span><br><span class="line">4501</span><br><span class="line">4502</span><br><span class="line">4503</span><br><span class="line">4504</span><br><span class="line">4505</span><br><span class="line">4506</span><br><span class="line">4507</span><br><span class="line">4508</span><br><span class="line">4509</span><br><span class="line">4510</span><br><span class="line">4511</span><br><span class="line">4512</span><br><span class="line">4513</span><br><span class="line">4514</span><br><span class="line">4515</span><br><span class="line">4516</span><br><span class="line">4517</span><br><span class="line">4518</span><br><span class="line">4519</span><br><span class="line">4520</span><br><span class="line">4521</span><br><span class="line">4522</span><br><span class="line">4523</span><br><span class="line">4524</span><br><span class="line">4525</span><br><span class="line">4526</span><br><span class="line">4527</span><br><span class="line">4528</span><br><span class="line">4529</span><br><span class="line">4530</span><br><span class="line">4531</span><br><span class="line">4532</span><br><span class="line">4533</span><br><span class="line">4534</span><br><span class="line">4535</span><br><span class="line">4536</span><br><span class="line">4537</span><br><span class="line">4538</span><br><span class="line">4539</span><br><span class="line">4540</span><br><span class="line">4541</span><br><span class="line">4542</span><br><span class="line">4543</span><br><span class="line">4544</span><br><span class="line">4545</span><br><span class="line">4546</span><br><span class="line">4547</span><br><span class="line">4548</span><br><span class="line">4549</span><br><span class="line">4550</span><br><span class="line">4551</span><br><span class="line">4552</span><br><span class="line">4553</span><br><span class="line">4554</span><br><span class="line">4555</span><br><span class="line">4556</span><br><span class="line">4557</span><br><span class="line">4558</span><br><span class="line">4559</span><br><span class="line">4560</span><br><span class="line">4561</span><br><span class="line">4562</span><br><span class="line">4563</span><br><span class="line">4564</span><br><span class="line">4565</span><br><span class="line">4566</span><br><span class="line">4567</span><br><span class="line">4568</span><br><span class="line">4569</span><br><span class="line">4570</span><br><span class="line">4571</span><br><span class="line">4572</span><br><span class="line">4573</span><br><span class="line">4574</span><br><span class="line">4575</span><br><span class="line">4576</span><br><span class="line">4577</span><br><span class="line">4578</span><br><span class="line">4579</span><br><span class="line">4580</span><br><span class="line">4581</span><br><span class="line">4582</span><br><span class="line">4583</span><br><span class="line">4584</span><br><span class="line">4585</span><br><span class="line">4586</span><br><span class="line">4587</span><br><span class="line">4588</span><br><span class="line">4589</span><br><span class="line">4590</span><br><span class="line">4591</span><br><span class="line">4592</span><br><span class="line">4593</span><br><span class="line">4594</span><br><span class="line">4595</span><br><span class="line">4596</span><br><span class="line">4597</span><br><span class="line">4598</span><br><span class="line">4599</span><br><span class="line">4600</span><br><span class="line">4601</span><br><span class="line">4602</span><br><span class="line">4603</span><br><span class="line">4604</span><br><span class="line">4605</span><br><span class="line">4606</span><br><span class="line">4607</span><br><span class="line">4608</span><br><span class="line">4609</span><br><span class="line">4610</span><br><span class="line">4611</span><br><span class="line">4612</span><br><span class="line">4613</span><br><span class="line">4614</span><br><span class="line">4615</span><br><span class="line">4616</span><br><span class="line">4617</span><br><span class="line">4618</span><br><span class="line">4619</span><br><span class="line">4620</span><br><span class="line">4621</span><br><span class="line">4622</span><br><span class="line">4623</span><br><span class="line">4624</span><br><span class="line">4625</span><br><span class="line">4626</span><br><span class="line">4627</span><br><span class="line">4628</span><br><span class="line">4629</span><br><span class="line">4630</span><br><span class="line">4631</span><br><span class="line">4632</span><br><span class="line">4633</span><br><span class="line">4634</span><br><span class="line">4635</span><br><span class="line">4636</span><br><span class="line">4637</span><br><span class="line">4638</span><br><span class="line">4639</span><br><span class="line">4640</span><br><span class="line">4641</span><br><span class="line">4642</span><br><span class="line">4643</span><br><span class="line">4644</span><br><span class="line">4645</span><br><span class="line">4646</span><br><span class="line">4647</span><br><span class="line">4648</span><br><span class="line">4649</span><br><span class="line">4650</span><br><span class="line">4651</span><br><span class="line">4652</span><br><span class="line">4653</span><br><span class="line">4654</span><br><span class="line">4655</span><br><span class="line">4656</span><br><span class="line">4657</span><br><span class="line">4658</span><br><span class="line">4659</span><br><span class="line">4660</span><br><span class="line">4661</span><br><span class="line">4662</span><br><span class="line">4663</span><br><span class="line">4664</span><br><span class="line">4665</span><br><span class="line">4666</span><br><span class="line">4667</span><br><span class="line">4668</span><br><span class="line">4669</span><br><span class="line">4670</span><br><span class="line">4671</span><br><span class="line">4672</span><br><span class="line">4673</span><br><span class="line">4674</span><br><span class="line">4675</span><br><span class="line">4676</span><br><span class="line">4677</span><br><span class="line">4678</span><br><span class="line">4679</span><br><span class="line">4680</span><br><span class="line">4681</span><br><span class="line">4682</span><br><span class="line">4683</span><br><span class="line">4684</span><br><span class="line">4685</span><br><span class="line">4686</span><br><span class="line">4687</span><br><span class="line">4688</span><br><span class="line">4689</span><br><span class="line">4690</span><br><span class="line">4691</span><br><span class="line">4692</span><br><span class="line">4693</span><br><span class="line">4694</span><br><span class="line">4695</span><br><span class="line">4696</span><br><span class="line">4697</span><br><span class="line">4698</span><br><span class="line">4699</span><br><span class="line">4700</span><br><span class="line">4701</span><br><span class="line">4702</span><br><span class="line">4703</span><br><span class="line">4704</span><br><span class="line">4705</span><br><span class="line">4706</span><br><span class="line">4707</span><br><span class="line">4708</span><br><span class="line">4709</span><br><span class="line">4710</span><br><span class="line">4711</span><br><span class="line">4712</span><br><span class="line">4713</span><br><span class="line">4714</span><br><span class="line">4715</span><br><span class="line">4716</span><br><span class="line">4717</span><br><span class="line">4718</span><br><span class="line">4719</span><br><span class="line">4720</span><br><span class="line">4721</span><br><span class="line">4722</span><br><span class="line">4723</span><br><span class="line">4724</span><br><span class="line">4725</span><br><span class="line">4726</span><br><span class="line">4727</span><br><span class="line">4728</span><br><span class="line">4729</span><br><span class="line">4730</span><br><span class="line">4731</span><br><span class="line">4732</span><br><span class="line">4733</span><br><span class="line">4734</span><br><span class="line">4735</span><br><span class="line">4736</span><br><span class="line">4737</span><br><span class="line">4738</span><br><span class="line">4739</span><br><span class="line">4740</span><br><span class="line">4741</span><br><span class="line">4742</span><br><span class="line">4743</span><br><span class="line">4744</span><br><span class="line">4745</span><br><span class="line">4746</span><br><span class="line">4747</span><br><span class="line">4748</span><br><span class="line">4749</span><br><span class="line">4750</span><br><span class="line">4751</span><br><span class="line">4752</span><br><span class="line">4753</span><br><span class="line">4754</span><br><span class="line">4755</span><br><span class="line">4756</span><br><span class="line">4757</span><br><span class="line">4758</span><br><span class="line">4759</span><br><span class="line">4760</span><br><span class="line">4761</span><br><span class="line">4762</span><br><span class="line">4763</span><br><span class="line">4764</span><br><span class="line">4765</span><br><span class="line">4766</span><br><span class="line">4767</span><br><span class="line">4768</span><br><span class="line">4769</span><br><span class="line">4770</span><br><span class="line">4771</span><br><span class="line">4772</span><br><span class="line">4773</span><br><span class="line">4774</span><br><span class="line">4775</span><br><span class="line">4776</span><br><span class="line">4777</span><br><span class="line">4778</span><br><span class="line">4779</span><br><span class="line">4780</span><br><span class="line">4781</span><br><span class="line">4782</span><br><span class="line">4783</span><br><span class="line">4784</span><br><span class="line">4785</span><br><span class="line">4786</span><br><span class="line">4787</span><br><span class="line">4788</span><br><span class="line">4789</span><br><span class="line">4790</span><br><span class="line">4791</span><br><span class="line">4792</span><br><span class="line">4793</span><br><span class="line">4794</span><br><span class="line">4795</span><br><span class="line">4796</span><br><span class="line">4797</span><br><span class="line">4798</span><br><span class="line">4799</span><br><span class="line">4800</span><br><span class="line">4801</span><br><span class="line">4802</span><br><span class="line">4803</span><br><span class="line">4804</span><br><span class="line">4805</span><br><span class="line">4806</span><br><span class="line">4807</span><br><span class="line">4808</span><br><span class="line">4809</span><br><span class="line">4810</span><br><span class="line">4811</span><br><span class="line">4812</span><br><span class="line">4813</span><br><span class="line">4814</span><br><span class="line">4815</span><br><span class="line">4816</span><br><span class="line">4817</span><br><span class="line">4818</span><br><span class="line">4819</span><br><span class="line">4820</span><br><span class="line">4821</span><br><span class="line">4822</span><br><span class="line">4823</span><br><span class="line">4824</span><br><span class="line">4825</span><br><span class="line">4826</span><br><span class="line">4827</span><br><span class="line">4828</span><br><span class="line">4829</span><br><span class="line">4830</span><br><span class="line">4831</span><br><span class="line">4832</span><br><span class="line">4833</span><br><span class="line">4834</span><br><span class="line">4835</span><br><span class="line">4836</span><br><span class="line">4837</span><br><span class="line">4838</span><br><span class="line">4839</span><br><span class="line">4840</span><br><span class="line">4841</span><br><span class="line">4842</span><br><span class="line">4843</span><br><span class="line">4844</span><br><span class="line">4845</span><br><span class="line">4846</span><br><span class="line">4847</span><br><span class="line">4848</span><br><span class="line">4849</span><br><span class="line">4850</span><br><span class="line">4851</span><br><span class="line">4852</span><br><span class="line">4853</span><br><span class="line">4854</span><br><span class="line">4855</span><br><span class="line">4856</span><br><span class="line">4857</span><br><span class="line">4858</span><br><span class="line">4859</span><br><span class="line">4860</span><br><span class="line">4861</span><br><span class="line">4862</span><br><span class="line">4863</span><br><span class="line">4864</span><br><span class="line">4865</span><br><span class="line">4866</span><br><span class="line">4867</span><br><span class="line">4868</span><br><span class="line">4869</span><br><span class="line">4870</span><br><span class="line">4871</span><br><span class="line">4872</span><br><span class="line">4873</span><br><span class="line">4874</span><br><span class="line">4875</span><br><span class="line">4876</span><br><span class="line">4877</span><br><span class="line">4878</span><br><span class="line">4879</span><br><span class="line">4880</span><br><span class="line">4881</span><br><span class="line">4882</span><br><span class="line">4883</span><br><span class="line">4884</span><br><span class="line">4885</span><br><span class="line">4886</span><br><span class="line">4887</span><br><span class="line">4888</span><br><span class="line">4889</span><br><span class="line">4890</span><br><span class="line">4891</span><br><span class="line">4892</span><br><span class="line">4893</span><br><span class="line">4894</span><br><span class="line">4895</span><br><span class="line">4896</span><br><span class="line">4897</span><br><span class="line">4898</span><br><span class="line">4899</span><br><span class="line">4900</span><br><span class="line">4901</span><br><span class="line">4902</span><br><span class="line">4903</span><br><span class="line">4904</span><br><span class="line">4905</span><br><span class="line">4906</span><br><span class="line">4907</span><br><span class="line">4908</span><br><span class="line">4909</span><br><span class="line">4910</span><br><span class="line">4911</span><br><span class="line">4912</span><br><span class="line">4913</span><br><span class="line">4914</span><br><span class="line">4915</span><br><span class="line">4916</span><br><span class="line">4917</span><br><span class="line">4918</span><br><span class="line">4919</span><br><span class="line">4920</span><br><span class="line">4921</span><br><span class="line">4922</span><br><span class="line">4923</span><br><span class="line">4924</span><br><span class="line">4925</span><br><span class="line">4926</span><br><span class="line">4927</span><br><span class="line">4928</span><br><span class="line">4929</span><br><span class="line">4930</span><br><span class="line">4931</span><br><span class="line">4932</span><br><span class="line">4933</span><br><span class="line">4934</span><br><span class="line">4935</span><br><span class="line">4936</span><br><span class="line">4937</span><br><span class="line">4938</span><br><span class="line">4939</span><br><span class="line">4940</span><br><span class="line">4941</span><br><span class="line">4942</span><br><span class="line">4943</span><br><span class="line">4944</span><br><span class="line">4945</span><br><span class="line">4946</span><br><span class="line">4947</span><br><span class="line">4948</span><br><span class="line">4949</span><br><span class="line">4950</span><br><span class="line">4951</span><br><span class="line">4952</span><br><span class="line">4953</span><br><span class="line">4954</span><br><span class="line">4955</span><br><span class="line">4956</span><br><span class="line">4957</span><br><span class="line">4958</span><br><span class="line">4959</span><br><span class="line">4960</span><br><span class="line">4961</span><br><span class="line">4962</span><br><span class="line">4963</span><br><span class="line">4964</span><br><span class="line">4965</span><br><span class="line">4966</span><br><span class="line">4967</span><br><span class="line">4968</span><br><span class="line">4969</span><br><span class="line">4970</span><br><span class="line">4971</span><br><span class="line">4972</span><br><span class="line">4973</span><br><span class="line">4974</span><br><span class="line">4975</span><br><span class="line">4976</span><br><span class="line">4977</span><br><span class="line">4978</span><br><span class="line">4979</span><br><span class="line">4980</span><br><span class="line">4981</span><br><span class="line">4982</span><br><span class="line">4983</span><br><span class="line">4984</span><br><span class="line">4985</span><br><span class="line">4986</span><br><span class="line">4987</span><br><span class="line">4988</span><br><span class="line">4989</span><br><span class="line">4990</span><br><span class="line">4991</span><br><span class="line">4992</span><br><span class="line">4993</span><br><span class="line">4994</span><br><span class="line">4995</span><br><span class="line">4996</span><br><span class="line">4997</span><br><span class="line">4998</span><br><span class="line">4999</span><br><span class="line">5000</span><br><span class="line">5001</span><br><span class="line">5002</span><br><span class="line">5003</span><br><span class="line">5004</span><br><span class="line">5005</span><br><span class="line">5006</span><br><span class="line">5007</span><br><span class="line">5008</span><br><span class="line">5009</span><br><span class="line">5010</span><br><span class="line">5011</span><br><span class="line">5012</span><br><span class="line">5013</span><br><span class="line">5014</span><br><span class="line">5015</span><br><span class="line">5016</span><br><span class="line">5017</span><br><span class="line">5018</span><br><span class="line">5019</span><br><span class="line">5020</span><br><span class="line">5021</span><br><span class="line">5022</span><br><span class="line">5023</span><br><span class="line">5024</span><br><span class="line">5025</span><br><span class="line">5026</span><br><span class="line">5027</span><br><span class="line">5028</span><br><span class="line">5029</span><br><span class="line">5030</span><br><span class="line">5031</span><br><span class="line">5032</span><br><span class="line">5033</span><br><span class="line">5034</span><br><span class="line">5035</span><br><span class="line">5036</span><br><span class="line">5037</span><br><span class="line">5038</span><br><span class="line">5039</span><br><span class="line">5040</span><br><span class="line">5041</span><br><span class="line">5042</span><br><span class="line">5043</span><br><span class="line">5044</span><br><span class="line">5045</span><br><span class="line">5046</span><br><span class="line">5047</span><br><span class="line">5048</span><br><span class="line">5049</span><br><span class="line">5050</span><br><span class="line">5051</span><br><span class="line">5052</span><br><span class="line">5053</span><br><span class="line">5054</span><br><span class="line">5055</span><br><span class="line">5056</span><br><span class="line">5057</span><br><span class="line">5058</span><br><span class="line">5059</span><br><span class="line">5060</span><br><span class="line">5061</span><br><span class="line">5062</span><br><span class="line">5063</span><br><span class="line">5064</span><br><span class="line">5065</span><br><span class="line">5066</span><br><span class="line">5067</span><br><span class="line">5068</span><br><span class="line">5069</span><br><span class="line">5070</span><br><span class="line">5071</span><br><span class="line">5072</span><br><span class="line">5073</span><br><span class="line">5074</span><br><span class="line">5075</span><br><span class="line">5076</span><br><span class="line">5077</span><br><span class="line">5078</span><br><span class="line">5079</span><br><span class="line">5080</span><br><span class="line">5081</span><br><span class="line">5082</span><br><span class="line">5083</span><br><span class="line">5084</span><br><span class="line">5085</span><br><span class="line">5086</span><br><span class="line">5087</span><br><span class="line">5088</span><br><span class="line">5089</span><br><span class="line">5090</span><br><span class="line">5091</span><br><span class="line">5092</span><br><span class="line">5093</span><br><span class="line">5094</span><br><span class="line">5095</span><br><span class="line">5096</span><br><span class="line">5097</span><br><span class="line">5098</span><br><span class="line">5099</span><br><span class="line">5100</span><br><span class="line">5101</span><br><span class="line">5102</span><br><span class="line">5103</span><br><span class="line">5104</span><br><span class="line">5105</span><br><span class="line">5106</span><br><span class="line">5107</span><br><span class="line">5108</span><br><span class="line">5109</span><br><span class="line">5110</span><br><span class="line">5111</span><br><span class="line">5112</span><br><span class="line">5113</span><br><span class="line">5114</span><br><span class="line">5115</span><br><span class="line">5116</span><br><span class="line">5117</span><br><span class="line">5118</span><br><span class="line">5119</span><br><span class="line">5120</span><br><span class="line">5121</span><br><span class="line">5122</span><br><span class="line">5123</span><br><span class="line">5124</span><br><span class="line">5125</span><br><span class="line">5126</span><br><span class="line">5127</span><br><span class="line">5128</span><br><span class="line">5129</span><br><span class="line">5130</span><br><span class="line">5131</span><br><span class="line">5132</span><br><span class="line">5133</span><br><span class="line">5134</span><br><span class="line">5135</span><br><span class="line">5136</span><br><span class="line">5137</span><br><span class="line">5138</span><br><span class="line">5139</span><br><span class="line">5140</span><br><span class="line">5141</span><br><span class="line">5142</span><br><span class="line">5143</span><br><span class="line">5144</span><br><span class="line">5145</span><br><span class="line">5146</span><br><span class="line">5147</span><br><span class="line">5148</span><br><span class="line">5149</span><br><span class="line">5150</span><br><span class="line">5151</span><br><span class="line">5152</span><br><span class="line">5153</span><br><span class="line">5154</span><br><span class="line">5155</span><br><span class="line">5156</span><br><span class="line">5157</span><br><span class="line">5158</span><br><span class="line">5159</span><br><span class="line">5160</span><br><span class="line">5161</span><br><span class="line">5162</span><br><span class="line">5163</span><br><span class="line">5164</span><br><span class="line">5165</span><br><span class="line">5166</span><br><span class="line">5167</span><br><span class="line">5168</span><br><span class="line">5169</span><br><span class="line">5170</span><br><span class="line">5171</span><br><span class="line">5172</span><br><span class="line">5173</span><br><span class="line">5174</span><br><span class="line">5175</span><br><span class="line">5176</span><br><span class="line">5177</span><br><span class="line">5178</span><br><span class="line">5179</span><br><span class="line">5180</span><br><span class="line">5181</span><br><span class="line">5182</span><br><span class="line">5183</span><br><span class="line">5184</span><br><span class="line">5185</span><br><span class="line">5186</span><br><span class="line">5187</span><br><span class="line">5188</span><br><span class="line">5189</span><br><span class="line">5190</span><br><span class="line">5191</span><br><span class="line">5192</span><br><span class="line">5193</span><br><span class="line">5194</span><br><span class="line">5195</span><br><span class="line">5196</span><br><span class="line">5197</span><br><span class="line">5198</span><br><span class="line">5199</span><br><span class="line">5200</span><br><span class="line">5201</span><br><span class="line">5202</span><br><span class="line">5203</span><br><span class="line">5204</span><br><span class="line">5205</span><br><span class="line">5206</span><br><span class="line">5207</span><br><span class="line">5208</span><br><span class="line">5209</span><br><span class="line">5210</span><br><span class="line">5211</span><br><span class="line">5212</span><br><span class="line">5213</span><br><span class="line">5214</span><br><span class="line">5215</span><br><span class="line">5216</span><br><span class="line">5217</span><br><span class="line">5218</span><br><span class="line">5219</span><br><span class="line">5220</span><br><span class="line">5221</span><br><span class="line">5222</span><br><span class="line">5223</span><br><span class="line">5224</span><br><span class="line">5225</span><br><span class="line">5226</span><br><span class="line">5227</span><br><span class="line">5228</span><br><span class="line">5229</span><br><span class="line">5230</span><br><span class="line">5231</span><br><span class="line">5232</span><br><span class="line">5233</span><br><span class="line">5234</span><br><span class="line">5235</span><br><span class="line">5236</span><br><span class="line">5237</span><br><span class="line">5238</span><br><span class="line">5239</span><br><span class="line">5240</span><br><span class="line">5241</span><br><span class="line">5242</span><br><span class="line">5243</span><br><span class="line">5244</span><br><span class="line">5245</span><br><span class="line">5246</span><br><span class="line">5247</span><br><span class="line">5248</span><br><span class="line">5249</span><br><span class="line">5250</span><br><span class="line">5251</span><br><span class="line">5252</span><br><span class="line">5253</span><br><span class="line">5254</span><br><span class="line">5255</span><br><span class="line">5256</span><br><span class="line">5257</span><br><span class="line">5258</span><br><span class="line">5259</span><br><span class="line">5260</span><br><span class="line">5261</span><br><span class="line">5262</span><br><span class="line">5263</span><br><span class="line">5264</span><br><span class="line">5265</span><br><span class="line">5266</span><br><span class="line">5267</span><br><span class="line">5268</span><br><span class="line">5269</span><br><span class="line">5270</span><br><span class="line">5271</span><br><span class="line">5272</span><br><span class="line">5273</span><br><span class="line">5274</span><br><span class="line">5275</span><br><span class="line">5276</span><br><span class="line">5277</span><br><span class="line">5278</span><br><span class="line">5279</span><br><span class="line">5280</span><br><span class="line">5281</span><br><span class="line">5282</span><br><span class="line">5283</span><br><span class="line">5284</span><br><span class="line">5285</span><br><span class="line">5286</span><br><span class="line">5287</span><br><span class="line">5288</span><br><span class="line">5289</span><br><span class="line">5290</span><br><span class="line">5291</span><br><span class="line">5292</span><br><span class="line">5293</span><br><span class="line">5294</span><br><span class="line">5295</span><br><span class="line">5296</span><br><span class="line">5297</span><br><span class="line">5298</span><br><span class="line">5299</span><br><span class="line">5300</span><br><span class="line">5301</span><br><span class="line">5302</span><br><span class="line">5303</span><br><span class="line">5304</span><br><span class="line">5305</span><br><span class="line">5306</span><br><span class="line">5307</span><br><span class="line">5308</span><br><span class="line">5309</span><br><span class="line">5310</span><br><span class="line">5311</span><br><span class="line">5312</span><br><span class="line">5313</span><br><span class="line">5314</span><br><span class="line">5315</span><br><span class="line">5316</span><br><span class="line">5317</span><br><span class="line">5318</span><br><span class="line">5319</span><br><span class="line">5320</span><br><span class="line">5321</span><br><span class="line">5322</span><br><span class="line">5323</span><br><span class="line">5324</span><br><span class="line">5325</span><br><span class="line">5326</span><br><span class="line">5327</span><br><span class="line">5328</span><br><span class="line">5329</span><br><span class="line">5330</span><br><span class="line">5331</span><br><span class="line">5332</span><br><span class="line">5333</span><br><span class="line">5334</span><br><span class="line">5335</span><br><span class="line">5336</span><br><span class="line">5337</span><br><span class="line">5338</span><br><span class="line">5339</span><br><span class="line">5340</span><br><span class="line">5341</span><br><span class="line">5342</span><br><span class="line">5343</span><br><span class="line">5344</span><br><span class="line">5345</span><br><span class="line">5346</span><br><span class="line">5347</span><br><span class="line">5348</span><br><span class="line">5349</span><br><span class="line">5350</span><br><span class="line">5351</span><br><span class="line">5352</span><br><span class="line">5353</span><br><span class="line">5354</span><br><span class="line">5355</span><br><span class="line">5356</span><br><span class="line">5357</span><br><span class="line">5358</span><br><span class="line">5359</span><br><span class="line">5360</span><br><span class="line">5361</span><br><span class="line">5362</span><br><span class="line">5363</span><br><span class="line">5364</span><br><span class="line">5365</span><br><span class="line">5366</span><br><span class="line">5367</span><br><span class="line">5368</span><br><span class="line">5369</span><br><span class="line">5370</span><br><span class="line">5371</span><br><span class="line">5372</span><br><span class="line">5373</span><br><span class="line">5374</span><br><span class="line">5375</span><br><span class="line">5376</span><br><span class="line">5377</span><br><span class="line">5378</span><br><span class="line">5379</span><br><span class="line">5380</span><br><span class="line">5381</span><br><span class="line">5382</span><br><span class="line">5383</span><br><span class="line">5384</span><br><span class="line">5385</span><br><span class="line">5386</span><br><span class="line">5387</span><br><span class="line">5388</span><br><span class="line">5389</span><br><span class="line">5390</span><br><span class="line">5391</span><br><span class="line">5392</span><br><span class="line">5393</span><br><span class="line">5394</span><br><span class="line">5395</span><br><span class="line">5396</span><br><span class="line">5397</span><br><span class="line">5398</span><br><span class="line">5399</span><br><span class="line">5400</span><br><span class="line">5401</span><br><span class="line">5402</span><br><span class="line">5403</span><br><span class="line">5404</span><br><span class="line">5405</span><br><span class="line">5406</span><br><span class="line">5407</span><br><span class="line">5408</span><br><span class="line">5409</span><br><span class="line">5410</span><br><span class="line">5411</span><br><span class="line">5412</span><br><span class="line">5413</span><br><span class="line">5414</span><br><span class="line">5415</span><br><span class="line">5416</span><br><span class="line">5417</span><br><span class="line">5418</span><br><span class="line">5419</span><br><span class="line">5420</span><br><span class="line">5421</span><br><span class="line">5422</span><br><span class="line">5423</span><br><span class="line">5424</span><br><span class="line">5425</span><br><span class="line">5426</span><br><span class="line">5427</span><br><span class="line">5428</span><br><span class="line">5429</span><br><span class="line">5430</span><br><span class="line">5431</span><br><span class="line">5432</span><br><span class="line">5433</span><br><span class="line">5434</span><br><span class="line">5435</span><br><span class="line">5436</span><br><span class="line">5437</span><br><span class="line">5438</span><br><span class="line">5439</span><br><span class="line">5440</span><br><span class="line">5441</span><br><span class="line">5442</span><br><span class="line">5443</span><br><span class="line">5444</span><br><span class="line">5445</span><br><span class="line">5446</span><br><span class="line">5447</span><br><span class="line">5448</span><br><span class="line">5449</span><br><span class="line">5450</span><br><span class="line">5451</span><br><span class="line">5452</span><br><span class="line">5453</span><br><span class="line">5454</span><br><span class="line">5455</span><br><span class="line">5456</span><br><span class="line">5457</span><br><span class="line">5458</span><br><span class="line">5459</span><br><span class="line">5460</span><br><span class="line">5461</span><br><span class="line">5462</span><br><span class="line">5463</span><br><span class="line">5464</span><br><span class="line">5465</span><br><span class="line">5466</span><br><span class="line">5467</span><br><span class="line">5468</span><br><span class="line">5469</span><br><span class="line">5470</span><br><span class="line">5471</span><br><span class="line">5472</span><br><span class="line">5473</span><br><span class="line">5474</span><br><span class="line">5475</span><br><span class="line">5476</span><br><span class="line">5477</span><br><span class="line">5478</span><br><span class="line">5479</span><br><span class="line">5480</span><br><span class="line">5481</span><br><span class="line">5482</span><br><span class="line">5483</span><br><span class="line">5484</span><br><span class="line">5485</span><br><span class="line">5486</span><br><span class="line">5487</span><br><span class="line">5488</span><br><span class="line">5489</span><br><span class="line">5490</span><br><span class="line">5491</span><br><span class="line">5492</span><br><span class="line">5493</span><br><span class="line">5494</span><br><span class="line">5495</span><br><span class="line">5496</span><br><span class="line">5497</span><br><span class="line">5498</span><br><span class="line">5499</span><br><span class="line">5500</span><br><span class="line">5501</span><br><span class="line">5502</span><br><span class="line">5503</span><br><span class="line">5504</span><br><span class="line">5505</span><br><span class="line">5506</span><br><span class="line">5507</span><br><span class="line">5508</span><br><span class="line">5509</span><br><span class="line">5510</span><br><span class="line">5511</span><br><span class="line">5512</span><br><span class="line">5513</span><br><span class="line">5514</span><br><span class="line">5515</span><br><span class="line">5516</span><br><span class="line">5517</span><br><span class="line">5518</span><br><span class="line">5519</span><br><span class="line">5520</span><br><span class="line">5521</span><br><span class="line">5522</span><br><span class="line">5523</span><br><span class="line">5524</span><br><span class="line">5525</span><br><span class="line">5526</span><br><span class="line">5527</span><br><span class="line">5528</span><br><span class="line">5529</span><br><span class="line">5530</span><br><span class="line">5531</span><br><span class="line">5532</span><br><span class="line">5533</span><br><span class="line">5534</span><br><span class="line">5535</span><br><span class="line">5536</span><br><span class="line">5537</span><br><span class="line">5538</span><br><span class="line">5539</span><br><span class="line">5540</span><br><span class="line">5541</span><br><span class="line">5542</span><br><span class="line">5543</span><br><span class="line">5544</span><br><span class="line">5545</span><br><span class="line">5546</span><br><span class="line">5547</span><br><span class="line">5548</span><br><span class="line">5549</span><br><span class="line">5550</span><br><span class="line">5551</span><br><span class="line">5552</span><br><span class="line">5553</span><br><span class="line">5554</span><br><span class="line">5555</span><br><span class="line">5556</span><br><span class="line">5557</span><br><span class="line">5558</span><br><span class="line">5559</span><br><span class="line">5560</span><br><span class="line">5561</span><br><span class="line">5562</span><br><span class="line">5563</span><br><span class="line">5564</span><br><span class="line">5565</span><br><span class="line">5566</span><br><span class="line">5567</span><br><span class="line">5568</span><br><span class="line">5569</span><br><span class="line">5570</span><br><span class="line">5571</span><br><span class="line">5572</span><br><span class="line">5573</span><br><span class="line">5574</span><br><span class="line">5575</span><br><span class="line">5576</span><br><span class="line">5577</span><br><span class="line">5578</span><br><span class="line">5579</span><br><span class="line">5580</span><br><span class="line">5581</span><br><span class="line">5582</span><br><span class="line">5583</span><br><span class="line">5584</span><br><span class="line">5585</span><br><span class="line">5586</span><br><span class="line">5587</span><br><span class="line">5588</span><br><span class="line">5589</span><br><span class="line">5590</span><br><span class="line">5591</span><br><span class="line">5592</span><br><span class="line">5593</span><br><span class="line">5594</span><br><span class="line">5595</span><br><span class="line">5596</span><br><span class="line">5597</span><br><span class="line">5598</span><br><span class="line">5599</span><br><span class="line">5600</span><br><span class="line">5601</span><br><span class="line">5602</span><br><span class="line">5603</span><br><span class="line">5604</span><br><span class="line">5605</span><br><span class="line">5606</span><br><span class="line">5607</span><br><span class="line">5608</span><br><span class="line">5609</span><br><span class="line">5610</span><br><span class="line">5611</span><br><span class="line">5612</span><br><span class="line">5613</span><br><span class="line">5614</span><br><span class="line">5615</span><br><span class="line">5616</span><br><span class="line">5617</span><br><span class="line">5618</span><br><span class="line">5619</span><br><span class="line">5620</span><br><span class="line">5621</span><br><span class="line">5622</span><br><span class="line">5623</span><br><span class="line">5624</span><br><span class="line">5625</span><br><span class="line">5626</span><br><span class="line">5627</span><br><span class="line">5628</span><br><span class="line">5629</span><br><span class="line">5630</span><br><span class="line">5631</span><br><span class="line">5632</span><br><span class="line">5633</span><br><span class="line">5634</span><br><span class="line">5635</span><br><span class="line">5636</span><br><span class="line">5637</span><br><span class="line">5638</span><br><span class="line">5639</span><br><span class="line">5640</span><br><span class="line">5641</span><br><span class="line">5642</span><br><span class="line">5643</span><br><span class="line">5644</span><br><span class="line">5645</span><br><span class="line">5646</span><br><span class="line">5647</span><br><span class="line">5648</span><br><span class="line">5649</span><br><span class="line">5650</span><br><span class="line">5651</span><br><span class="line">5652</span><br><span class="line">5653</span><br><span class="line">5654</span><br><span class="line">5655</span><br><span class="line">5656</span><br><span class="line">5657</span><br><span class="line">5658</span><br><span class="line">5659</span><br><span class="line">5660</span><br><span class="line">5661</span><br><span class="line">5662</span><br><span class="line">5663</span><br><span class="line">5664</span><br><span class="line">5665</span><br><span class="line">5666</span><br><span class="line">5667</span><br><span class="line">5668</span><br><span class="line">5669</span><br><span class="line">5670</span><br><span class="line">5671</span><br><span class="line">5672</span><br><span class="line">5673</span><br><span class="line">5674</span><br><span class="line">5675</span><br><span class="line">5676</span><br><span class="line">5677</span><br><span class="line">5678</span><br><span class="line">5679</span><br><span class="line">5680</span><br><span class="line">5681</span><br><span class="line">5682</span><br><span class="line">5683</span><br><span class="line">5684</span><br><span class="line">5685</span><br><span class="line">5686</span><br><span class="line">5687</span><br><span class="line">5688</span><br><span class="line">5689</span><br><span class="line">5690</span><br><span class="line">5691</span><br><span class="line">5692</span><br><span class="line">5693</span><br><span class="line">5694</span><br><span class="line">5695</span><br><span class="line">5696</span><br><span class="line">5697</span><br><span class="line">5698</span><br><span class="line">5699</span><br><span class="line">5700</span><br><span class="line">5701</span><br><span class="line">5702</span><br><span class="line">5703</span><br><span class="line">5704</span><br><span class="line">5705</span><br><span class="line">5706</span><br><span class="line">5707</span><br><span class="line">5708</span><br><span class="line">5709</span><br><span class="line">5710</span><br><span class="line">5711</span><br><span class="line">5712</span><br><span class="line">5713</span><br><span class="line">5714</span><br><span class="line">5715</span><br><span class="line">5716</span><br><span class="line">5717</span><br><span class="line">5718</span><br><span class="line">5719</span><br><span class="line">5720</span><br><span class="line">5721</span><br><span class="line">5722</span><br><span class="line">5723</span><br><span class="line">5724</span><br><span class="line">5725</span><br><span class="line">5726</span><br><span class="line">5727</span><br><span class="line">5728</span><br><span class="line">5729</span><br><span class="line">5730</span><br><span class="line">5731</span><br><span class="line">5732</span><br><span class="line">5733</span><br><span class="line">5734</span><br><span class="line">5735</span><br><span class="line">5736</span><br><span class="line">5737</span><br><span class="line">5738</span><br><span class="line">5739</span><br><span class="line">5740</span><br><span class="line">5741</span><br><span class="line">5742</span><br><span class="line">5743</span><br><span class="line">5744</span><br><span class="line">5745</span><br><span class="line">5746</span><br><span class="line">5747</span><br><span class="line">5748</span><br><span class="line">5749</span><br><span class="line">5750</span><br><span class="line">5751</span><br><span class="line">5752</span><br><span class="line">5753</span><br><span class="line">5754</span><br><span class="line">5755</span><br><span class="line">5756</span><br><span class="line">5757</span><br><span class="line">5758</span><br><span class="line">5759</span><br><span class="line">5760</span><br><span class="line">5761</span><br><span class="line">5762</span><br><span class="line">5763</span><br><span class="line">5764</span><br><span class="line">5765</span><br><span class="line">5766</span><br><span class="line">5767</span><br><span class="line">5768</span><br><span class="line">5769</span><br><span class="line">5770</span><br><span class="line">5771</span><br><span class="line">5772</span><br><span class="line">5773</span><br><span class="line">5774</span><br><span class="line">5775</span><br><span class="line">5776</span><br><span class="line">5777</span><br><span class="line">5778</span><br><span class="line">5779</span><br><span class="line">5780</span><br><span class="line">5781</span><br><span class="line">5782</span><br><span class="line">5783</span><br><span class="line">5784</span><br><span class="line">5785</span><br><span class="line">5786</span><br><span class="line">5787</span><br><span class="line">5788</span><br><span class="line">5789</span><br><span class="line">5790</span><br><span class="line">5791</span><br><span class="line">5792</span><br><span class="line">5793</span><br><span class="line">5794</span><br><span class="line">5795</span><br><span class="line">5796</span><br><span class="line">5797</span><br><span class="line">5798</span><br><span class="line">5799</span><br><span class="line">5800</span><br><span class="line">5801</span><br><span class="line">5802</span><br><span class="line">5803</span><br><span class="line">5804</span><br><span class="line">5805</span><br><span class="line">5806</span><br><span class="line">5807</span><br><span class="line">5808</span><br><span class="line">5809</span><br><span class="line">5810</span><br><span class="line">5811</span><br><span class="line">5812</span><br><span class="line">5813</span><br><span class="line">5814</span><br><span class="line">5815</span><br><span class="line">5816</span><br><span class="line">5817</span><br><span class="line">5818</span><br><span class="line">5819</span><br><span class="line">5820</span><br><span class="line">5821</span><br><span class="line">5822</span><br><span class="line">5823</span><br><span class="line">5824</span><br><span class="line">5825</span><br><span class="line">5826</span><br><span class="line">5827</span><br><span class="line">5828</span><br><span class="line">5829</span><br><span class="line">5830</span><br><span class="line">5831</span><br><span class="line">5832</span><br><span class="line">5833</span><br><span class="line">5834</span><br><span class="line">5835</span><br><span class="line">5836</span><br><span class="line">5837</span><br><span class="line">5838</span><br><span class="line">5839</span><br><span class="line">5840</span><br><span class="line">5841</span><br><span class="line">5842</span><br><span class="line">5843</span><br><span class="line">5844</span><br><span class="line">5845</span><br><span class="line">5846</span><br><span class="line">5847</span><br><span class="line">5848</span><br><span class="line">5849</span><br><span class="line">5850</span><br><span class="line">5851</span><br><span class="line">5852</span><br><span class="line">5853</span><br><span class="line">5854</span><br><span class="line">5855</span><br><span class="line">5856</span><br><span class="line">5857</span><br><span class="line">5858</span><br><span class="line">5859</span><br><span class="line">5860</span><br><span class="line">5861</span><br><span class="line">5862</span><br><span class="line">5863</span><br><span class="line">5864</span><br><span class="line">5865</span><br><span class="line">5866</span><br><span class="line">5867</span><br><span class="line">5868</span><br><span class="line">5869</span><br><span class="line">5870</span><br><span class="line">5871</span><br><span class="line">5872</span><br><span class="line">5873</span><br><span class="line">5874</span><br><span class="line">5875</span><br><span class="line">5876</span><br><span class="line">5877</span><br><span class="line">5878</span><br><span class="line">5879</span><br><span class="line">5880</span><br><span class="line">5881</span><br><span class="line">5882</span><br><span class="line">5883</span><br><span class="line">5884</span><br><span class="line">5885</span><br><span class="line">5886</span><br><span class="line">5887</span><br><span class="line">5888</span><br><span class="line">5889</span><br><span class="line">5890</span><br><span class="line">5891</span><br><span class="line">5892</span><br><span class="line">5893</span><br><span class="line">5894</span><br><span class="line">5895</span><br><span class="line">5896</span><br><span class="line">5897</span><br><span class="line">5898</span><br><span class="line">5899</span><br><span class="line">5900</span><br><span class="line">5901</span><br><span class="line">5902</span><br><span class="line">5903</span><br><span class="line">5904</span><br><span class="line">5905</span><br><span class="line">5906</span><br><span class="line">5907</span><br><span class="line">5908</span><br><span class="line">5909</span><br><span class="line">5910</span><br><span class="line">5911</span><br><span class="line">5912</span><br><span class="line">5913</span><br><span class="line">5914</span><br><span class="line">5915</span><br><span class="line">5916</span><br><span class="line">5917</span><br><span class="line">5918</span><br><span class="line">5919</span><br><span class="line">5920</span><br><span class="line">5921</span><br><span class="line">5922</span><br><span class="line">5923</span><br><span class="line">5924</span><br><span class="line">5925</span><br><span class="line">5926</span><br><span class="line">5927</span><br><span class="line">5928</span><br><span class="line">5929</span><br><span class="line">5930</span><br><span class="line">5931</span><br><span class="line">5932</span><br><span class="line">5933</span><br><span class="line">5934</span><br><span class="line">5935</span><br><span class="line">5936</span><br><span class="line">5937</span><br><span class="line">5938</span><br><span class="line">5939</span><br><span class="line">5940</span><br><span class="line">5941</span><br><span class="line">5942</span><br><span class="line">5943</span><br><span class="line">5944</span><br><span class="line">5945</span><br><span class="line">5946</span><br><span class="line">5947</span><br><span class="line">5948</span><br><span class="line">5949</span><br><span class="line">5950</span><br><span class="line">5951</span><br><span class="line">5952</span><br><span class="line">5953</span><br><span class="line">5954</span><br><span class="line">5955</span><br><span class="line">5956</span><br><span class="line">5957</span><br><span class="line">5958</span><br><span class="line">5959</span><br><span class="line">5960</span><br><span class="line">5961</span><br><span class="line">5962</span><br><span class="line">5963</span><br><span class="line">5964</span><br><span class="line">5965</span><br><span class="line">5966</span><br><span class="line">5967</span><br><span class="line">5968</span><br><span class="line">5969</span><br><span class="line">5970</span><br><span class="line">5971</span><br><span class="line">5972</span><br><span class="line">5973</span><br><span class="line">5974</span><br><span class="line">5975</span><br><span class="line">5976</span><br><span class="line">5977</span><br><span class="line">5978</span><br><span class="line">5979</span><br><span class="line">5980</span><br><span class="line">5981</span><br><span class="line">5982</span><br><span class="line">5983</span><br><span class="line">5984</span><br><span class="line">5985</span><br><span class="line">5986</span><br><span class="line">5987</span><br><span class="line">5988</span><br><span class="line">5989</span><br><span class="line">5990</span><br><span class="line">5991</span><br><span class="line">5992</span><br><span class="line">5993</span><br><span class="line">5994</span><br><span class="line">5995</span><br><span class="line">5996</span><br><span class="line">5997</span><br><span class="line">5998</span><br><span class="line">5999</span><br><span class="line">6000</span><br><span class="line">6001</span><br><span class="line">6002</span><br><span class="line">6003</span><br><span class="line">6004</span><br><span class="line">6005</span><br><span class="line">6006</span><br><span class="line">6007</span><br><span class="line">6008</span><br><span class="line">6009</span><br><span class="line">6010</span><br><span class="line">6011</span><br><span class="line">6012</span><br><span class="line">6013</span><br><span class="line">6014</span><br><span class="line">6015</span><br><span class="line">6016</span><br><span class="line">6017</span><br><span class="line">6018</span><br><span class="line">6019</span><br><span class="line">6020</span><br><span class="line">6021</span><br><span class="line">6022</span><br><span class="line">6023</span><br><span class="line">6024</span><br><span class="line">6025</span><br><span class="line">6026</span><br><span class="line">6027</span><br><span class="line">6028</span><br><span class="line">6029</span><br><span class="line">6030</span><br><span class="line">6031</span><br><span class="line">6032</span><br><span class="line">6033</span><br><span class="line">6034</span><br><span class="line">6035</span><br><span class="line">6036</span><br><span class="line">6037</span><br><span class="line">6038</span><br><span class="line">6039</span><br><span class="line">6040</span><br><span class="line">6041</span><br><span class="line">6042</span><br><span class="line">6043</span><br><span class="line">6044</span><br><span class="line">6045</span><br><span class="line">6046</span><br><span class="line">6047</span><br><span class="line">6048</span><br><span class="line">6049</span><br><span class="line">6050</span><br><span class="line">6051</span><br><span class="line">6052</span><br><span class="line">6053</span><br><span class="line">6054</span><br><span class="line">6055</span><br><span class="line">6056</span><br><span class="line">6057</span><br><span class="line">6058</span><br><span class="line">6059</span><br><span class="line">6060</span><br><span class="line">6061</span><br><span class="line">6062</span><br><span class="line">6063</span><br><span class="line">6064</span><br><span class="line">6065</span><br><span class="line">6066</span><br><span class="line">6067</span><br><span class="line">6068</span><br><span class="line">6069</span><br><span class="line">6070</span><br><span class="line">6071</span><br><span class="line">6072</span><br><span class="line">6073</span><br><span class="line">6074</span><br><span class="line">6075</span><br><span class="line">6076</span><br><span class="line">6077</span><br><span class="line">6078</span><br><span class="line">6079</span><br><span class="line">6080</span><br><span class="line">6081</span><br><span class="line">6082</span><br><span class="line">6083</span><br><span class="line">6084</span><br><span class="line">6085</span><br><span class="line">6086</span><br><span class="line">6087</span><br><span class="line">6088</span><br><span class="line">6089</span><br><span class="line">6090</span><br><span class="line">6091</span><br><span class="line">6092</span><br><span class="line">6093</span><br><span class="line">6094</span><br><span class="line">6095</span><br><span class="line">6096</span><br><span class="line">6097</span><br><span class="line">6098</span><br><span class="line">6099</span><br><span class="line">6100</span><br><span class="line">6101</span><br><span class="line">6102</span><br><span class="line">6103</span><br><span class="line">6104</span><br><span class="line">6105</span><br><span class="line">6106</span><br><span class="line">6107</span><br><span class="line">6108</span><br><span class="line">6109</span><br><span class="line">6110</span><br><span class="line">6111</span><br><span class="line">6112</span><br><span class="line">6113</span><br><span class="line">6114</span><br><span class="line">6115</span><br><span class="line">6116</span><br><span class="line">6117</span><br><span class="line">6118</span><br><span class="line">6119</span><br><span class="line">6120</span><br><span class="line">6121</span><br><span class="line">6122</span><br><span class="line">6123</span><br><span class="line">6124</span><br><span class="line">6125</span><br><span class="line">6126</span><br><span class="line">6127</span><br><span class="line">6128</span><br><span class="line">6129</span><br><span class="line">6130</span><br><span class="line">6131</span><br><span class="line">6132</span><br><span class="line">6133</span><br><span class="line">6134</span><br><span class="line">6135</span><br><span class="line">6136</span><br><span class="line">6137</span><br><span class="line">6138</span><br><span class="line">6139</span><br><span class="line">6140</span><br><span class="line">6141</span><br><span class="line">6142</span><br><span class="line">6143</span><br><span class="line">6144</span><br><span class="line">6145</span><br><span class="line">6146</span><br><span class="line">6147</span><br><span class="line">6148</span><br><span class="line">6149</span><br><span class="line">6150</span><br><span class="line">6151</span><br><span class="line">6152</span><br><span class="line">6153</span><br><span class="line">6154</span><br><span class="line">6155</span><br><span class="line">6156</span><br><span class="line">6157</span><br><span class="line">6158</span><br><span class="line">6159</span><br><span class="line">6160</span><br><span class="line">6161</span><br><span class="line">6162</span><br><span class="line">6163</span><br><span class="line">6164</span><br><span class="line">6165</span><br><span class="line">6166</span><br><span class="line">6167</span><br><span class="line">6168</span><br><span class="line">6169</span><br><span class="line">6170</span><br><span class="line">6171</span><br><span class="line">6172</span><br><span class="line">6173</span><br><span class="line">6174</span><br><span class="line">6175</span><br><span class="line">6176</span><br><span class="line">6177</span><br><span class="line">6178</span><br><span class="line">6179</span><br><span class="line">6180</span><br><span class="line">6181</span><br><span class="line">6182</span><br><span class="line">6183</span><br><span class="line">6184</span><br><span class="line">6185</span><br><span class="line">6186</span><br><span class="line">6187</span><br><span class="line">6188</span><br><span class="line">6189</span><br><span class="line">6190</span><br><span class="line">6191</span><br><span class="line">6192</span><br><span class="line">6193</span><br><span class="line">6194</span><br><span class="line">6195</span><br><span class="line">6196</span><br><span class="line">6197</span><br><span class="line">6198</span><br><span class="line">6199</span><br><span class="line">6200</span><br><span class="line">6201</span><br><span class="line">6202</span><br><span class="line">6203</span><br><span class="line">6204</span><br><span class="line">6205</span><br><span class="line">6206</span><br><span class="line">6207</span><br><span class="line">6208</span><br><span class="line">6209</span><br><span class="line">6210</span><br><span class="line">6211</span><br><span class="line">6212</span><br><span class="line">6213</span><br><span class="line">6214</span><br><span class="line">6215</span><br><span class="line">6216</span><br><span class="line">6217</span><br><span class="line">6218</span><br><span class="line">6219</span><br><span class="line">6220</span><br><span class="line">6221</span><br><span class="line">6222</span><br><span class="line">6223</span><br><span class="line">6224</span><br><span class="line">6225</span><br><span class="line">6226</span><br><span class="line">6227</span><br><span class="line">6228</span><br><span class="line">6229</span><br><span class="line">6230</span><br><span class="line">6231</span><br><span class="line">6232</span><br><span class="line">6233</span><br><span class="line">6234</span><br><span class="line">6235</span><br><span class="line">6236</span><br><span class="line">6237</span><br><span class="line">6238</span><br><span class="line">6239</span><br><span class="line">6240</span><br><span class="line">6241</span><br><span class="line">6242</span><br><span class="line">6243</span><br><span class="line">6244</span><br><span class="line">6245</span><br><span class="line">6246</span><br><span class="line">6247</span><br><span class="line">6248</span><br><span class="line">6249</span><br><span class="line">6250</span><br><span class="line">6251</span><br><span class="line">6252</span><br><span class="line">6253</span><br><span class="line">6254</span><br><span class="line">6255</span><br><span class="line">6256</span><br><span class="line">6257</span><br><span class="line">6258</span><br><span class="line">6259</span><br><span class="line">6260</span><br><span class="line">6261</span><br><span class="line">6262</span><br><span class="line">6263</span><br><span class="line">6264</span><br><span class="line">6265</span><br><span class="line">6266</span><br><span class="line">6267</span><br><span class="line">6268</span><br><span class="line">6269</span><br><span class="line">6270</span><br><span class="line">6271</span><br><span class="line">6272</span><br><span class="line">6273</span><br><span class="line">6274</span><br><span class="line">6275</span><br><span class="line">6276</span><br><span class="line">6277</span><br><span class="line">6278</span><br><span class="line">6279</span><br><span class="line">6280</span><br><span class="line">6281</span><br><span class="line">6282</span><br><span class="line">6283</span><br><span class="line">6284</span><br><span class="line">6285</span><br><span class="line">6286</span><br><span class="line">6287</span><br><span class="line">6288</span><br><span class="line">6289</span><br><span class="line">6290</span><br><span class="line">6291</span><br><span class="line">6292</span><br><span class="line">6293</span><br><span class="line">6294</span><br><span class="line">6295</span><br><span class="line">6296</span><br><span class="line">6297</span><br><span class="line">6298</span><br><span class="line">6299</span><br><span class="line">6300</span><br><span class="line">6301</span><br><span class="line">6302</span><br><span class="line">6303</span><br><span class="line">6304</span><br><span class="line">6305</span><br><span class="line">6306</span><br><span class="line">6307</span><br><span class="line">6308</span><br><span class="line">6309</span><br><span class="line">6310</span><br><span class="line">6311</span><br><span class="line">6312</span><br><span class="line">6313</span><br><span class="line">6314</span><br><span class="line">6315</span><br><span class="line">6316</span><br><span class="line">6317</span><br><span class="line">6318</span><br><span class="line">6319</span><br><span class="line">6320</span><br><span class="line">6321</span><br><span class="line">6322</span><br><span class="line">6323</span><br><span class="line">6324</span><br><span class="line">6325</span><br><span class="line">6326</span><br><span class="line">6327</span><br><span class="line">6328</span><br><span class="line">6329</span><br><span class="line">6330</span><br><span class="line">6331</span><br><span class="line">6332</span><br><span class="line">6333</span><br><span class="line">6334</span><br><span class="line">6335</span><br><span class="line">6336</span><br><span class="line">6337</span><br><span class="line">6338</span><br><span class="line">6339</span><br><span class="line">6340</span><br><span class="line">6341</span><br><span class="line">6342</span><br><span class="line">6343</span><br><span class="line">6344</span><br><span class="line">6345</span><br><span class="line">6346</span><br><span class="line">6347</span><br><span class="line">6348</span><br><span class="line">6349</span><br><span class="line">6350</span><br><span class="line">6351</span><br><span class="line">6352</span><br><span class="line">6353</span><br><span class="line">6354</span><br><span class="line">6355</span><br><span class="line">6356</span><br><span class="line">6357</span><br><span class="line">6358</span><br><span class="line">6359</span><br><span class="line">6360</span><br><span class="line">6361</span><br><span class="line">6362</span><br><span class="line">6363</span><br><span class="line">6364</span><br><span class="line">6365</span><br><span class="line">6366</span><br><span class="line">6367</span><br><span class="line">6368</span><br><span class="line">6369</span><br><span class="line">6370</span><br><span class="line">6371</span><br><span class="line">6372</span><br><span class="line">6373</span><br><span class="line">6374</span><br><span class="line">6375</span><br><span class="line">6376</span><br><span class="line">6377</span><br><span class="line">6378</span><br><span class="line">6379</span><br><span class="line">6380</span><br><span class="line">6381</span><br><span class="line">6382</span><br><span class="line">6383</span><br><span class="line">6384</span><br><span class="line">6385</span><br><span class="line">6386</span><br><span class="line">6387</span><br><span class="line">6388</span><br><span class="line">6389</span><br><span class="line">6390</span><br><span class="line">6391</span><br><span class="line">6392</span><br><span class="line">6393</span><br><span class="line">6394</span><br><span class="line">6395</span><br><span class="line">6396</span><br><span class="line">6397</span><br><span class="line">6398</span><br><span class="line">6399</span><br><span class="line">6400</span><br><span class="line">6401</span><br><span class="line">6402</span><br><span class="line">6403</span><br><span class="line">6404</span><br><span class="line">6405</span><br><span class="line">6406</span><br><span class="line">6407</span><br><span class="line">6408</span><br><span class="line">6409</span><br><span class="line">6410</span><br><span class="line">6411</span><br><span class="line">6412</span><br><span class="line">6413</span><br><span class="line">6414</span><br><span class="line">6415</span><br><span class="line">6416</span><br><span class="line">6417</span><br><span class="line">6418</span><br><span class="line">6419</span><br><span class="line">6420</span><br><span class="line">6421</span><br><span class="line">6422</span><br><span class="line">6423</span><br><span class="line">6424</span><br><span class="line">6425</span><br><span class="line">6426</span><br><span class="line">6427</span><br><span class="line">6428</span><br><span class="line">6429</span><br><span class="line">6430</span><br><span class="line">6431</span><br><span class="line">6432</span><br><span class="line">6433</span><br><span class="line">6434</span><br><span class="line">6435</span><br><span class="line">6436</span><br><span class="line">6437</span><br><span class="line">6438</span><br><span class="line">6439</span><br><span class="line">6440</span><br><span class="line">6441</span><br><span class="line">6442</span><br><span class="line">6443</span><br><span class="line">6444</span><br><span class="line">6445</span><br><span class="line">6446</span><br><span class="line">6447</span><br><span class="line">6448</span><br><span class="line">6449</span><br><span class="line">6450</span><br><span class="line">6451</span><br><span class="line">6452</span><br><span class="line">6453</span><br><span class="line">6454</span><br><span class="line">6455</span><br><span class="line">6456</span><br><span class="line">6457</span><br><span class="line">6458</span><br><span class="line">6459</span><br><span class="line">6460</span><br><span class="line">6461</span><br><span class="line">6462</span><br><span class="line">6463</span><br><span class="line">6464</span><br><span class="line">6465</span><br><span class="line">6466</span><br><span class="line">6467</span><br><span class="line">6468</span><br><span class="line">6469</span><br><span class="line">6470</span><br><span class="line">6471</span><br><span class="line">6472</span><br><span class="line">6473</span><br><span class="line">6474</span><br><span class="line">6475</span><br><span class="line">6476</span><br><span class="line">6477</span><br><span class="line">6478</span><br><span class="line">6479</span><br><span class="line">6480</span><br><span class="line">6481</span><br><span class="line">6482</span><br><span class="line">6483</span><br><span class="line">6484</span><br><span class="line">6485</span><br><span class="line">6486</span><br><span class="line">6487</span><br><span class="line">6488</span><br><span class="line">6489</span><br><span class="line">6490</span><br><span class="line">6491</span><br><span class="line">6492</span><br><span class="line">6493</span><br><span class="line">6494</span><br><span class="line">6495</span><br><span class="line">6496</span><br><span class="line">6497</span><br><span class="line">6498</span><br><span class="line">6499</span><br><span class="line">6500</span><br><span class="line">6501</span><br><span class="line">6502</span><br><span class="line">6503</span><br><span class="line">6504</span><br><span class="line">6505</span><br><span class="line">6506</span><br><span class="line">6507</span><br><span class="line">6508</span><br><span class="line">6509</span><br><span class="line">6510</span><br><span class="line">6511</span><br><span class="line">6512</span><br><span class="line">6513</span><br><span class="line">6514</span><br><span class="line">6515</span><br><span class="line">6516</span><br><span class="line">6517</span><br><span class="line">6518</span><br><span class="line">6519</span><br><span class="line">6520</span><br><span class="line">6521</span><br><span class="line">6522</span><br><span class="line">6523</span><br><span class="line">6524</span><br><span class="line">6525</span><br><span class="line">6526</span><br><span class="line">6527</span><br><span class="line">6528</span><br><span class="line">6529</span><br><span class="line">6530</span><br><span class="line">6531</span><br><span class="line">6532</span><br><span class="line">6533</span><br><span class="line">6534</span><br><span class="line">6535</span><br><span class="line">6536</span><br><span class="line">6537</span><br><span class="line">6538</span><br><span class="line">6539</span><br><span class="line">6540</span><br><span class="line">6541</span><br><span class="line">6542</span><br><span class="line">6543</span><br><span class="line">6544</span><br><span class="line">6545</span><br><span class="line">6546</span><br><span class="line">6547</span><br><span class="line">6548</span><br><span class="line">6549</span><br><span class="line">6550</span><br><span class="line">6551</span><br><span class="line">6552</span><br><span class="line">6553</span><br><span class="line">6554</span><br><span class="line">6555</span><br><span class="line">6556</span><br><span class="line">6557</span><br><span class="line">6558</span><br><span class="line">6559</span><br><span class="line">6560</span><br><span class="line">6561</span><br><span class="line">6562</span><br><span class="line">6563</span><br><span class="line">6564</span><br><span class="line">6565</span><br><span class="line">6566</span><br><span class="line">6567</span><br><span class="line">6568</span><br><span class="line">6569</span><br><span class="line">6570</span><br><span class="line">6571</span><br><span class="line">6572</span><br><span class="line">6573</span><br><span class="line">6574</span><br><span class="line">6575</span><br><span class="line">6576</span><br><span class="line">6577</span><br><span class="line">6578</span><br><span class="line">6579</span><br><span class="line">6580</span><br><span class="line">6581</span><br><span class="line">6582</span><br><span class="line">6583</span><br><span class="line">6584</span><br><span class="line">6585</span><br><span class="line">6586</span><br><span class="line">6587</span><br><span class="line">6588</span><br><span class="line">6589</span><br><span class="line">6590</span><br><span class="line">6591</span><br><span class="line">6592</span><br><span class="line">6593</span><br><span class="line">6594</span><br><span class="line">6595</span><br><span class="line">6596</span><br><span class="line">6597</span><br><span class="line">6598</span><br><span class="line">6599</span><br><span class="line">6600</span><br><span class="line">6601</span><br><span class="line">6602</span><br><span class="line">6603</span><br><span class="line">6604</span><br><span class="line">6605</span><br><span class="line">6606</span><br><span class="line">6607</span><br><span class="line">6608</span><br><span class="line">6609</span><br><span class="line">6610</span><br><span class="line">6611</span><br><span class="line">6612</span><br><span class="line">6613</span><br><span class="line">6614</span><br><span class="line">6615</span><br><span class="line">6616</span><br><span class="line">6617</span><br><span class="line">6618</span><br><span class="line">6619</span><br><span class="line">6620</span><br><span class="line">6621</span><br><span class="line">6622</span><br><span class="line">6623</span><br><span class="line">6624</span><br><span class="line">6625</span><br><span class="line">6626</span><br><span class="line">6627</span><br><span class="line">6628</span><br><span class="line">6629</span><br><span class="line">6630</span><br><span class="line">6631</span><br><span class="line">6632</span><br><span class="line">6633</span><br><span class="line">6634</span><br><span class="line">6635</span><br><span class="line">6636</span><br><span class="line">6637</span><br><span class="line">6638</span><br><span class="line">6639</span><br><span class="line">6640</span><br><span class="line">6641</span><br><span class="line">6642</span><br><span class="line">6643</span><br><span class="line">6644</span><br><span class="line">6645</span><br><span class="line">6646</span><br><span class="line">6647</span><br><span class="line">6648</span><br><span class="line">6649</span><br><span class="line">6650</span><br><span class="line">6651</span><br><span class="line">6652</span><br><span class="line">6653</span><br><span class="line">6654</span><br><span class="line">6655</span><br><span class="line">6656</span><br><span class="line">6657</span><br><span class="line">6658</span><br><span class="line">6659</span><br><span class="line">6660</span><br><span class="line">6661</span><br><span class="line">6662</span><br><span class="line">6663</span><br><span class="line">6664</span><br><span class="line">6665</span><br><span class="line">6666</span><br><span class="line">6667</span><br><span class="line">6668</span><br><span class="line">6669</span><br><span class="line">6670</span><br><span class="line">6671</span><br><span class="line">6672</span><br><span class="line">6673</span><br><span class="line">6674</span><br><span class="line">6675</span><br><span class="line">6676</span><br><span class="line">6677</span><br><span class="line">6678</span><br><span class="line">6679</span><br><span class="line">6680</span><br><span class="line">6681</span><br><span class="line">6682</span><br><span class="line">6683</span><br><span class="line">6684</span><br><span class="line">6685</span><br><span class="line">6686</span><br><span class="line">6687</span><br><span class="line">6688</span><br><span class="line">6689</span><br><span class="line">6690</span><br><span class="line">6691</span><br><span class="line">6692</span><br><span class="line">6693</span><br><span class="line">6694</span><br><span class="line">6695</span><br><span class="line">6696</span><br><span class="line">6697</span><br><span class="line">6698</span><br><span class="line">6699</span><br><span class="line">6700</span><br><span class="line">6701</span><br><span class="line">6702</span><br><span class="line">6703</span><br><span class="line">6704</span><br><span class="line">6705</span><br><span class="line">6706</span><br><span class="line">6707</span><br><span class="line">6708</span><br><span class="line">6709</span><br><span class="line">6710</span><br><span class="line">6711</span><br><span class="line">6712</span><br><span class="line">6713</span><br><span class="line">6714</span><br><span class="line">6715</span><br><span class="line">6716</span><br><span class="line">6717</span><br><span class="line">6718</span><br><span class="line">6719</span><br><span class="line">6720</span><br><span class="line">6721</span><br><span class="line">6722</span><br><span class="line">6723</span><br><span class="line">6724</span><br><span class="line">6725</span><br><span class="line">6726</span><br><span class="line">6727</span><br><span class="line">6728</span><br><span class="line">6729</span><br><span class="line">6730</span><br><span class="line">6731</span><br><span class="line">6732</span><br><span class="line">6733</span><br><span class="line">6734</span><br><span class="line">6735</span><br><span class="line">6736</span><br><span class="line">6737</span><br><span class="line">6738</span><br><span class="line">6739</span><br><span class="line">6740</span><br><span class="line">6741</span><br><span class="line">6742</span><br><span class="line">6743</span><br><span class="line">6744</span><br><span class="line">6745</span><br><span class="line">6746</span><br><span class="line">6747</span><br><span class="line">6748</span><br><span class="line">6749</span><br><span class="line">6750</span><br><span class="line">6751</span><br><span class="line">6752</span><br><span class="line">6753</span><br><span class="line">6754</span><br><span class="line">6755</span><br><span class="line">6756</span><br><span class="line">6757</span><br><span class="line">6758</span><br><span class="line">6759</span><br><span class="line">6760</span><br><span class="line">6761</span><br><span class="line">6762</span><br><span class="line">6763</span><br><span class="line">6764</span><br><span class="line">6765</span><br><span class="line">6766</span><br><span class="line">6767</span><br><span class="line">6768</span><br><span class="line">6769</span><br><span class="line">6770</span><br><span class="line">6771</span><br><span class="line">6772</span><br><span class="line">6773</span><br><span class="line">6774</span><br><span class="line">6775</span><br><span class="line">6776</span><br><span class="line">6777</span><br><span class="line">6778</span><br><span class="line">6779</span><br><span class="line">6780</span><br><span class="line">6781</span><br><span class="line">6782</span><br><span class="line">6783</span><br><span class="line">6784</span><br><span class="line">6785</span><br><span class="line">6786</span><br><span class="line">6787</span><br><span class="line">6788</span><br><span class="line">6789</span><br><span class="line">6790</span><br><span class="line">6791</span><br><span class="line">6792</span><br><span class="line">6793</span><br><span class="line">6794</span><br><span class="line">6795</span><br><span class="line">6796</span><br><span class="line">6797</span><br><span class="line">6798</span><br><span class="line">6799</span><br><span class="line">6800</span><br><span class="line">6801</span><br><span class="line">6802</span><br><span class="line">6803</span><br><span class="line">6804</span><br><span class="line">6805</span><br><span class="line">6806</span><br><span class="line">6807</span><br><span class="line">6808</span><br><span class="line">6809</span><br><span class="line">6810</span><br><span class="line">6811</span><br><span class="line">6812</span><br><span class="line">6813</span><br><span class="line">6814</span><br><span class="line">6815</span><br><span class="line">6816</span><br><span class="line">6817</span><br><span class="line">6818</span><br><span class="line">6819</span><br><span class="line">6820</span><br><span class="line">6821</span><br><span class="line">6822</span><br><span class="line">6823</span><br><span class="line">6824</span><br><span class="line">6825</span><br><span class="line">6826</span><br><span class="line">6827</span><br><span class="line">6828</span><br><span class="line">6829</span><br><span class="line">6830</span><br><span class="line">6831</span><br><span class="line">6832</span><br><span class="line">6833</span><br><span class="line">6834</span><br><span class="line">6835</span><br><span class="line">6836</span><br><span class="line">6837</span><br><span class="line">6838</span><br><span class="line">6839</span><br><span class="line">6840</span><br><span class="line">6841</span><br><span class="line">6842</span><br><span class="line">6843</span><br><span class="line">6844</span><br><span class="line">6845</span><br><span class="line">6846</span><br><span class="line">6847</span><br><span class="line">6848</span><br><span class="line">6849</span><br><span class="line">6850</span><br><span class="line">6851</span><br><span class="line">6852</span><br><span class="line">6853</span><br><span class="line">6854</span><br><span class="line">6855</span><br><span class="line">6856</span><br><span class="line">6857</span><br><span class="line">6858</span><br><span class="line">6859</span><br><span class="line">6860</span><br><span class="line">6861</span><br><span class="line">6862</span><br><span class="line">6863</span><br><span class="line">6864</span><br><span class="line">6865</span><br><span class="line">6866</span><br><span class="line">6867</span><br><span class="line">6868</span><br><span class="line">6869</span><br><span class="line">6870</span><br><span class="line">6871</span><br><span class="line">6872</span><br><span class="line">6873</span><br><span class="line">6874</span><br><span class="line">6875</span><br><span class="line">6876</span><br><span class="line">6877</span><br><span class="line">6878</span><br><span class="line">6879</span><br><span class="line">6880</span><br><span class="line">6881</span><br><span class="line">6882</span><br><span class="line">6883</span><br><span class="line">6884</span><br><span class="line">6885</span><br><span class="line">6886</span><br><span class="line">6887</span><br><span class="line">6888</span><br><span class="line">6889</span><br><span class="line">6890</span><br><span class="line">6891</span><br><span class="line">6892</span><br><span class="line">6893</span><br><span class="line">6894</span><br><span class="line">6895</span><br><span class="line">6896</span><br><span class="line">6897</span><br><span class="line">6898</span><br><span class="line">6899</span><br><span class="line">6900</span><br><span class="line">6901</span><br><span class="line">6902</span><br><span class="line">6903</span><br><span class="line">6904</span><br><span class="line">6905</span><br><span class="line">6906</span><br><span class="line">6907</span><br><span class="line">6908</span><br><span class="line">6909</span><br><span class="line">6910</span><br><span class="line">6911</span><br><span class="line">6912</span><br><span class="line">6913</span><br><span class="line">6914</span><br><span class="line">6915</span><br><span class="line">6916</span><br><span class="line">6917</span><br><span class="line">6918</span><br><span class="line">6919</span><br><span class="line">6920</span><br><span class="line">6921</span><br><span class="line">6922</span><br><span class="line">6923</span><br><span class="line">6924</span><br><span class="line">6925</span><br><span class="line">6926</span><br><span class="line">6927</span><br><span class="line">6928</span><br><span class="line">6929</span><br><span class="line">6930</span><br><span class="line">6931</span><br><span class="line">6932</span><br><span class="line">6933</span><br><span class="line">6934</span><br><span class="line">6935</span><br><span class="line">6936</span><br><span class="line">6937</span><br><span class="line">6938</span><br><span class="line">6939</span><br><span class="line">6940</span><br><span class="line">6941</span><br><span class="line">6942</span><br><span class="line">6943</span><br><span class="line">6944</span><br><span class="line">6945</span><br><span class="line">6946</span><br><span class="line">6947</span><br><span class="line">6948</span><br><span class="line">6949</span><br><span class="line">6950</span><br><span class="line">6951</span><br><span class="line">6952</span><br><span class="line">6953</span><br><span class="line">6954</span><br><span class="line">6955</span><br><span class="line">6956</span><br><span class="line">6957</span><br><span class="line">6958</span><br><span class="line">6959</span><br><span class="line">6960</span><br><span class="line">6961</span><br><span class="line">6962</span><br><span class="line">6963</span><br><span class="line">6964</span><br><span class="line">6965</span><br><span class="line">6966</span><br><span class="line">6967</span><br><span class="line">6968</span><br><span class="line">6969</span><br><span class="line">6970</span><br><span class="line">6971</span><br><span class="line">6972</span><br><span class="line">6973</span><br><span class="line">6974</span><br><span class="line">6975</span><br><span class="line">6976</span><br><span class="line">6977</span><br><span class="line">6978</span><br><span class="line">6979</span><br><span class="line">6980</span><br><span class="line">6981</span><br><span class="line">6982</span><br><span class="line">6983</span><br><span class="line">6984</span><br><span class="line">6985</span><br><span class="line">6986</span><br><span class="line">6987</span><br><span class="line">6988</span><br><span class="line">6989</span><br><span class="line">6990</span><br><span class="line">6991</span><br><span class="line">6992</span><br><span class="line">6993</span><br><span class="line">6994</span><br><span class="line">6995</span><br><span class="line">6996</span><br><span class="line">6997</span><br><span class="line">6998</span><br><span class="line">6999</span><br><span class="line">7000</span><br><span class="line">7001</span><br><span class="line">7002</span><br><span class="line">7003</span><br><span class="line">7004</span><br><span class="line">7005</span><br><span class="line">7006</span><br><span class="line">7007</span><br><span class="line">7008</span><br><span class="line">7009</span><br><span class="line">7010</span><br><span class="line">7011</span><br><span class="line">7012</span><br><span class="line">7013</span><br><span class="line">7014</span><br><span class="line">7015</span><br><span class="line">7016</span><br><span class="line">7017</span><br><span class="line">7018</span><br><span class="line">7019</span><br><span class="line">7020</span><br><span class="line">7021</span><br><span class="line">7022</span><br><span class="line">7023</span><br><span class="line">7024</span><br><span class="line">7025</span><br><span class="line">7026</span><br><span class="line">7027</span><br><span class="line">7028</span><br><span class="line">7029</span><br><span class="line">7030</span><br><span class="line">7031</span><br><span class="line">7032</span><br><span class="line">7033</span><br><span class="line">7034</span><br><span class="line">7035</span><br><span class="line">7036</span><br><span class="line">7037</span><br><span class="line">7038</span><br><span class="line">7039</span><br><span class="line">7040</span><br><span class="line">7041</span><br><span class="line">7042</span><br><span class="line">7043</span><br><span class="line">7044</span><br><span class="line">7045</span><br><span class="line">7046</span><br><span class="line">7047</span><br><span class="line">7048</span><br><span class="line">7049</span><br><span class="line">7050</span><br><span class="line">7051</span><br><span class="line">7052</span><br><span class="line">7053</span><br><span class="line">7054</span><br><span class="line">7055</span><br><span class="line">7056</span><br><span class="line">7057</span><br><span class="line">7058</span><br><span class="line">7059</span><br><span class="line">7060</span><br><span class="line">7061</span><br><span class="line">7062</span><br><span class="line">7063</span><br><span class="line">7064</span><br><span class="line">7065</span><br><span class="line">7066</span><br><span class="line">7067</span><br><span class="line">7068</span><br><span class="line">7069</span><br><span class="line">7070</span><br><span class="line">7071</span><br><span class="line">7072</span><br><span class="line">7073</span><br><span class="line">7074</span><br><span class="line">7075</span><br><span class="line">7076</span><br><span class="line">7077</span><br><span class="line">7078</span><br><span class="line">7079</span><br><span class="line">7080</span><br><span class="line">7081</span><br><span class="line">7082</span><br><span class="line">7083</span><br><span class="line">7084</span><br><span class="line">7085</span><br><span class="line">7086</span><br><span class="line">7087</span><br><span class="line">7088</span><br><span class="line">7089</span><br><span class="line">7090</span><br><span class="line">7091</span><br><span class="line">7092</span><br><span class="line">7093</span><br><span class="line">7094</span><br><span class="line">7095</span><br><span class="line">7096</span><br><span class="line">7097</span><br><span class="line">7098</span><br><span class="line">7099</span><br><span class="line">7100</span><br><span class="line">7101</span><br><span class="line">7102</span><br><span class="line">7103</span><br><span class="line">7104</span><br><span class="line">7105</span><br><span class="line">7106</span><br><span class="line">7107</span><br><span class="line">7108</span><br><span class="line">7109</span><br><span class="line">7110</span><br><span class="line">7111</span><br><span class="line">7112</span><br><span class="line">7113</span><br><span class="line">7114</span><br><span class="line">7115</span><br><span class="line">7116</span><br><span class="line">7117</span><br><span class="line">7118</span><br><span class="line">7119</span><br><span class="line">7120</span><br><span class="line">7121</span><br><span class="line">7122</span><br><span class="line">7123</span><br><span class="line">7124</span><br><span class="line">7125</span><br><span class="line">7126</span><br><span class="line">7127</span><br><span class="line">7128</span><br><span class="line">7129</span><br><span class="line">7130</span><br><span class="line">7131</span><br><span class="line">7132</span><br><span class="line">7133</span><br><span class="line">7134</span><br><span class="line">7135</span><br><span class="line">7136</span><br><span class="line">7137</span><br><span class="line">7138</span><br><span class="line">7139</span><br><span class="line">7140</span><br><span class="line">7141</span><br><span class="line">7142</span><br><span class="line">7143</span><br><span class="line">7144</span><br><span class="line">7145</span><br><span class="line">7146</span><br><span class="line">7147</span><br><span class="line">7148</span><br><span class="line">7149</span><br><span class="line">7150</span><br><span class="line">7151</span><br><span class="line">7152</span><br><span class="line">7153</span><br><span class="line">7154</span><br><span class="line">7155</span><br><span class="line">7156</span><br><span class="line">7157</span><br><span class="line">7158</span><br><span class="line">7159</span><br><span class="line">7160</span><br><span class="line">7161</span><br><span class="line">7162</span><br><span class="line">7163</span><br><span class="line">7164</span><br><span class="line">7165</span><br><span class="line">7166</span><br><span class="line">7167</span><br><span class="line">7168</span><br><span class="line">7169</span><br><span class="line">7170</span><br><span class="line">7171</span><br><span class="line">7172</span><br><span class="line">7173</span><br><span class="line">7174</span><br><span class="line">7175</span><br><span class="line">7176</span><br><span class="line">7177</span><br><span class="line">7178</span><br><span class="line">7179</span><br><span class="line">7180</span><br><span class="line">7181</span><br><span class="line">7182</span><br><span class="line">7183</span><br><span class="line">7184</span><br><span class="line">7185</span><br><span class="line">7186</span><br><span class="line">7187</span><br><span class="line">7188</span><br><span class="line">7189</span><br><span class="line">7190</span><br><span class="line">7191</span><br><span class="line">7192</span><br><span class="line">7193</span><br><span class="line">7194</span><br><span class="line">7195</span><br><span class="line">7196</span><br><span class="line">7197</span><br><span class="line">7198</span><br><span class="line">7199</span><br><span class="line">7200</span><br><span class="line">7201</span><br><span class="line">7202</span><br><span class="line">7203</span><br><span class="line">7204</span><br><span class="line">7205</span><br><span class="line">7206</span><br><span class="line">7207</span><br><span class="line">7208</span><br><span class="line">7209</span><br><span class="line">7210</span><br><span class="line">7211</span><br><span class="line">7212</span><br><span class="line">7213</span><br><span class="line">7214</span><br><span class="line">7215</span><br><span class="line">7216</span><br><span class="line">7217</span><br><span class="line">7218</span><br><span class="line">7219</span><br><span class="line">7220</span><br><span class="line">7221</span><br><span class="line">7222</span><br><span class="line">7223</span><br><span class="line">7224</span><br><span class="line">7225</span><br><span class="line">7226</span><br><span class="line">7227</span><br><span class="line">7228</span><br><span class="line">7229</span><br><span class="line">7230</span><br><span class="line">7231</span><br><span class="line">7232</span><br><span class="line">7233</span><br><span class="line">7234</span><br><span class="line">7235</span><br><span class="line">7236</span><br><span class="line">7237</span><br><span class="line">7238</span><br><span class="line">7239</span><br><span class="line">7240</span><br><span class="line">7241</span><br><span class="line">7242</span><br><span class="line">7243</span><br><span class="line">7244</span><br><span class="line">7245</span><br><span class="line">7246</span><br><span class="line">7247</span><br><span class="line">7248</span><br><span class="line">7249</span><br><span class="line">7250</span><br><span class="line">7251</span><br><span class="line">7252</span><br><span class="line">7253</span><br><span class="line">7254</span><br><span class="line">7255</span><br><span class="line">7256</span><br><span class="line">7257</span><br><span class="line">7258</span><br><span class="line">7259</span><br><span class="line">7260</span><br><span class="line">7261</span><br><span class="line">7262</span><br><span class="line">7263</span><br><span class="line">7264</span><br><span class="line">7265</span><br><span class="line">7266</span><br><span class="line">7267</span><br><span class="line">7268</span><br><span class="line">7269</span><br><span class="line">7270</span><br><span class="line">7271</span><br><span class="line">7272</span><br><span class="line">7273</span><br><span class="line">7274</span><br><span class="line">7275</span><br><span class="line">7276</span><br><span class="line">7277</span><br><span class="line">7278</span><br><span class="line">7279</span><br><span class="line">7280</span><br><span class="line">7281</span><br><span class="line">7282</span><br><span class="line">7283</span><br><span class="line">7284</span><br><span class="line">7285</span><br><span class="line">7286</span><br><span class="line">7287</span><br><span class="line">7288</span><br><span class="line">7289</span><br><span class="line">7290</span><br><span class="line">7291</span><br><span class="line">7292</span><br><span class="line">7293</span><br><span class="line">7294</span><br><span class="line">7295</span><br><span class="line">7296</span><br><span class="line">7297</span><br><span class="line">7298</span><br><span class="line">7299</span><br><span class="line">7300</span><br><span class="line">7301</span><br><span class="line">7302</span><br><span class="line">7303</span><br><span class="line">7304</span><br><span class="line">7305</span><br><span class="line">7306</span><br><span class="line">7307</span><br><span class="line">7308</span><br><span class="line">7309</span><br><span class="line">7310</span><br><span class="line">7311</span><br><span class="line">7312</span><br><span class="line">7313</span><br><span class="line">7314</span><br><span class="line">7315</span><br><span class="line">7316</span><br><span class="line">7317</span><br><span class="line">7318</span><br><span class="line">7319</span><br><span class="line">7320</span><br><span class="line">7321</span><br><span class="line">7322</span><br><span class="line">7323</span><br><span class="line">7324</span><br><span class="line">7325</span><br><span class="line">7326</span><br><span class="line">7327</span><br><span class="line">7328</span><br><span class="line">7329</span><br><span class="line">7330</span><br><span class="line">7331</span><br><span class="line">7332</span><br><span class="line">7333</span><br><span class="line">7334</span><br><span class="line">7335</span><br><span class="line">7336</span><br><span class="line">7337</span><br><span class="line">7338</span><br><span class="line">7339</span><br><span class="line">7340</span><br><span class="line">7341</span><br><span class="line">7342</span><br><span class="line">7343</span><br><span class="line">7344</span><br><span class="line">7345</span><br><span class="line">7346</span><br><span class="line">7347</span><br><span class="line">7348</span><br><span class="line">7349</span><br><span class="line">7350</span><br><span class="line">7351</span><br><span class="line">7352</span><br><span class="line">7353</span><br><span class="line">7354</span><br><span class="line">7355</span><br><span class="line">7356</span><br><span class="line">7357</span><br><span class="line">7358</span><br><span class="line">7359</span><br><span class="line">7360</span><br><span class="line">7361</span><br><span class="line">7362</span><br><span class="line">7363</span><br><span class="line">7364</span><br><span class="line">7365</span><br><span class="line">7366</span><br><span class="line">7367</span><br><span class="line">7368</span><br><span class="line">7369</span><br><span class="line">7370</span><br><span class="line">7371</span><br><span class="line">7372</span><br><span class="line">7373</span><br><span class="line">7374</span><br><span class="line">7375</span><br><span class="line">7376</span><br><span class="line">7377</span><br><span class="line">7378</span><br><span class="line">7379</span><br><span class="line">7380</span><br><span class="line">7381</span><br><span class="line">7382</span><br><span class="line">7383</span><br><span class="line">7384</span><br><span class="line">7385</span><br><span class="line">7386</span><br><span class="line">7387</span><br><span class="line">7388</span><br><span class="line">7389</span><br><span class="line">7390</span><br><span class="line">7391</span><br><span class="line">7392</span><br><span class="line">7393</span><br><span class="line">7394</span><br><span class="line">7395</span><br><span class="line">7396</span><br><span class="line">7397</span><br><span class="line">7398</span><br><span class="line">7399</span><br><span class="line">7400</span><br><span class="line">7401</span><br><span class="line">7402</span><br><span class="line">7403</span><br><span class="line">7404</span><br><span class="line">7405</span><br><span class="line">7406</span><br><span class="line">7407</span><br><span class="line">7408</span><br><span class="line">7409</span><br><span class="line">7410</span><br><span class="line">7411</span><br><span class="line">7412</span><br><span class="line">7413</span><br><span class="line">7414</span><br><span class="line">7415</span><br><span class="line">7416</span><br><span class="line">7417</span><br><span class="line">7418</span><br><span class="line">7419</span><br><span class="line">7420</span><br><span class="line">7421</span><br><span class="line">7422</span><br><span class="line">7423</span><br><span class="line">7424</span><br><span class="line">7425</span><br><span class="line">7426</span><br><span class="line">7427</span><br><span class="line">7428</span><br><span class="line">7429</span><br><span class="line">7430</span><br><span class="line">7431</span><br><span class="line">7432</span><br><span class="line">7433</span><br><span class="line">7434</span><br><span class="line">7435</span><br><span class="line">7436</span><br><span class="line">7437</span><br><span class="line">7438</span><br><span class="line">7439</span><br><span class="line">7440</span><br><span class="line">7441</span><br><span class="line">7442</span><br><span class="line">7443</span><br><span class="line">7444</span><br><span class="line">7445</span><br><span class="line">7446</span><br><span class="line">7447</span><br><span class="line">7448</span><br><span class="line">7449</span><br><span class="line">7450</span><br><span class="line">7451</span><br><span class="line">7452</span><br><span class="line">7453</span><br><span class="line">7454</span><br><span class="line">7455</span><br><span class="line">7456</span><br><span class="line">7457</span><br><span class="line">7458</span><br><span class="line">7459</span><br><span class="line">7460</span><br><span class="line">7461</span><br><span class="line">7462</span><br><span class="line">7463</span><br><span class="line">7464</span><br><span class="line">7465</span><br><span class="line">7466</span><br><span class="line">7467</span><br><span class="line">7468</span><br><span class="line">7469</span><br><span class="line">7470</span><br><span class="line">7471</span><br><span class="line">7472</span><br><span class="line">7473</span><br><span class="line">7474</span><br><span class="line">7475</span><br><span class="line">7476</span><br><span class="line">7477</span><br><span class="line">7478</span><br><span class="line">7479</span><br><span class="line">7480</span><br><span class="line">7481</span><br><span class="line">7482</span><br><span class="line">7483</span><br><span class="line">7484</span><br><span class="line">7485</span><br><span class="line">7486</span><br><span class="line">7487</span><br><span class="line">7488</span><br><span class="line">7489</span><br><span class="line">7490</span><br><span class="line">7491</span><br><span class="line">7492</span><br><span class="line">7493</span><br><span class="line">7494</span><br><span class="line">7495</span><br><span class="line">7496</span><br><span class="line">7497</span><br><span class="line">7498</span><br><span class="line">7499</span><br><span class="line">7500</span><br><span class="line">7501</span><br><span class="line">7502</span><br><span class="line">7503</span><br><span class="line">7504</span><br><span class="line">7505</span><br><span class="line">7506</span><br><span class="line">7507</span><br><span class="line">7508</span><br><span class="line">7509</span><br><span class="line">7510</span><br><span class="line">7511</span><br><span class="line">7512</span><br><span class="line">7513</span><br><span class="line">7514</span><br><span class="line">7515</span><br><span class="line">7516</span><br><span class="line">7517</span><br><span class="line">7518</span><br><span class="line">7519</span><br><span class="line">7520</span><br><span class="line">7521</span><br><span class="line">7522</span><br><span class="line">7523</span><br><span class="line">7524</span><br><span class="line">7525</span><br><span class="line">7526</span><br><span class="line">7527</span><br><span class="line">7528</span><br><span class="line">7529</span><br><span class="line">7530</span><br><span class="line">7531</span><br><span class="line">7532</span><br><span class="line">7533</span><br><span class="line">7534</span><br><span class="line">7535</span><br><span class="line">7536</span><br><span class="line">7537</span><br><span class="line">7538</span><br><span class="line">7539</span><br><span class="line">7540</span><br><span class="line">7541</span><br><span class="line">7542</span><br><span class="line">7543</span><br><span class="line">7544</span><br><span class="line">7545</span><br><span class="line">7546</span><br><span class="line">7547</span><br><span class="line">7548</span><br><span class="line">7549</span><br><span class="line">7550</span><br><span class="line">7551</span><br><span class="line">7552</span><br><span class="line">7553</span><br><span class="line">7554</span><br><span class="line">7555</span><br><span class="line">7556</span><br><span class="line">7557</span><br><span class="line">7558</span><br><span class="line">7559</span><br><span class="line">7560</span><br><span class="line">7561</span><br><span class="line">7562</span><br><span class="line">7563</span><br><span class="line">7564</span><br><span class="line">7565</span><br><span class="line">7566</span><br><span class="line">7567</span><br><span class="line">7568</span><br><span class="line">7569</span><br><span class="line">7570</span><br><span class="line">7571</span><br><span class="line">7572</span><br><span class="line">7573</span><br><span class="line">7574</span><br><span class="line">7575</span><br><span class="line">7576</span><br><span class="line">7577</span><br><span class="line">7578</span><br><span class="line">7579</span><br><span class="line">7580</span><br><span class="line">7581</span><br><span class="line">7582</span><br><span class="line">7583</span><br><span class="line">7584</span><br><span class="line">7585</span><br><span class="line">7586</span><br><span class="line">7587</span><br><span class="line">7588</span><br><span class="line">7589</span><br><span class="line">7590</span><br><span class="line">7591</span><br><span class="line">7592</span><br><span class="line">7593</span><br><span class="line">7594</span><br><span class="line">7595</span><br><span class="line">7596</span><br><span class="line">7597</span><br><span class="line">7598</span><br><span class="line">7599</span><br><span class="line">7600</span><br><span class="line">7601</span><br><span class="line">7602</span><br><span class="line">7603</span><br><span class="line">7604</span><br><span class="line">7605</span><br><span class="line">7606</span><br><span class="line">7607</span><br><span class="line">7608</span><br><span class="line">7609</span><br><span class="line">7610</span><br><span class="line">7611</span><br><span class="line">7612</span><br><span class="line">7613</span><br><span class="line">7614</span><br><span class="line">7615</span><br><span class="line">7616</span><br><span class="line">7617</span><br><span class="line">7618</span><br><span class="line">7619</span><br><span class="line">7620</span><br><span class="line">7621</span><br><span class="line">7622</span><br><span class="line">7623</span><br><span class="line">7624</span><br><span class="line">7625</span><br><span class="line">7626</span><br><span class="line">7627</span><br><span class="line">7628</span><br><span class="line">7629</span><br><span class="line">7630</span><br><span class="line">7631</span><br><span class="line">7632</span><br><span class="line">7633</span><br><span class="line">7634</span><br><span class="line">7635</span><br><span class="line">7636</span><br><span class="line">7637</span><br><span class="line">7638</span><br><span class="line">7639</span><br><span class="line">7640</span><br><span class="line">7641</span><br><span class="line">7642</span><br><span class="line">7643</span><br><span class="line">7644</span><br><span class="line">7645</span><br><span class="line">7646</span><br><span class="line">7647</span><br><span class="line">7648</span><br><span class="line">7649</span><br><span class="line">7650</span><br><span class="line">7651</span><br><span class="line">7652</span><br><span class="line">7653</span><br><span class="line">7654</span><br><span class="line">7655</span><br><span class="line">7656</span><br><span class="line">7657</span><br><span class="line">7658</span><br><span class="line">7659</span><br><span class="line">7660</span><br><span class="line">7661</span><br><span class="line">7662</span><br><span class="line">7663</span><br><span class="line">7664</span><br><span class="line">7665</span><br><span class="line">7666</span><br><span class="line">7667</span><br><span class="line">7668</span><br><span class="line">7669</span><br><span class="line">7670</span><br><span class="line">7671</span><br><span class="line">7672</span><br><span class="line">7673</span><br><span class="line">7674</span><br><span class="line">7675</span><br><span class="line">7676</span><br><span class="line">7677</span><br><span class="line">7678</span><br><span class="line">7679</span><br><span class="line">7680</span><br><span class="line">7681</span><br><span class="line">7682</span><br><span class="line">7683</span><br><span class="line">7684</span><br><span class="line">7685</span><br><span class="line">7686</span><br><span class="line">7687</span><br><span class="line">7688</span><br><span class="line">7689</span><br><span class="line">7690</span><br><span class="line">7691</span><br><span class="line">7692</span><br><span class="line">7693</span><br><span class="line">7694</span><br><span class="line">7695</span><br><span class="line">7696</span><br><span class="line">7697</span><br><span class="line">7698</span><br><span class="line">7699</span><br><span class="line">7700</span><br><span class="line">7701</span><br><span class="line">7702</span><br><span class="line">7703</span><br><span class="line">7704</span><br><span class="line">7705</span><br><span class="line">7706</span><br><span class="line">7707</span><br><span class="line">7708</span><br><span class="line">7709</span><br><span class="line">7710</span><br><span class="line">7711</span><br><span class="line">7712</span><br><span class="line">7713</span><br><span class="line">7714</span><br><span class="line">7715</span><br><span class="line">7716</span><br><span class="line">7717</span><br><span class="line">7718</span><br><span class="line">7719</span><br><span class="line">7720</span><br><span class="line">7721</span><br><span class="line">7722</span><br><span class="line">7723</span><br><span class="line">7724</span><br><span class="line">7725</span><br><span class="line">7726</span><br><span class="line">7727</span><br><span class="line">7728</span><br><span class="line">7729</span><br><span class="line">7730</span><br><span class="line">7731</span><br><span class="line">7732</span><br><span class="line">7733</span><br><span class="line">7734</span><br><span class="line">7735</span><br><span class="line">7736</span><br><span class="line">7737</span><br><span class="line">7738</span><br><span class="line">7739</span><br><span class="line">7740</span><br><span class="line">7741</span><br><span class="line">7742</span><br><span class="line">7743</span><br><span class="line">7744</span><br><span class="line">7745</span><br><span class="line">7746</span><br><span class="line">7747</span><br><span class="line">7748</span><br><span class="line">7749</span><br><span class="line">7750</span><br><span class="line">7751</span><br><span class="line">7752</span><br><span class="line">7753</span><br><span class="line">7754</span><br><span class="line">7755</span><br><span class="line">7756</span><br><span class="line">7757</span><br><span class="line">7758</span><br><span class="line">7759</span><br><span class="line">7760</span><br><span class="line">7761</span><br><span class="line">7762</span><br><span class="line">7763</span><br><span class="line">7764</span><br><span class="line">7765</span><br><span class="line">7766</span><br><span class="line">7767</span><br><span class="line">7768</span><br><span class="line">7769</span><br><span class="line">7770</span><br><span class="line">7771</span><br><span class="line">7772</span><br><span class="line">7773</span><br><span class="line">7774</span><br><span class="line">7775</span><br><span class="line">7776</span><br><span class="line">7777</span><br><span class="line">7778</span><br><span class="line">7779</span><br><span class="line">7780</span><br><span class="line">7781</span><br><span class="line">7782</span><br><span class="line">7783</span><br><span class="line">7784</span><br><span class="line">7785</span><br><span class="line">7786</span><br><span class="line">7787</span><br><span class="line">7788</span><br><span class="line">7789</span><br><span class="line">7790</span><br><span class="line">7791</span><br><span class="line">7792</span><br><span class="line">7793</span><br><span class="line">7794</span><br><span class="line">7795</span><br><span class="line">7796</span><br><span class="line">7797</span><br><span class="line">7798</span><br><span class="line">7799</span><br><span class="line">7800</span><br><span class="line">7801</span><br><span class="line">7802</span><br><span class="line">7803</span><br><span class="line">7804</span><br><span class="line">7805</span><br><span class="line">7806</span><br><span class="line">7807</span><br><span class="line">7808</span><br><span class="line">7809</span><br><span class="line">7810</span><br><span class="line">7811</span><br><span class="line">7812</span><br><span class="line">7813</span><br><span class="line">7814</span><br><span class="line">7815</span><br><span class="line">7816</span><br><span class="line">7817</span><br><span class="line">7818</span><br><span class="line">7819</span><br><span class="line">7820</span><br><span class="line">7821</span><br><span class="line">7822</span><br><span class="line">7823</span><br><span class="line">7824</span><br><span class="line">7825</span><br><span class="line">7826</span><br><span class="line">7827</span><br><span class="line">7828</span><br><span class="line">7829</span><br><span class="line">7830</span><br><span class="line">7831</span><br><span class="line">7832</span><br><span class="line">7833</span><br><span class="line">7834</span><br><span class="line">7835</span><br><span class="line">7836</span><br><span class="line">7837</span><br><span class="line">7838</span><br><span class="line">7839</span><br><span class="line">7840</span><br><span class="line">7841</span><br><span class="line">7842</span><br><span class="line">7843</span><br><span class="line">7844</span><br><span class="line">7845</span><br><span class="line">7846</span><br><span class="line">7847</span><br><span class="line">7848</span><br><span class="line">7849</span><br><span class="line">7850</span><br><span class="line">7851</span><br><span class="line">7852</span><br><span class="line">7853</span><br><span class="line">7854</span><br><span class="line">7855</span><br><span class="line">7856</span><br><span class="line">7857</span><br><span class="line">7858</span><br><span class="line">7859</span><br><span class="line">7860</span><br><span class="line">7861</span><br><span class="line">7862</span><br><span class="line">7863</span><br><span class="line">7864</span><br><span class="line">7865</span><br><span class="line">7866</span><br><span class="line">7867</span><br><span class="line">7868</span><br><span class="line">7869</span><br><span class="line">7870</span><br><span class="line">7871</span><br><span class="line">7872</span><br><span class="line">7873</span><br><span class="line">7874</span><br><span class="line">7875</span><br><span class="line">7876</span><br><span class="line">7877</span><br><span class="line">7878</span><br><span class="line">7879</span><br><span class="line">7880</span><br><span class="line">7881</span><br><span class="line">7882</span><br><span class="line">7883</span><br><span class="line">7884</span><br><span class="line">7885</span><br><span class="line">7886</span><br><span class="line">7887</span><br><span class="line">7888</span><br><span class="line">7889</span><br><span class="line">7890</span><br><span class="line">7891</span><br><span class="line">7892</span><br><span class="line">7893</span><br><span class="line">7894</span><br><span class="line">7895</span><br><span class="line">7896</span><br><span class="line">7897</span><br><span class="line">7898</span><br><span class="line">7899</span><br><span class="line">7900</span><br><span class="line">7901</span><br><span class="line">7902</span><br><span class="line">7903</span><br><span class="line">7904</span><br><span class="line">7905</span><br><span class="line">7906</span><br><span class="line">7907</span><br><span class="line">7908</span><br><span class="line">7909</span><br><span class="line">7910</span><br><span class="line">7911</span><br><span class="line">7912</span><br><span class="line">7913</span><br><span class="line">7914</span><br><span class="line">7915</span><br><span class="line">7916</span><br><span class="line">7917</span><br><span class="line">7918</span><br><span class="line">7919</span><br><span class="line">7920</span><br><span class="line">7921</span><br><span class="line">7922</span><br><span class="line">7923</span><br><span class="line">7924</span><br><span class="line">7925</span><br><span class="line">7926</span><br><span class="line">7927</span><br><span class="line">7928</span><br><span class="line">7929</span><br><span class="line">7930</span><br><span class="line">7931</span><br><span class="line">7932</span><br><span class="line">7933</span><br><span class="line">7934</span><br><span class="line">7935</span><br><span class="line">7936</span><br><span class="line">7937</span><br><span class="line">7938</span><br><span class="line">7939</span><br><span class="line">7940</span><br><span class="line">7941</span><br><span class="line">7942</span><br><span class="line">7943</span><br><span class="line">7944</span><br><span class="line">7945</span><br><span class="line">7946</span><br><span class="line">7947</span><br><span class="line">7948</span><br><span class="line">7949</span><br><span class="line">7950</span><br><span class="line">7951</span><br><span class="line">7952</span><br><span class="line">7953</span><br><span class="line">7954</span><br><span class="line">7955</span><br><span class="line">7956</span><br><span class="line">7957</span><br><span class="line">7958</span><br><span class="line">7959</span><br><span class="line">7960</span><br><span class="line">7961</span><br><span class="line">7962</span><br><span class="line">7963</span><br><span class="line">7964</span><br><span class="line">7965</span><br><span class="line">7966</span><br><span class="line">7967</span><br><span class="line">7968</span><br><span class="line">7969</span><br><span class="line">7970</span><br><span class="line">7971</span><br><span class="line">7972</span><br><span class="line">7973</span><br><span class="line">7974</span><br><span class="line">7975</span><br><span class="line">7976</span><br><span class="line">7977</span><br><span class="line">7978</span><br><span class="line">7979</span><br><span class="line">7980</span><br><span class="line">7981</span><br><span class="line">7982</span><br><span class="line">7983</span><br><span class="line">7984</span><br><span class="line">7985</span><br><span class="line">7986</span><br><span class="line">7987</span><br><span class="line">7988</span><br><span class="line">7989</span><br><span class="line">7990</span><br><span class="line">7991</span><br><span class="line">7992</span><br><span class="line">7993</span><br><span class="line">7994</span><br><span class="line">7995</span><br><span class="line">7996</span><br><span class="line">7997</span><br><span class="line">7998</span><br><span class="line">7999</span><br><span class="line">8000</span><br><span class="line">8001</span><br><span class="line">8002</span><br><span class="line">8003</span><br><span class="line">8004</span><br><span class="line">8005</span><br><span class="line">8006</span><br><span class="line">8007</span><br><span class="line">8008</span><br><span class="line">8009</span><br><span class="line">8010</span><br><span class="line">8011</span><br><span class="line">8012</span><br><span class="line">8013</span><br><span class="line">8014</span><br><span class="line">8015</span><br><span class="line">8016</span><br><span class="line">8017</span><br><span class="line">8018</span><br><span class="line">8019</span><br><span class="line">8020</span><br><span class="line">8021</span><br><span class="line">8022</span><br><span class="line">8023</span><br><span class="line">8024</span><br><span class="line">8025</span><br><span class="line">8026</span><br><span class="line">8027</span><br><span class="line">8028</span><br><span class="line">8029</span><br><span class="line">8030</span><br><span class="line">8031</span><br><span class="line">8032</span><br><span class="line">8033</span><br><span class="line">8034</span><br><span class="line">8035</span><br><span class="line">8036</span><br><span class="line">8037</span><br><span class="line">8038</span><br><span class="line">8039</span><br><span class="line">8040</span><br><span class="line">8041</span><br><span class="line">8042</span><br><span class="line">8043</span><br><span class="line">8044</span><br><span class="line">8045</span><br><span class="line">8046</span><br><span class="line">8047</span><br><span class="line">8048</span><br><span class="line">8049</span><br><span class="line">8050</span><br><span class="line">8051</span><br><span class="line">8052</span><br><span class="line">8053</span><br><span class="line">8054</span><br><span class="line">8055</span><br><span class="line">8056</span><br><span class="line">8057</span><br><span class="line">8058</span><br><span class="line">8059</span><br><span class="line">8060</span><br><span class="line">8061</span><br><span class="line">8062</span><br><span class="line">8063</span><br><span class="line">8064</span><br><span class="line">8065</span><br><span class="line">8066</span><br><span class="line">8067</span><br><span class="line">8068</span><br><span class="line">8069</span><br><span class="line">8070</span><br><span class="line">8071</span><br><span class="line">8072</span><br><span class="line">8073</span><br><span class="line">8074</span><br><span class="line">8075</span><br><span class="line">8076</span><br><span class="line">8077</span><br><span class="line">8078</span><br><span class="line">8079</span><br><span class="line">8080</span><br><span class="line">8081</span><br><span class="line">8082</span><br><span class="line">8083</span><br><span class="line">8084</span><br><span class="line">8085</span><br><span class="line">8086</span><br><span class="line">8087</span><br><span class="line">8088</span><br><span class="line">8089</span><br><span class="line">8090</span><br><span class="line">8091</span><br><span class="line">8092</span><br><span class="line">8093</span><br><span class="line">8094</span><br><span class="line">8095</span><br><span class="line">8096</span><br><span class="line">8097</span><br><span class="line">8098</span><br><span class="line">8099</span><br><span class="line">8100</span><br><span class="line">8101</span><br><span class="line">8102</span><br><span class="line">8103</span><br><span class="line">8104</span><br><span class="line">8105</span><br><span class="line">8106</span><br><span class="line">8107</span><br><span class="line">8108</span><br><span class="line">8109</span><br><span class="line">8110</span><br><span class="line">8111</span><br><span class="line">8112</span><br><span class="line">8113</span><br><span class="line">8114</span><br><span class="line">8115</span><br><span class="line">8116</span><br><span class="line">8117</span><br><span class="line">8118</span><br><span class="line">8119</span><br><span class="line">8120</span><br><span class="line">8121</span><br><span class="line">8122</span><br><span class="line">8123</span><br><span class="line">8124</span><br><span class="line">8125</span><br><span class="line">8126</span><br><span class="line">8127</span><br><span class="line">8128</span><br><span class="line">8129</span><br><span class="line">8130</span><br><span class="line">8131</span><br><span class="line">8132</span><br><span class="line">8133</span><br><span class="line">8134</span><br><span class="line">8135</span><br><span class="line">8136</span><br><span class="line">8137</span><br><span class="line">8138</span><br><span class="line">8139</span><br><span class="line">8140</span><br><span class="line">8141</span><br><span class="line">8142</span><br><span class="line">8143</span><br><span class="line">8144</span><br><span class="line">8145</span><br><span class="line">8146</span><br><span class="line">8147</span><br><span class="line">8148</span><br><span class="line">8149</span><br><span class="line">8150</span><br><span class="line">8151</span><br><span class="line">8152</span><br><span class="line">8153</span><br><span class="line">8154</span><br><span class="line">8155</span><br><span class="line">8156</span><br><span class="line">8157</span><br><span class="line">8158</span><br><span class="line">8159</span><br><span class="line">8160</span><br><span class="line">8161</span><br><span class="line">8162</span><br><span class="line">8163</span><br><span class="line">8164</span><br><span class="line">8165</span><br><span class="line">8166</span><br><span class="line">8167</span><br><span class="line">8168</span><br><span class="line">8169</span><br><span class="line">8170</span><br><span class="line">8171</span><br><span class="line">8172</span><br><span class="line">8173</span><br><span class="line">8174</span><br><span class="line">8175</span><br><span class="line">8176</span><br><span class="line">8177</span><br><span class="line">8178</span><br><span class="line">8179</span><br><span class="line">8180</span><br><span class="line">8181</span><br><span class="line">8182</span><br><span class="line">8183</span><br><span class="line">8184</span><br><span class="line">8185</span><br><span class="line">8186</span><br><span class="line">8187</span><br><span class="line">8188</span><br><span class="line">8189</span><br><span class="line">8190</span><br><span class="line">8191</span><br><span class="line">8192</span><br><span class="line">8193</span><br><span class="line">8194</span><br><span class="line">8195</span><br><span class="line">8196</span><br><span class="line">8197</span><br><span class="line">8198</span><br><span class="line">8199</span><br><span class="line">8200</span><br><span class="line">8201</span><br><span class="line">8202</span><br><span class="line">8203</span><br><span class="line">8204</span><br><span class="line">8205</span><br><span class="line">8206</span><br><span class="line">8207</span><br><span class="line">8208</span><br><span class="line">8209</span><br><span class="line">8210</span><br><span class="line">8211</span><br><span class="line">8212</span><br><span class="line">8213</span><br><span class="line">8214</span><br><span class="line">8215</span><br><span class="line">8216</span><br><span class="line">8217</span><br><span class="line">8218</span><br><span class="line">8219</span><br><span class="line">8220</span><br><span class="line">8221</span><br><span class="line">8222</span><br><span class="line">8223</span><br><span class="line">8224</span><br><span class="line">8225</span><br><span class="line">8226</span><br><span class="line">8227</span><br><span class="line">8228</span><br><span class="line">8229</span><br><span class="line">8230</span><br><span class="line">8231</span><br><span class="line">8232</span><br><span class="line">8233</span><br><span class="line">8234</span><br><span class="line">8235</span><br><span class="line">8236</span><br><span class="line">8237</span><br><span class="line">8238</span><br><span class="line">8239</span><br><span class="line">8240</span><br><span class="line">8241</span><br><span class="line">8242</span><br><span class="line">8243</span><br><span class="line">8244</span><br><span class="line">8245</span><br><span class="line">8246</span><br><span class="line">8247</span><br><span class="line">8248</span><br><span class="line">8249</span><br><span class="line">8250</span><br><span class="line">8251</span><br><span class="line">8252</span><br><span class="line">8253</span><br><span class="line">8254</span><br><span class="line">8255</span><br><span class="line">8256</span><br><span class="line">8257</span><br><span class="line">8258</span><br><span class="line">8259</span><br><span class="line">8260</span><br><span class="line">8261</span><br><span class="line">8262</span><br><span class="line">8263</span><br><span class="line">8264</span><br><span class="line">8265</span><br><span class="line">8266</span><br><span class="line">8267</span><br><span class="line">8268</span><br><span class="line">8269</span><br><span class="line">8270</span><br><span class="line">8271</span><br><span class="line">8272</span><br><span class="line">8273</span><br><span class="line">8274</span><br><span class="line">8275</span><br><span class="line">8276</span><br><span class="line">8277</span><br><span class="line">8278</span><br><span class="line">8279</span><br><span class="line">8280</span><br><span class="line">8281</span><br><span class="line">8282</span><br><span class="line">8283</span><br><span class="line">8284</span><br><span class="line">8285</span><br><span class="line">8286</span><br><span class="line">8287</span><br><span class="line">8288</span><br><span class="line">8289</span><br><span class="line">8290</span><br><span class="line">8291</span><br><span class="line">8292</span><br><span class="line">8293</span><br><span class="line">8294</span><br><span class="line">8295</span><br><span class="line">8296</span><br><span class="line">8297</span><br><span class="line">8298</span><br><span class="line">8299</span><br><span class="line">8300</span><br><span class="line">8301</span><br><span class="line">8302</span><br><span class="line">8303</span><br><span class="line">8304</span><br><span class="line">8305</span><br><span class="line">8306</span><br><span class="line">8307</span><br><span class="line">8308</span><br><span class="line">8309</span><br><span class="line">8310</span><br><span class="line">8311</span><br><span class="line">8312</span><br><span class="line">8313</span><br><span class="line">8314</span><br><span class="line">8315</span><br><span class="line">8316</span><br><span class="line">8317</span><br><span class="line">8318</span><br><span class="line">8319</span><br><span class="line">8320</span><br><span class="line">8321</span><br><span class="line">8322</span><br><span class="line">8323</span><br><span class="line">8324</span><br><span class="line">8325</span><br><span class="line">8326</span><br><span class="line">8327</span><br><span class="line">8328</span><br><span class="line">8329</span><br><span class="line">8330</span><br><span class="line">8331</span><br><span class="line">8332</span><br><span class="line">8333</span><br><span class="line">8334</span><br><span class="line">8335</span><br><span class="line">8336</span><br><span class="line">8337</span><br><span class="line">8338</span><br><span class="line">8339</span><br><span class="line">8340</span><br><span class="line">8341</span><br><span class="line">8342</span><br><span class="line">8343</span><br><span class="line">8344</span><br><span class="line">8345</span><br><span class="line">8346</span><br><span class="line">8347</span><br><span class="line">8348</span><br><span class="line">8349</span><br><span class="line">8350</span><br><span class="line">8351</span><br><span class="line">8352</span><br><span class="line">8353</span><br><span class="line">8354</span><br><span class="line">8355</span><br><span class="line">8356</span><br><span class="line">8357</span><br><span class="line">8358</span><br><span class="line">8359</span><br><span class="line">8360</span><br><span class="line">8361</span><br><span class="line">8362</span><br><span class="line">8363</span><br><span class="line">8364</span><br><span class="line">8365</span><br><span class="line">8366</span><br><span class="line">8367</span><br><span class="line">8368</span><br><span class="line">8369</span><br><span class="line">8370</span><br><span class="line">8371</span><br><span class="line">8372</span><br><span class="line">8373</span><br><span class="line">8374</span><br><span class="line">8375</span><br><span class="line">8376</span><br><span class="line">8377</span><br><span class="line">8378</span><br><span class="line">8379</span><br><span class="line">8380</span><br><span class="line">8381</span><br><span class="line">8382</span><br><span class="line">8383</span><br><span class="line">8384</span><br><span class="line">8385</span><br><span class="line">8386</span><br><span class="line">8387</span><br><span class="line">8388</span><br><span class="line">8389</span><br><span class="line">8390</span><br><span class="line">8391</span><br><span class="line">8392</span><br><span class="line">8393</span><br><span class="line">8394</span><br><span class="line">8395</span><br><span class="line">8396</span><br><span class="line">8397</span><br><span class="line">8398</span><br><span class="line">8399</span><br><span class="line">8400</span><br><span class="line">8401</span><br><span class="line">8402</span><br><span class="line">8403</span><br><span class="line">8404</span><br><span class="line">8405</span><br><span class="line">8406</span><br><span class="line">8407</span><br><span class="line">8408</span><br><span class="line">8409</span><br><span class="line">8410</span><br><span class="line">8411</span><br><span class="line">8412</span><br><span class="line">8413</span><br><span class="line">8414</span><br><span class="line">8415</span><br><span class="line">8416</span><br><span class="line">8417</span><br><span class="line">8418</span><br><span class="line">8419</span><br><span class="line">8420</span><br><span class="line">8421</span><br><span class="line">8422</span><br><span class="line">8423</span><br><span class="line">8424</span><br><span class="line">8425</span><br><span class="line">8426</span><br><span class="line">8427</span><br><span class="line">8428</span><br><span class="line">8429</span><br><span class="line">8430</span><br><span class="line">8431</span><br><span class="line">8432</span><br><span class="line">8433</span><br><span class="line">8434</span><br><span class="line">8435</span><br><span class="line">8436</span><br><span class="line">8437</span><br><span class="line">8438</span><br><span class="line">8439</span><br><span class="line">8440</span><br><span class="line">8441</span><br><span class="line">8442</span><br><span class="line">8443</span><br><span class="line">8444</span><br><span class="line">8445</span><br><span class="line">8446</span><br><span class="line">8447</span><br><span class="line">8448</span><br><span class="line">8449</span><br><span class="line">8450</span><br><span class="line">8451</span><br><span class="line">8452</span><br><span class="line">8453</span><br><span class="line">8454</span><br><span class="line">8455</span><br><span class="line">8456</span><br><span class="line">8457</span><br><span class="line">8458</span><br><span class="line">8459</span><br><span class="line">8460</span><br><span class="line">8461</span><br><span class="line">8462</span><br><span class="line">8463</span><br><span class="line">8464</span><br><span class="line">8465</span><br><span class="line">8466</span><br><span class="line">8467</span><br><span class="line">8468</span><br><span class="line">8469</span><br><span class="line">8470</span><br><span class="line">8471</span><br><span class="line">8472</span><br><span class="line">8473</span><br><span class="line">8474</span><br><span class="line">8475</span><br><span class="line">8476</span><br><span class="line">8477</span><br><span class="line">8478</span><br><span class="line">8479</span><br><span class="line">8480</span><br><span class="line">8481</span><br><span class="line">8482</span><br><span class="line">8483</span><br><span class="line">8484</span><br><span class="line">8485</span><br><span class="line">8486</span><br><span class="line">8487</span><br><span class="line">8488</span><br><span class="line">8489</span><br><span class="line">8490</span><br><span class="line">8491</span><br><span class="line">8492</span><br><span class="line">8493</span><br><span class="line">8494</span><br><span class="line">8495</span><br><span class="line">8496</span><br><span class="line">8497</span><br><span class="line">8498</span><br><span class="line">8499</span><br><span class="line">8500</span><br><span class="line">8501</span><br><span class="line">8502</span><br><span class="line">8503</span><br><span class="line">8504</span><br><span class="line">8505</span><br><span class="line">8506</span><br><span class="line">8507</span><br><span class="line">8508</span><br><span class="line">8509</span><br><span class="line">8510</span><br><span class="line">8511</span><br><span class="line">8512</span><br><span class="line">8513</span><br><span class="line">8514</span><br><span class="line">8515</span><br><span class="line">8516</span><br><span class="line">8517</span><br><span class="line">8518</span><br><span class="line">8519</span><br><span class="line">8520</span><br><span class="line">8521</span><br><span class="line">8522</span><br><span class="line">8523</span><br><span class="line">8524</span><br><span class="line">8525</span><br><span class="line">8526</span><br><span class="line">8527</span><br><span class="line">8528</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line"> * Copyright (c) 2005-2009 Apple Inc.  All Rights Reserved.</span><br><span class="line"> * </span><br><span class="line"> * @APPLE_LICENSE_HEADER_START@</span><br><span class="line"> * </span><br><span class="line"> * This file contains Original Code and/or Modifications of Original Code</span><br><span class="line"> * as defined in and that are subject to the Apple Public Source License</span><br><span class="line"> * Version 2.0 (the &#x27;License&#x27;). You may not use this file except in</span><br><span class="line"> * compliance with the License. Please obtain a copy of the License at</span><br><span class="line"> * http://www.opensource.apple.com/apsl/ and read it before using this</span><br><span class="line"> * file.</span><br><span class="line"> * </span><br><span class="line"> * The Original Code and all software distributed under the License are</span><br><span class="line"> * distributed on an &#x27;AS IS&#x27; basis, WITHOUT WARRANTY OF ANY KIND, EITHER</span><br><span class="line"> * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,</span><br><span class="line"> * INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,</span><br><span class="line"> * FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.</span><br><span class="line"> * Please see the License for the specific language governing rights and</span><br><span class="line"> * limitations under the License.</span><br><span class="line"> * </span><br><span class="line"> * @APPLE_LICENSE_HEADER_END@</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* objc-runtime-new.m</span><br><span class="line">* Support for new-ABI classes and images.</span><br><span class="line">**********************************************************************/</span><br><span class="line"></span><br><span class="line">#if __OBJC2__</span><br><span class="line"></span><br><span class="line">#include &quot;DenseMapExtras.h&quot;</span><br><span class="line">#include &quot;objc-private.h&quot;</span><br><span class="line">#include &quot;objc-runtime-new.h&quot;</span><br><span class="line">#include &quot;objc-file.h&quot;</span><br><span class="line">#include &quot;objc-zalloc.h&quot;</span><br><span class="line">#include &lt;Block.h&gt;</span><br><span class="line">#include &lt;objc/message.h&gt;</span><br><span class="line">#include &lt;mach/shared_region.h&gt;</span><br><span class="line"></span><br><span class="line">#define newprotocol(p) ((protocol_t *)p)</span><br><span class="line"></span><br><span class="line">static void disableTaggedPointers();</span><br><span class="line">static void detach_class(Class cls, bool isMeta);</span><br><span class="line">static void free_class(Class cls);</span><br><span class="line">static IMP addMethod(Class cls, SEL name, IMP imp, const char *types, bool replace);</span><br><span class="line">static void adjustCustomFlagsForMethodChange(Class cls, method_t *meth);</span><br><span class="line">static method_t *search_method_list(const method_list_t *mlist, SEL sel);</span><br><span class="line">template&lt;typename T&gt; static bool method_lists_contains_any(T *mlists, T *end,</span><br><span class="line">        SEL sels[], size_t selcount);</span><br><span class="line">static void flushCaches(Class cls, const char *func, bool (^predicate)(Class c));</span><br><span class="line">static void initializeTaggedPointerObfuscator(void);</span><br><span class="line">#if SUPPORT_FIXUP</span><br><span class="line">static void fixupMessageRef(message_ref_t *msg);</span><br><span class="line">#endif</span><br><span class="line">static Class realizeClassMaybeSwiftAndUnlock(Class cls, mutex_t&amp; lock);</span><br><span class="line">static Class readClass(Class cls, bool headerIsBundle, bool headerIsPreoptimized);</span><br><span class="line"></span><br><span class="line">struct locstamped_category_t &#123;</span><br><span class="line">    category_t *cat;</span><br><span class="line">    struct header_info *hi;</span><br><span class="line">&#125;;</span><br><span class="line">enum &#123;</span><br><span class="line">    ATTACH_CLASS               = 1 &lt;&lt; 0,</span><br><span class="line">    ATTACH_METACLASS           = 1 &lt;&lt; 1,</span><br><span class="line">    ATTACH_CLASS_AND_METACLASS = 1 &lt;&lt; 2,</span><br><span class="line">    ATTACH_EXISTING            = 1 &lt;&lt; 3,</span><br><span class="line">&#125;;</span><br><span class="line">static void attachCategories(Class cls, const struct locstamped_category_t *cats_list, uint32_t cats_count, int flags);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* Lock management</span><br><span class="line">**********************************************************************/</span><br><span class="line">mutex_t runtimeLock;</span><br><span class="line">mutex_t selLock;</span><br><span class="line">#if CONFIG_USE_CACHE_LOCK</span><br><span class="line">mutex_t cacheUpdateLock;</span><br><span class="line">#endif</span><br><span class="line">recursive_mutex_t loadMethodLock;</span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* Class structure decoding</span><br><span class="line">**********************************************************************/</span><br><span class="line"></span><br><span class="line">const uintptr_t objc_debug_class_rw_data_mask = FAST_DATA_MASK;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* Non-pointer isa decoding</span><br><span class="line">**********************************************************************/</span><br><span class="line">#if SUPPORT_INDEXED_ISA</span><br><span class="line"></span><br><span class="line">// Indexed non-pointer isa.</span><br><span class="line"></span><br><span class="line">// These are used to mask the ISA and see if its got an index or not.</span><br><span class="line">const uintptr_t objc_debug_indexed_isa_magic_mask  = ISA_INDEX_MAGIC_MASK;</span><br><span class="line">const uintptr_t objc_debug_indexed_isa_magic_value = ISA_INDEX_MAGIC_VALUE;</span><br><span class="line"></span><br><span class="line">// die if masks overlap</span><br><span class="line">STATIC_ASSERT((ISA_INDEX_MASK &amp; ISA_INDEX_MAGIC_MASK) == 0);</span><br><span class="line"></span><br><span class="line">// die if magic is wrong</span><br><span class="line">STATIC_ASSERT((~ISA_INDEX_MAGIC_MASK &amp; ISA_INDEX_MAGIC_VALUE) == 0);</span><br><span class="line"></span><br><span class="line">// Then these are used to extract the index from the ISA.</span><br><span class="line">const uintptr_t objc_debug_indexed_isa_index_mask  = ISA_INDEX_MASK;</span><br><span class="line">const uintptr_t objc_debug_indexed_isa_index_shift  = ISA_INDEX_SHIFT;</span><br><span class="line"></span><br><span class="line">asm(&quot;\n .globl _objc_absolute_indexed_isa_magic_mask&quot;                   \</span><br><span class="line">    &quot;\n _objc_absolute_indexed_isa_magic_mask = &quot; STRINGIFY2(ISA_INDEX_MAGIC_MASK));</span><br><span class="line">asm(&quot;\n .globl _objc_absolute_indexed_isa_magic_value&quot; \</span><br><span class="line">    &quot;\n _objc_absolute_indexed_isa_magic_value = &quot; STRINGIFY2(ISA_INDEX_MAGIC_VALUE));</span><br><span class="line">asm(&quot;\n .globl _objc_absolute_indexed_isa_index_mask&quot;                   \</span><br><span class="line">    &quot;\n _objc_absolute_indexed_isa_index_mask = &quot; STRINGIFY2(ISA_INDEX_MASK));</span><br><span class="line">asm(&quot;\n .globl _objc_absolute_indexed_isa_index_shift&quot; \</span><br><span class="line">    &quot;\n _objc_absolute_indexed_isa_index_shift = &quot; STRINGIFY2(ISA_INDEX_SHIFT));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// And then we can use that index to get the class from this array.  Note</span><br><span class="line">// the size is provided so that clients can ensure the index they get is in</span><br><span class="line">// bounds and not read off the end of the array.</span><br><span class="line">// Defined in the objc-msg-*.s files</span><br><span class="line">// const Class objc_indexed_classes[]</span><br><span class="line"></span><br><span class="line">// When we don&#x27;t have enough bits to store a class*, we can instead store an</span><br><span class="line">// index in to this array.  Classes are added here when they are realized.</span><br><span class="line">// Note, an index of 0 is illegal.</span><br><span class="line">uintptr_t objc_indexed_classes_count = 0;</span><br><span class="line"></span><br><span class="line">// SUPPORT_INDEXED_ISA</span><br><span class="line">#else</span><br><span class="line">// not SUPPORT_INDEXED_ISA</span><br><span class="line"></span><br><span class="line">// These variables exist but are all set to 0 so that they are ignored.</span><br><span class="line">const uintptr_t objc_debug_indexed_isa_magic_mask  = 0;</span><br><span class="line">const uintptr_t objc_debug_indexed_isa_magic_value = 0;</span><br><span class="line">const uintptr_t objc_debug_indexed_isa_index_mask  = 0;</span><br><span class="line">const uintptr_t objc_debug_indexed_isa_index_shift = 0;</span><br><span class="line">Class objc_indexed_classes[1] = &#123; nil &#125;;</span><br><span class="line">uintptr_t objc_indexed_classes_count = 0;</span><br><span class="line"></span><br><span class="line">// not SUPPORT_INDEXED_ISA</span><br><span class="line">#endif</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#if SUPPORT_PACKED_ISA</span><br><span class="line"></span><br><span class="line">// Packed non-pointer isa.</span><br><span class="line"></span><br><span class="line">asm(&quot;\n .globl _objc_absolute_packed_isa_class_mask&quot; \</span><br><span class="line">    &quot;\n _objc_absolute_packed_isa_class_mask = &quot; STRINGIFY2(ISA_MASK));</span><br><span class="line"></span><br><span class="line">// a better definition is</span><br><span class="line">//     (uintptr_t)ptrauth_strip((void *)ISA_MASK, ISA_SIGNING_KEY)</span><br><span class="line">// however we know that PAC uses bits outside of MACH_VM_MAX_ADDRESS</span><br><span class="line">// so approximate the definition here to be constant</span><br><span class="line">template &lt;typename T&gt;</span><br><span class="line">static constexpr T coveringMask(T n) &#123;</span><br><span class="line">    for (T mask = 0; mask != ~T&#123;0&#125;; mask = (mask &lt;&lt; 1) | 1) &#123;</span><br><span class="line">        if ((n &amp; mask) == n) return mask;</span><br><span class="line">    &#125;</span><br><span class="line">    return ~T&#123;0&#125;;</span><br><span class="line">&#125;</span><br><span class="line">const uintptr_t objc_debug_isa_class_mask  = ISA_MASK &amp; coveringMask(MACH_VM_MAX_ADDRESS - 1);</span><br><span class="line"></span><br><span class="line">const uintptr_t objc_debug_isa_magic_mask  = ISA_MAGIC_MASK;</span><br><span class="line">const uintptr_t objc_debug_isa_magic_value = ISA_MAGIC_VALUE;</span><br><span class="line"></span><br><span class="line">// die if masks overlap</span><br><span class="line">STATIC_ASSERT((ISA_MASK &amp; ISA_MAGIC_MASK) == 0);</span><br><span class="line"></span><br><span class="line">// die if magic is wrong</span><br><span class="line">STATIC_ASSERT((~ISA_MAGIC_MASK &amp; ISA_MAGIC_VALUE) == 0);</span><br><span class="line"></span><br><span class="line">// die if virtual address space bound goes up</span><br><span class="line">STATIC_ASSERT((~ISA_MASK &amp; MACH_VM_MAX_ADDRESS) == 0  ||  </span><br><span class="line">              ISA_MASK + sizeof(void*) == MACH_VM_MAX_ADDRESS);</span><br><span class="line"></span><br><span class="line">// SUPPORT_PACKED_ISA</span><br><span class="line">#else</span><br><span class="line">// not SUPPORT_PACKED_ISA</span><br><span class="line"></span><br><span class="line">// These variables exist but enforce pointer alignment only.</span><br><span class="line">const uintptr_t objc_debug_isa_class_mask  = (~WORD_MASK);</span><br><span class="line">const uintptr_t objc_debug_isa_magic_mask  = WORD_MASK;</span><br><span class="line">const uintptr_t objc_debug_isa_magic_value = 0;</span><br><span class="line"></span><br><span class="line">// not SUPPORT_PACKED_ISA</span><br><span class="line">#endif</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* Swift marker bits</span><br><span class="line">**********************************************************************/</span><br><span class="line">const uintptr_t objc_debug_swift_stable_abi_bit = FAST_IS_SWIFT_STABLE;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* allocatedClasses</span><br><span class="line">* A table of all classes (and metaclasses) which have been allocated</span><br><span class="line">* with objc_allocateClassPair.</span><br><span class="line">**********************************************************************/</span><br><span class="line">namespace objc &#123;</span><br><span class="line">static ExplicitInitDenseSet&lt;Class&gt; allocatedClasses;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* _firstRealizedClass</span><br><span class="line">* The root of all realized classes</span><br><span class="line">**********************************************************************/</span><br><span class="line">static Class _firstRealizedClass = nil;</span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* didInitialAttachCategories</span><br><span class="line">* Whether the initial attachment of categories present at startup has</span><br><span class="line">* been done.</span><br><span class="line">**********************************************************************/</span><br><span class="line">static bool didInitialAttachCategories = false;</span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* didCallDyldNotifyRegister</span><br><span class="line">* Whether the call to _dyld_objc_notify_register has completed.</span><br><span class="line">**********************************************************************/</span><br><span class="line">bool didCallDyldNotifyRegister = false;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* smallMethodIMPMap</span><br><span class="line">* The map from small method pointers to replacement IMPs.</span><br><span class="line">*</span><br><span class="line">* Locking: runtimeLock must be held when accessing this map.</span><br><span class="line">**********************************************************************/</span><br><span class="line">namespace objc &#123;</span><br><span class="line">    static objc::LazyInitDenseMap&lt;const method_t *, IMP&gt; smallMethodIMPMap;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">static IMP method_t_remappedImp_nolock(const method_t *m) &#123;</span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line">    auto *map = objc::smallMethodIMPMap.get(false);</span><br><span class="line">    if (!map)</span><br><span class="line">        return nullptr;</span><br><span class="line">    auto iter = map-&gt;find(m);</span><br><span class="line">    if (iter == map-&gt;end())</span><br><span class="line">        return nullptr;</span><br><span class="line">    return iter-&gt;second;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">IMP method_t::remappedImp(bool needsLock) const &#123;</span><br><span class="line">    ASSERT(isSmall());</span><br><span class="line">    if (needsLock) &#123;</span><br><span class="line">        mutex_locker_t guard(runtimeLock);</span><br><span class="line">        return method_t_remappedImp_nolock(this);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        return method_t_remappedImp_nolock(this);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void method_t::remapImp(IMP imp) &#123;</span><br><span class="line">    ASSERT(isSmall());</span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line">    auto *map = objc::smallMethodIMPMap.get(true);</span><br><span class="line">    (*map)[this] = imp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">objc_method_description *method_t::getSmallDescription() const &#123;</span><br><span class="line">    static objc::LazyInitDenseMap&lt;const method_t *, objc_method_description *&gt; map;</span><br><span class="line"></span><br><span class="line">    mutex_locker_t guard(runtimeLock);</span><br><span class="line"></span><br><span class="line">    auto &amp;ptr = (*map.get(true))[this];</span><br><span class="line">    if (!ptr) &#123;</span><br><span class="line">        ptr = (objc_method_description *)malloc(sizeof *ptr);</span><br><span class="line">        ptr-&gt;name = name();</span><br><span class="line">        ptr-&gt;types = (char *)types();</span><br><span class="line">    &#125;</span><br><span class="line">    return ptr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line">  Low two bits of mlist-&gt;entsize is used as the fixed-up marker.</span><br><span class="line">    Method lists from shared cache are 1 (uniqued) or 3 (uniqued and sorted).</span><br><span class="line">    (Protocol method lists are not sorted because of their extra parallel data)</span><br><span class="line">    Runtime fixed-up method lists get 3.</span><br><span class="line"></span><br><span class="line">  High two bits of protocol-&gt;flags is used as the fixed-up marker.</span><br><span class="line">  PREOPTIMIZED VERSION:</span><br><span class="line">    Protocols from shared cache are 1&lt;&lt;30.</span><br><span class="line">    Runtime fixed-up protocols get 1&lt;&lt;30.</span><br><span class="line">  UN-PREOPTIMIZED VERSION:</span><br><span class="line">  Protocols from shared cache are 1&lt;&lt;30.</span><br><span class="line">    Shared cache&#x27;s fixups are not trusted.</span><br><span class="line">    Runtime fixed-up protocols get 3&lt;&lt;30.</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">static const uint32_t fixed_up_method_list = 3;</span><br><span class="line">static const uint32_t uniqued_method_list = 1;</span><br><span class="line">static uint32_t fixed_up_protocol = PROTOCOL_FIXED_UP_1;</span><br><span class="line">static uint32_t canonical_protocol = PROTOCOL_IS_CANONICAL;</span><br><span class="line"></span><br><span class="line">void</span><br><span class="line">disableSharedCacheOptimizations(void)</span><br><span class="line">&#123;</span><br><span class="line">    fixed_up_protocol = PROTOCOL_FIXED_UP_1 | PROTOCOL_FIXED_UP_2;</span><br><span class="line">    // Its safe to just set canonical protocol to 0 as we&#x27;ll never call</span><br><span class="line">    // clearIsCanonical() unless isCanonical() returned true, which can&#x27;t happen</span><br><span class="line">    // with a 0 mask</span><br><span class="line">    canonical_protocol = 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">bool method_list_t::isUniqued() const &#123;</span><br><span class="line">    return (flags() &amp; uniqued_method_list) != 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">bool method_list_t::isFixedUp() const &#123;</span><br><span class="line">    // Ignore any flags in the top bits, just look at the bottom two.</span><br><span class="line">    return (flags() &amp; 0x3) == fixed_up_method_list;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void method_list_t::setFixedUp() &#123;</span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line">    ASSERT(!isFixedUp());</span><br><span class="line">    entsizeAndFlags = entsize() | fixed_up_method_list;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">bool protocol_t::isFixedUp() const &#123;</span><br><span class="line">    return (flags &amp; PROTOCOL_FIXED_UP_MASK) == fixed_up_protocol;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void protocol_t::setFixedUp() &#123;</span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line">    ASSERT(!isFixedUp());</span><br><span class="line">    flags = (flags &amp; ~PROTOCOL_FIXED_UP_MASK) | fixed_up_protocol;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">bool protocol_t::isCanonical() const &#123;</span><br><span class="line">    return (flags &amp; canonical_protocol) != 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void protocol_t::clearIsCanonical() &#123;</span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line">    ASSERT(isCanonical());</span><br><span class="line">    flags = flags &amp; ~canonical_protocol;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">const method_list_t_authed_ptr&lt;method_list_t&gt; *method_array_t::endCategoryMethodLists(Class cls) const</span><br><span class="line">&#123;</span><br><span class="line">    auto mlists = beginLists();</span><br><span class="line">    auto mlistsEnd = endLists();</span><br><span class="line"></span><br><span class="line">    if (mlists == mlistsEnd  ||  !cls-&gt;data()-&gt;ro()-&gt;baseMethods())</span><br><span class="line">    &#123;</span><br><span class="line">        // No methods, or no base methods. </span><br><span class="line">        // Everything here is a category method.</span><br><span class="line">        return mlistsEnd;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    // Have base methods. Category methods are </span><br><span class="line">    // everything except the last method list.</span><br><span class="line">    return mlistsEnd - 1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">static const char *sel_cname(SEL sel)</span><br><span class="line">&#123;</span><br><span class="line">    return (const char *)(void *)sel;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">static size_t protocol_list_size(const protocol_list_t *plist)</span><br><span class="line">&#123;</span><br><span class="line">    return sizeof(protocol_list_t) + plist-&gt;count * sizeof(protocol_t *);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">static void try_free(const void *p) </span><br><span class="line">&#123;</span><br><span class="line">    if (p &amp;&amp; malloc_size(p)) free((void *)p);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">using ClassCopyFixupHandler = void (*)(Class _Nonnull oldClass,</span><br><span class="line">                                       Class _Nonnull newClass);</span><br><span class="line">// Normally there&#x27;s only one handler registered.</span><br><span class="line">static GlobalSmallVector&lt;ClassCopyFixupHandler, 1&gt; classCopyFixupHandlers;</span><br><span class="line"></span><br><span class="line">void _objc_setClassCopyFixupHandler(void (* _Nonnull newFixupHandler)</span><br><span class="line">    (Class _Nonnull oldClass, Class _Nonnull newClass)) &#123;</span><br><span class="line">    mutex_locker_t lock(runtimeLock);</span><br><span class="line">    </span><br><span class="line">    classCopyFixupHandlers.append(newFixupHandler);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">static Class </span><br><span class="line">alloc_class_for_subclass(Class supercls, size_t extraBytes)</span><br><span class="line">&#123;</span><br><span class="line">    if (!supercls  ||  !supercls-&gt;isAnySwift()) &#123;</span><br><span class="line">        return _calloc_class(sizeof(objc_class) + extraBytes);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Superclass is a Swift class. New subclass must duplicate its extra bits.</span><br><span class="line"></span><br><span class="line">    // Allocate the new class, with space for super&#x27;s prefix and suffix</span><br><span class="line">    // and self&#x27;s extraBytes.</span><br><span class="line">    swift_class_t *swiftSupercls = (swift_class_t *)supercls;</span><br><span class="line">    size_t superSize = swiftSupercls-&gt;classSize;</span><br><span class="line">    void *superBits = swiftSupercls-&gt;baseAddress();</span><br><span class="line">    void *bits = malloc(superSize + extraBytes);</span><br><span class="line"></span><br><span class="line">    // Copy all of the superclass&#x27;s data to the new class.</span><br><span class="line">    memcpy(bits, superBits, superSize);</span><br><span class="line"></span><br><span class="line">    // Erase the objc data and the Swift description in the new class.</span><br><span class="line">    swift_class_t *swcls = (swift_class_t *)</span><br><span class="line">        ((uint8_t *)bits + swiftSupercls-&gt;classAddressOffset);</span><br><span class="line">    bzero(swcls, sizeof(objc_class));</span><br><span class="line">    swcls-&gt;description = nil;</span><br><span class="line"></span><br><span class="line">    for (auto handler : classCopyFixupHandlers) &#123;</span><br><span class="line">        handler(supercls, (Class)swcls);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Mark this class as Swift-enhanced.</span><br><span class="line">    if (supercls-&gt;isSwiftStable()) &#123;</span><br><span class="line">        swcls-&gt;bits.setIsSwiftStable();</span><br><span class="line">    &#125;</span><br><span class="line">    if (supercls-&gt;isSwiftLegacy()) &#123;</span><br><span class="line">        swcls-&gt;bits.setIsSwiftLegacy();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    return (Class)swcls;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* object_getIndexedIvars.</span><br><span class="line">**********************************************************************/</span><br><span class="line">void *object_getIndexedIvars(id obj)</span><br><span class="line">&#123;</span><br><span class="line">    uint8_t *base = (uint8_t *)obj;</span><br><span class="line"></span><br><span class="line">    if (obj-&gt;isTaggedPointerOrNil()) return nil;</span><br><span class="line"></span><br><span class="line">    if (!obj-&gt;isClass()) return base + obj-&gt;ISA()-&gt;alignedInstanceSize();</span><br><span class="line"></span><br><span class="line">    Class cls = (Class)obj;</span><br><span class="line">    if (!cls-&gt;isAnySwift()) return base + sizeof(objc_class);</span><br><span class="line">    </span><br><span class="line">    swift_class_t *swcls = (swift_class_t *)cls;</span><br><span class="line">    return base - swcls-&gt;classAddressOffset + word_align(swcls-&gt;classSize);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* make_ro_writeable</span><br><span class="line">* Reallocates rw-&gt;ro if necessary to make it writeable.</span><br><span class="line">* Locking: runtimeLock must be held by the caller.</span><br><span class="line">**********************************************************************/</span><br><span class="line">static class_ro_t *make_ro_writeable(class_rw_t *rw)</span><br><span class="line">&#123;</span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line"></span><br><span class="line">    if (rw-&gt;flags &amp; RW_COPIED_RO) &#123;</span><br><span class="line">        // already writeable, do nothing</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        rw-&gt;set_ro(rw-&gt;ro()-&gt;duplicate());</span><br><span class="line">        rw-&gt;flags |= RW_COPIED_RO;</span><br><span class="line">    &#125;</span><br><span class="line">    return const_cast&lt;class_ro_t *&gt;(rw-&gt;ro());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* dataSegmentsContain</span><br><span class="line">* Returns true if the given address lies within a data segment in any</span><br><span class="line">* loaded image.</span><br><span class="line">**********************************************************************/</span><br><span class="line">NEVER_INLINE</span><br><span class="line">static bool</span><br><span class="line">dataSegmentsContain(Class cls)</span><br><span class="line">&#123;</span><br><span class="line">    uint32_t index;</span><br><span class="line">    if (objc::dataSegmentsRanges.find((uintptr_t)cls, index)) &#123;</span><br><span class="line">        // if the class is realized (hence has a class_rw_t),</span><br><span class="line">        // memorize where we found the range</span><br><span class="line">        if (cls-&gt;isRealized()) &#123;</span><br><span class="line">            cls-&gt;data()-&gt;witness = (uint16_t)index;</span><br><span class="line">        &#125;</span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br><span class="line">    return false;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* isKnownClass</span><br><span class="line">* Return true if the class is known to the runtime (located within the</span><br><span class="line">* shared cache, within the data segment of a loaded image, or has been</span><br><span class="line">* allocated with obj_allocateClassPair).</span><br><span class="line">*</span><br><span class="line">* The result of this operation is cached on the class in a &quot;witness&quot;</span><br><span class="line">* value that is cheaply checked in the fastpath.</span><br><span class="line">**********************************************************************/</span><br><span class="line">ALWAYS_INLINE</span><br><span class="line">static bool</span><br><span class="line">isKnownClass(Class cls)</span><br><span class="line">&#123;</span><br><span class="line">    if (fastpath(objc::dataSegmentsRanges.contains(cls-&gt;data()-&gt;witness, (uintptr_t)cls))) &#123;</span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br><span class="line">    auto &amp;set = objc::allocatedClasses.get();</span><br><span class="line">    return set.find(cls) != set.end() || dataSegmentsContain(cls);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* addClassTableEntry</span><br><span class="line">* Add a class to the table of all classes. If addMeta is true,</span><br><span class="line">* automatically adds the metaclass of the class as well.</span><br><span class="line">* Locking: runtimeLock must be held by the caller.</span><br><span class="line">**********************************************************************/</span><br><span class="line">static void</span><br><span class="line">addClassTableEntry(Class cls, bool addMeta = true)</span><br><span class="line">&#123;</span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line"></span><br><span class="line">    // This class is allowed to be a known class via the shared cache or via</span><br><span class="line">    // data segments, but it is not allowed to be in the dynamic table already.</span><br><span class="line">    auto &amp;set = objc::allocatedClasses.get();</span><br><span class="line"></span><br><span class="line">    ASSERT(set.find(cls) == set.end());</span><br><span class="line"></span><br><span class="line">    if (!isKnownClass(cls))</span><br><span class="line">        set.insert(cls);</span><br><span class="line">    if (addMeta)</span><br><span class="line">        addClassTableEntry(cls-&gt;ISA(), false);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* checkIsKnownClass</span><br><span class="line">* Checks the given class against the list of all known classes. Dies</span><br><span class="line">* with a fatal error if the class is not known.</span><br><span class="line">* Locking: runtimeLock must be held by the caller.</span><br><span class="line">**********************************************************************/</span><br><span class="line">ALWAYS_INLINE</span><br><span class="line">static void</span><br><span class="line">checkIsKnownClass(Class cls)</span><br><span class="line">&#123;</span><br><span class="line">    if (slowpath(!isKnownClass(cls))) &#123;</span><br><span class="line">        _objc_fatal(&quot;Attempt to use unknown class %p.&quot;, cls);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* classNSObject</span><br><span class="line">* Returns class NSObject.</span><br><span class="line">* Locking: none</span><br><span class="line">**********************************************************************/</span><br><span class="line">static Class classNSObject(void)</span><br><span class="line">&#123;</span><br><span class="line">    extern objc_class OBJC_CLASS_$_NSObject;</span><br><span class="line">    return (Class)&amp;OBJC_CLASS_$_NSObject;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">static Class metaclassNSObject(void)</span><br><span class="line">&#123;</span><br><span class="line">    extern objc_class OBJC_METACLASS_$_NSObject;</span><br><span class="line">    return (Class)&amp;OBJC_METACLASS_$_NSObject;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* printReplacements</span><br><span class="line">* Implementation of PrintReplacedMethods / OBJC_PRINT_REPLACED_METHODS.</span><br><span class="line">* Warn about methods from cats that override other methods in cats or cls.</span><br><span class="line">* Assumes no methods from cats have been added to cls yet.</span><br><span class="line">**********************************************************************/</span><br><span class="line">__attribute__((cold, noinline))</span><br><span class="line">static void</span><br><span class="line">printReplacements(Class cls, const locstamped_category_t *cats_list, uint32_t cats_count)</span><br><span class="line">&#123;</span><br><span class="line">    uint32_t c;</span><br><span class="line">    bool isMeta = cls-&gt;isMetaClass();</span><br><span class="line"></span><br><span class="line">    // Newest categories are LAST in cats</span><br><span class="line">    // Later categories override earlier ones.</span><br><span class="line">    for (c = 0; c &lt; cats_count; c++) &#123;</span><br><span class="line">        category_t *cat = cats_list[c].cat;</span><br><span class="line"></span><br><span class="line">        method_list_t *mlist = cat-&gt;methodsForMeta(isMeta);</span><br><span class="line">        if (!mlist) continue;</span><br><span class="line"></span><br><span class="line">        for (const auto&amp; meth : *mlist) &#123;</span><br><span class="line">            SEL s = sel_registerName(sel_cname(meth.name()));</span><br><span class="line"></span><br><span class="line">            // Search for replaced methods in method lookup order.</span><br><span class="line">            // Complain about the first duplicate only.</span><br><span class="line"></span><br><span class="line">            // Look for method in earlier categories</span><br><span class="line">            for (uint32_t c2 = 0; c2 &lt; c; c2++) &#123;</span><br><span class="line">                category_t *cat2 = cats_list[c2].cat;</span><br><span class="line"></span><br><span class="line">                const method_list_t *mlist2 = cat2-&gt;methodsForMeta(isMeta);</span><br><span class="line">                if (!mlist2) continue;</span><br><span class="line"></span><br><span class="line">                for (const auto&amp; meth2 : *mlist2) &#123;</span><br><span class="line">                    SEL s2 = sel_registerName(sel_cname(meth2.name()));</span><br><span class="line">                    if (s == s2) &#123;</span><br><span class="line">                        logReplacedMethod(cls-&gt;nameForLogging(), s, </span><br><span class="line">                                          cls-&gt;isMetaClass(), cat-&gt;name, </span><br><span class="line">                                          meth2.imp(false), meth.imp(false));</span><br><span class="line">                        goto complained;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            // Look for method in cls</span><br><span class="line">            for (const auto&amp; meth2 : cls-&gt;data()-&gt;methods()) &#123;</span><br><span class="line">                SEL s2 = sel_registerName(sel_cname(meth2.name()));</span><br><span class="line">                if (s == s2) &#123;</span><br><span class="line">                    logReplacedMethod(cls-&gt;nameForLogging(), s, </span><br><span class="line">                                      cls-&gt;isMetaClass(), cat-&gt;name, </span><br><span class="line">                                      meth2.imp(false), meth.imp(false));</span><br><span class="line">                    goto complained;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        complained:</span><br><span class="line">            ;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* unreasonableClassCount</span><br><span class="line">* Provides an upper bound for any iteration of classes,</span><br><span class="line">* to prevent spins when runtime metadata is corrupted.</span><br><span class="line">**********************************************************************/</span><br><span class="line">static unsigned unreasonableClassCount()</span><br><span class="line">&#123;</span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line"></span><br><span class="line">    int base = NXCountMapTable(gdb_objc_realized_classes) +</span><br><span class="line">    getPreoptimizedClassUnreasonableCount();</span><br><span class="line"></span><br><span class="line">    // Provide lots of slack here. Some iterations touch metaclasses too.</span><br><span class="line">    // Some iterations backtrack (like realized class iteration).</span><br><span class="line">    // We don&#x27;t need an efficient bound, merely one that prevents spins.</span><br><span class="line">    return (base + 1) * 16;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* Class enumerators</span><br><span class="line">* The passed in block returns `false` if subclasses can be skipped</span><br><span class="line">* Locking: runtimeLock must be held by the caller.</span><br><span class="line">**********************************************************************/</span><br><span class="line">static inline void</span><br><span class="line">foreach_realized_class_and_subclass_2(Class top, unsigned &amp;count,</span><br><span class="line">                                      bool skip_metaclass,</span><br><span class="line">                                      bool (^code)(Class) __attribute((noescape)))</span><br><span class="line">&#123;</span><br><span class="line">    Class cls = top;</span><br><span class="line"></span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line">    ASSERT(top);</span><br><span class="line"></span><br><span class="line">    while (1) &#123;</span><br><span class="line">        if (--count == 0) &#123;</span><br><span class="line">            _objc_fatal(&quot;Memory corruption in class list.&quot;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        bool skip_subclasses;</span><br><span class="line"></span><br><span class="line">        if (skip_metaclass &amp;&amp; cls-&gt;isMetaClass()) &#123;</span><br><span class="line">            skip_subclasses = true;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            skip_subclasses = !code(cls);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if (!skip_subclasses &amp;&amp; cls-&gt;data()-&gt;firstSubclass) &#123;</span><br><span class="line">            cls = cls-&gt;data()-&gt;firstSubclass;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            while (!cls-&gt;data()-&gt;nextSiblingClass  &amp;&amp;  cls != top) &#123;</span><br><span class="line">                cls = cls-&gt;getSuperclass();</span><br><span class="line">                if (--count == 0) &#123;</span><br><span class="line">                    _objc_fatal(&quot;Memory corruption in class list.&quot;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            if (cls == top) break;</span><br><span class="line">            cls = cls-&gt;data()-&gt;nextSiblingClass;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// Enumerates a class and all of its realized subclasses.</span><br><span class="line">static void</span><br><span class="line">foreach_realized_class_and_subclass(Class top, bool (^code)(Class) __attribute((noescape)))</span><br><span class="line">&#123;</span><br><span class="line">    unsigned int count = unreasonableClassCount();</span><br><span class="line"></span><br><span class="line">    foreach_realized_class_and_subclass_2(top, count, false, code);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// Enumerates all realized classes and metaclasses.</span><br><span class="line">static void</span><br><span class="line">foreach_realized_class_and_metaclass(bool (^code)(Class) __attribute((noescape)))</span><br><span class="line">&#123;</span><br><span class="line">    unsigned int count = unreasonableClassCount();</span><br><span class="line"></span><br><span class="line">    for (Class top = _firstRealizedClass;</span><br><span class="line">         top != nil;</span><br><span class="line">         top = top-&gt;data()-&gt;nextSiblingClass)</span><br><span class="line">    &#123;</span><br><span class="line">        foreach_realized_class_and_subclass_2(top, count, false, code);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// Enumerates all realized classes (ignoring metaclasses).</span><br><span class="line">static void</span><br><span class="line">foreach_realized_class(bool (^code)(Class) __attribute((noescape)))</span><br><span class="line">&#123;</span><br><span class="line">    unsigned int count = unreasonableClassCount();</span><br><span class="line"></span><br><span class="line">    for (Class top = _firstRealizedClass;</span><br><span class="line">         top != nil;</span><br><span class="line">         top = top-&gt;data()-&gt;nextSiblingClass)</span><br><span class="line">    &#123;</span><br><span class="line">        foreach_realized_class_and_subclass_2(top, count, true, code);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line"> * Method Scanners / Optimization tracking</span><br><span class="line"> * Implementation of scanning for various implementations of methods.</span><br><span class="line"> **********************************************************************/</span><br><span class="line"></span><br><span class="line">namespace objc &#123;</span><br><span class="line"></span><br><span class="line">enum SelectorBundle &#123;</span><br><span class="line">    AWZ,</span><br><span class="line">    RR,</span><br><span class="line">    Core,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">namespace scanner &#123;</span><br><span class="line"></span><br><span class="line">// The current state of NSObject swizzling for every scanner</span><br><span class="line">//</span><br><span class="line">// It allows for cheap checks of global swizzles, and also lets</span><br><span class="line">// things like IMP Swizzling before NSObject has been initialized</span><br><span class="line">// to be remembered, as setInitialized() would miss these.</span><br><span class="line">//</span><br><span class="line">// Every pair of bits describes a SelectorBundle.</span><br><span class="line">// even bits: is NSObject class swizzled for this bundle</span><br><span class="line">// odd bits:  is NSObject meta class swizzled for this bundle</span><br><span class="line">static uintptr_t NSObjectSwizzledMask;</span><br><span class="line"></span><br><span class="line">static ALWAYS_INLINE uintptr_t</span><br><span class="line">swizzlingBit(SelectorBundle bundle, bool isMeta)</span><br><span class="line">&#123;</span><br><span class="line">    return 1UL &lt;&lt; (2 * bundle + isMeta);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">static void __attribute__((cold, noinline))</span><br><span class="line">printCustom(Class cls, SelectorBundle bundle, bool inherited)</span><br><span class="line">&#123;</span><br><span class="line">    static char const * const SelectorBundleName[] = &#123;</span><br><span class="line">        [AWZ]  = &quot;CUSTOM AWZ&quot;,</span><br><span class="line">        [RR]   = &quot;CUSTOM RR&quot;,</span><br><span class="line">        [Core] = &quot;CUSTOM Core&quot;,</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    _objc_inform(&quot;%s: %s%s%s&quot;, SelectorBundleName[bundle],</span><br><span class="line">                 cls-&gt;nameForLogging(),</span><br><span class="line">                 cls-&gt;isMetaClass() ? &quot; (meta)&quot; : &quot;&quot;,</span><br><span class="line">                 inherited ? &quot; (inherited)&quot; : &quot;&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">enum class Scope &#123; Instances, Classes, Both &#125;;</span><br><span class="line"></span><br><span class="line">template &lt;typename Traits, SelectorBundle Bundle, bool &amp;ShouldPrint, Scope Domain = Scope::Both&gt;</span><br><span class="line">class Mixin &#123;</span><br><span class="line"></span><br><span class="line">    // work around compiler being broken with templates using Class/objc_class,</span><br><span class="line">    // probably some weird confusion with Class being builtin</span><br><span class="line">    ALWAYS_INLINE static objc_class *as_objc_class(Class cls) &#123;</span><br><span class="line">        return (objc_class *)cls;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    static void</span><br><span class="line">    setCustomRecursively(Class cls, bool inherited = false)</span><br><span class="line">    &#123;</span><br><span class="line">        foreach_realized_class_and_subclass(cls, [=](Class c)&#123;</span><br><span class="line">            if (c != cls &amp;&amp; !as_objc_class(c)-&gt;isInitialized()) &#123;</span><br><span class="line">                // Subclass not yet initialized. Wait for setInitialized() to do it</span><br><span class="line">                return false;</span><br><span class="line">            &#125;</span><br><span class="line">            if (Traits::isCustom(c)) &#123;</span><br><span class="line">                return false;</span><br><span class="line">            &#125;</span><br><span class="line">            Traits::setCustom(c);</span><br><span class="line">            if (ShouldPrint) &#123;</span><br><span class="line">                printCustom(cls, Bundle, inherited || c != cls);</span><br><span class="line">            &#125;</span><br><span class="line">            return true;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    static bool</span><br><span class="line">    isNSObjectSwizzled(bool isMeta)</span><br><span class="line">    &#123;</span><br><span class="line">        return NSObjectSwizzledMask &amp; swizzlingBit(Bundle, isMeta);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    static void</span><br><span class="line">    setNSObjectSwizzled(Class NSOClass, bool isMeta)</span><br><span class="line">    &#123;</span><br><span class="line">        NSObjectSwizzledMask |= swizzlingBit(Bundle, isMeta);</span><br><span class="line">        if (as_objc_class(NSOClass)-&gt;isInitialized()) &#123;</span><br><span class="line">            setCustomRecursively(NSOClass);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    static void</span><br><span class="line">    scanChangedMethodForUnknownClass(const method_t *meth)</span><br><span class="line">    &#123;</span><br><span class="line">        Class cls;</span><br><span class="line"></span><br><span class="line">        cls = classNSObject();</span><br><span class="line">        if (Domain != Scope::Classes &amp;&amp; !isNSObjectSwizzled(NO)) &#123;</span><br><span class="line">            for (const auto &amp;meth2: as_objc_class(cls)-&gt;data()-&gt;methods()) &#123;</span><br><span class="line">                if (meth == &amp;meth2) &#123;</span><br><span class="line">                    setNSObjectSwizzled(cls, NO);</span><br><span class="line">                    break;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        cls = metaclassNSObject();</span><br><span class="line">        if (Domain != Scope::Instances &amp;&amp; !isNSObjectSwizzled(YES)) &#123;</span><br><span class="line">            for (const auto &amp;meth2: as_objc_class(cls)-&gt;data()-&gt;methods()) &#123;</span><br><span class="line">                if (meth == &amp;meth2) &#123;</span><br><span class="line">                    setNSObjectSwizzled(cls, YES);</span><br><span class="line">                    break;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    static void</span><br><span class="line">    scanAddedClassImpl(Class cls, bool isMeta)</span><br><span class="line">    &#123;</span><br><span class="line">        bool setCustom = NO, inherited = NO;</span><br><span class="line"></span><br><span class="line">        if (isNSObjectSwizzled(isMeta)) &#123;</span><br><span class="line">            setCustom = YES;</span><br><span class="line">        &#125; else if (Traits::knownClassHasDefaultImpl(cls, isMeta)) &#123;</span><br><span class="line">            // This class is known to have the default implementations,</span><br><span class="line">            // but we need to check categories.</span><br><span class="line">            auto &amp;methods = as_objc_class(cls)-&gt;data()-&gt;methods();</span><br><span class="line">            setCustom = Traits::scanMethodLists(methods.beginCategoryMethodLists(),</span><br><span class="line">                                                  methods.endCategoryMethodLists(cls));</span><br><span class="line">        &#125; else if (!isMeta &amp;&amp; !as_objc_class(cls)-&gt;getSuperclass()) &#123;</span><br><span class="line">            // Custom Root class</span><br><span class="line">            setCustom = YES;</span><br><span class="line">        &#125; else if (Traits::isCustom(as_objc_class(cls)-&gt;getSuperclass())) &#123;</span><br><span class="line">            // Superclass is custom, therefore we are too.</span><br><span class="line">            setCustom = YES;</span><br><span class="line">            inherited = YES;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            // Not NSObject.</span><br><span class="line">            auto &amp;methods = as_objc_class(cls)-&gt;data()-&gt;methods();</span><br><span class="line">            setCustom = Traits::scanMethodLists(methods.beginLists(),</span><br><span class="line">                                                  methods.endLists());</span><br><span class="line">        &#125;</span><br><span class="line">        if (slowpath(setCustom)) &#123;</span><br><span class="line">            if (ShouldPrint) printCustom(cls, Bundle, inherited);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            Traits::setDefault(cls);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">public:</span><br><span class="line">    static bool knownClassHasDefaultImpl(Class cls, bool isMeta) &#123;</span><br><span class="line">        // Typically only NSObject has default implementations.</span><br><span class="line">        // Allow this to be extended by overriding (to allow</span><br><span class="line">        // SwiftObject, for example).</span><br><span class="line">        Class NSOClass = (isMeta ? metaclassNSObject() : classNSObject());</span><br><span class="line">        return cls == NSOClass;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Scan a class that is about to be marked Initialized for particular</span><br><span class="line">    // bundles of selectors, and mark the class and its children</span><br><span class="line">    // accordingly.</span><br><span class="line">    //</span><br><span class="line">    // This also handles inheriting properties from its superclass.</span><br><span class="line">    //</span><br><span class="line">    // Caller: objc_class::setInitialized()</span><br><span class="line">    static void</span><br><span class="line">    scanInitializedClass(Class cls, Class metacls)</span><br><span class="line">    &#123;</span><br><span class="line">        if (Domain != Scope::Classes) &#123;</span><br><span class="line">            scanAddedClassImpl(cls, false);</span><br><span class="line">        &#125;</span><br><span class="line">        if (Domain != Scope::Instances) &#123;</span><br><span class="line">            scanAddedClassImpl(metacls, true);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Inherit various properties from the superclass when a class</span><br><span class="line">    // is being added to the graph.</span><br><span class="line">    //</span><br><span class="line">    // Caller: addSubclass()</span><br><span class="line">    static void</span><br><span class="line">    scanAddedSubClass(Class subcls, Class supercls)</span><br><span class="line">    &#123;</span><br><span class="line">        if (slowpath(Traits::isCustom(supercls) &amp;&amp; !Traits::isCustom(subcls))) &#123;</span><br><span class="line">            setCustomRecursively(subcls, true);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Scan Method lists for selectors that would override things</span><br><span class="line">    // in a Bundle.</span><br><span class="line">    //</span><br><span class="line">    // This is used to detect when categories override problematic selectors</span><br><span class="line">    // are injected in a class after it has been initialized.</span><br><span class="line">    //</span><br><span class="line">    // Caller: prepareMethodLists()</span><br><span class="line">    static void</span><br><span class="line">    scanAddedMethodLists(Class cls, method_list_t **mlists, int count)</span><br><span class="line">    &#123;</span><br><span class="line">        if (slowpath(Traits::isCustom(cls))) &#123;</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line">        if (slowpath(Traits::scanMethodLists(mlists, mlists + count))) &#123;</span><br><span class="line">            setCustomRecursively(cls);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Handle IMP Swizzling (the IMP for an exisiting method being changed).</span><br><span class="line">    //</span><br><span class="line">    // In almost all cases, IMP swizzling does not affect custom bits.</span><br><span class="line">    // Custom search will already find the method whether or not</span><br><span class="line">    // it is swizzled, so it does not transition from non-custom to custom.</span><br><span class="line">    //</span><br><span class="line">    // The only cases where IMP swizzling can affect the custom bits is</span><br><span class="line">    // if the swizzled method is one of the methods that is assumed to be</span><br><span class="line">    // non-custom. These special cases are listed in setInitialized().</span><br><span class="line">    // We look for such cases here.</span><br><span class="line">    //</span><br><span class="line">    // Caller: Swizzling methods via adjustCustomFlagsForMethodChange()</span><br><span class="line">    static void</span><br><span class="line">    scanChangedMethod(Class cls, const method_t *meth)</span><br><span class="line">    &#123;</span><br><span class="line">        if (fastpath(!Traits::isInterestingSelector(meth-&gt;name()))) &#123;</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if (cls) &#123;</span><br><span class="line">            bool isMeta = as_objc_class(cls)-&gt;isMetaClass();</span><br><span class="line">            if (isMeta &amp;&amp; Domain != Scope::Instances) &#123;</span><br><span class="line">                if (cls == metaclassNSObject() &amp;&amp; !isNSObjectSwizzled(isMeta)) &#123;</span><br><span class="line">                    setNSObjectSwizzled(cls, isMeta);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            if (!isMeta &amp;&amp; Domain != Scope::Classes) &#123;</span><br><span class="line">                if (cls == classNSObject() &amp;&amp; !isNSObjectSwizzled(isMeta)) &#123;</span><br><span class="line">                    setNSObjectSwizzled(cls, isMeta);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            // We&#x27;re called from method_exchangeImplementations, only NSObject</span><br><span class="line">            // class and metaclass may be problematic (exchanging the default</span><br><span class="line">            // builtin IMP of an interesting seleector, is a swizzling that,</span><br><span class="line">            // may flip our scanned property. For other classes, the previous</span><br><span class="line">            // value had already flipped the property).</span><br><span class="line">            //</span><br><span class="line">            // However, as we don&#x27;t know the class, we need to scan all of</span><br><span class="line">            // NSObject class and metaclass methods (this is SLOW).</span><br><span class="line">            scanChangedMethodForUnknownClass(meth);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">&#125; // namespace scanner</span><br><span class="line"></span><br><span class="line">// AWZ methods: +alloc / +allocWithZone:</span><br><span class="line">struct AWZScanner : scanner::Mixin&lt;AWZScanner, AWZ, PrintCustomAWZ, scanner::Scope::Classes&gt; &#123;</span><br><span class="line">    static bool isCustom(Class cls) &#123;</span><br><span class="line">        return cls-&gt;hasCustomAWZ();</span><br><span class="line">    &#125;</span><br><span class="line">    static void setCustom(Class cls) &#123;</span><br><span class="line">        cls-&gt;setHasCustomAWZ();</span><br><span class="line">    &#125;</span><br><span class="line">    static void setDefault(Class cls) &#123;</span><br><span class="line">        cls-&gt;setHasDefaultAWZ();</span><br><span class="line">    &#125;</span><br><span class="line">    static bool isInterestingSelector(SEL sel) &#123;</span><br><span class="line">        return sel == @selector(alloc) || sel == @selector(allocWithZone:);</span><br><span class="line">    &#125;</span><br><span class="line">    template&lt;typename T&gt;</span><br><span class="line">    static bool scanMethodLists(T *mlists, T *end) &#123;</span><br><span class="line">        SEL sels[2] = &#123; @selector(alloc), @selector(allocWithZone:), &#125;;</span><br><span class="line">        return method_lists_contains_any(mlists, end, sels, 2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// Retain/Release methods that are extremely rarely overridden</span><br><span class="line">//</span><br><span class="line">// retain/release/autorelease/retainCount/</span><br><span class="line">// _tryRetain/_isDeallocating/retainWeakReference/allowsWeakReference</span><br><span class="line">struct RRScanner : scanner::Mixin&lt;RRScanner, RR, PrintCustomRR</span><br><span class="line">#if !SUPPORT_NONPOINTER_ISA</span><br><span class="line">, scanner::Scope::Instances</span><br><span class="line">#endif</span><br><span class="line">&gt; &#123;</span><br><span class="line">    static bool isCustom(Class cls) &#123;</span><br><span class="line">        return cls-&gt;hasCustomRR();</span><br><span class="line">    &#125;</span><br><span class="line">    static void setCustom(Class cls) &#123;</span><br><span class="line">        cls-&gt;setHasCustomRR();</span><br><span class="line">    &#125;</span><br><span class="line">    static void setDefault(Class cls) &#123;</span><br><span class="line">        cls-&gt;setHasDefaultRR();</span><br><span class="line">    &#125;</span><br><span class="line">    static bool isInterestingSelector(SEL sel) &#123;</span><br><span class="line">        return sel == @selector(retain) ||</span><br><span class="line">               sel == @selector(release) ||</span><br><span class="line">               sel == @selector(autorelease) ||</span><br><span class="line">               sel == @selector(_tryRetain) ||</span><br><span class="line">               sel == @selector(_isDeallocating) ||</span><br><span class="line">               sel == @selector(retainCount) ||</span><br><span class="line">               sel == @selector(allowsWeakReference) ||</span><br><span class="line">               sel == @selector(retainWeakReference);</span><br><span class="line">    &#125;</span><br><span class="line">    template &lt;typename T&gt;</span><br><span class="line">    static bool scanMethodLists(T *mlists, T *end) &#123;</span><br><span class="line">        SEL sels[8] = &#123;</span><br><span class="line">            @selector(retain),</span><br><span class="line">            @selector(release),</span><br><span class="line">            @selector(autorelease),</span><br><span class="line">            @selector(_tryRetain),</span><br><span class="line">            @selector(_isDeallocating),</span><br><span class="line">            @selector(retainCount),</span><br><span class="line">            @selector(allowsWeakReference),</span><br><span class="line">            @selector(retainWeakReference),</span><br><span class="line">        &#125;;</span><br><span class="line">        return method_lists_contains_any(mlists, end, sels, 8);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// Core NSObject methods that are extremely rarely overridden</span><br><span class="line">//</span><br><span class="line">// +new, ±class, ±self, ±isKindOfClass:, ±respondsToSelector</span><br><span class="line">struct CoreScanner : scanner::Mixin&lt;CoreScanner, Core, PrintCustomCore&gt; &#123;</span><br><span class="line">    static bool knownClassHasDefaultImpl(Class cls, bool isMeta) &#123;</span><br><span class="line">        if (scanner::Mixin&lt;CoreScanner, Core, PrintCustomCore&gt;::knownClassHasDefaultImpl(cls, isMeta))</span><br><span class="line">            return true;</span><br><span class="line">        if ((cls-&gt;isRootClass() || cls-&gt;isRootMetaclass())</span><br><span class="line">            &amp;&amp; strcmp(cls-&gt;mangledName(), &quot;_TtCs12_SwiftObject&quot;) == 0)</span><br><span class="line">            return true;</span><br><span class="line"></span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    static bool isCustom(Class cls) &#123;</span><br><span class="line">        return cls-&gt;hasCustomCore();</span><br><span class="line">    &#125;</span><br><span class="line">    static void setCustom(Class cls) &#123;</span><br><span class="line">        cls-&gt;setHasCustomCore();</span><br><span class="line">    &#125;</span><br><span class="line">    static void setDefault(Class cls) &#123;</span><br><span class="line">        cls-&gt;setHasDefaultCore();</span><br><span class="line">    &#125;</span><br><span class="line">    static bool isInterestingSelector(SEL sel) &#123;</span><br><span class="line">        return sel == @selector(new) ||</span><br><span class="line">               sel == @selector(self) ||</span><br><span class="line">               sel == @selector(class) ||</span><br><span class="line">               sel == @selector(isKindOfClass:) ||</span><br><span class="line">               sel == @selector(respondsToSelector:);</span><br><span class="line">    &#125;</span><br><span class="line">    template &lt;typename T&gt;</span><br><span class="line">    static bool scanMethodLists(T *mlists, T *end) &#123;</span><br><span class="line">        SEL sels[5] = &#123;</span><br><span class="line">            @selector(new),</span><br><span class="line">            @selector(self),</span><br><span class="line">            @selector(class),</span><br><span class="line">            @selector(isKindOfClass:),</span><br><span class="line">            @selector(respondsToSelector:)</span><br><span class="line">        &#125;;</span><br><span class="line">        return method_lists_contains_any(mlists, end, sels, 5);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">class category_list : nocopy_t &#123;</span><br><span class="line">    union &#123;</span><br><span class="line">        locstamped_category_t lc;</span><br><span class="line">        struct &#123;</span><br><span class="line">            locstamped_category_t *array;</span><br><span class="line">            // this aliases with locstamped_category_t::hi</span><br><span class="line">            // which is an aliased pointer</span><br><span class="line">            uint32_t is_array :  1;</span><br><span class="line">            uint32_t count    : 31;</span><br><span class="line">            uint32_t size     : 32;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125; _u;</span><br><span class="line"></span><br><span class="line">public:</span><br><span class="line">    category_list() : _u&#123;&#123;nullptr, nullptr&#125;&#125; &#123; &#125;</span><br><span class="line">    category_list(locstamped_category_t lc) : _u&#123;&#123;lc&#125;&#125; &#123; &#125;</span><br><span class="line">    category_list(category_list &amp;&amp;other) : category_list() &#123;</span><br><span class="line">        std::swap(_u, other._u);</span><br><span class="line">    &#125;</span><br><span class="line">    ~category_list()</span><br><span class="line">    &#123;</span><br><span class="line">        if (_u.is_array) &#123;</span><br><span class="line">            free(_u.array);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    uint32_t count() const</span><br><span class="line">    &#123;</span><br><span class="line">        if (_u.is_array) return _u.count;</span><br><span class="line">        return _u.lc.cat ? 1 : 0;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    uint32_t arrayByteSize(uint32_t size) const</span><br><span class="line">    &#123;</span><br><span class="line">        return sizeof(locstamped_category_t) * size;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    const locstamped_category_t *array() const</span><br><span class="line">    &#123;</span><br><span class="line">        return _u.is_array ? _u.array : &amp;_u.lc;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    void append(locstamped_category_t lc)</span><br><span class="line">    &#123;</span><br><span class="line">        if (_u.is_array) &#123;</span><br><span class="line">            if (_u.count == _u.size) &#123;</span><br><span class="line">                // Have a typical malloc growth:</span><br><span class="line">                // - size &lt;=  8: grow by 2</span><br><span class="line">                // - size &lt;= 16: grow by 4</span><br><span class="line">                // - size &lt;= 32: grow by 8</span><br><span class="line">                // ... etc</span><br><span class="line">                _u.size += _u.size &lt; 8 ? 2 : 1 &lt;&lt; (fls(_u.size) - 2);</span><br><span class="line">                _u.array = (locstamped_category_t *)reallocf(_u.array, arrayByteSize(_u.size));</span><br><span class="line">            &#125;</span><br><span class="line">            _u.array[_u.count++] = lc;</span><br><span class="line">        &#125; else if (_u.lc.cat == NULL) &#123;</span><br><span class="line">            _u.lc = lc;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            locstamped_category_t *arr = (locstamped_category_t *)malloc(arrayByteSize(2));</span><br><span class="line">            arr[0] = _u.lc;</span><br><span class="line">            arr[1] = lc;</span><br><span class="line"></span><br><span class="line">            _u.array = arr;</span><br><span class="line">            _u.is_array = true;</span><br><span class="line">            _u.count = 2;</span><br><span class="line">            _u.size = 2;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    void erase(category_t *cat)</span><br><span class="line">    &#123;</span><br><span class="line">        if (_u.is_array) &#123;</span><br><span class="line">            for (int i = 0; i &lt; _u.count; i++) &#123;</span><br><span class="line">                if (_u.array[i].cat == cat) &#123;</span><br><span class="line">                    // shift entries to preserve list order</span><br><span class="line">                    memmove(&amp;_u.array[i], &amp;_u.array[i+1], arrayByteSize(_u.count - i - 1));</span><br><span class="line">                    return;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; else if (_u.lc.cat == cat) &#123;</span><br><span class="line">            _u.lc.cat = NULL;</span><br><span class="line">            _u.lc.hi = NULL;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">class UnattachedCategories : public ExplicitInitDenseMap&lt;Class, category_list&gt;</span><br><span class="line">&#123;</span><br><span class="line">public:</span><br><span class="line">    void addForClass(locstamped_category_t lc, Class cls)</span><br><span class="line">    &#123;</span><br><span class="line">        runtimeLock.assertLocked();</span><br><span class="line"></span><br><span class="line">        if (slowpath(PrintConnecting)) &#123;</span><br><span class="line">            _objc_inform(&quot;CLASS: found category %c%s(%s)&quot;,</span><br><span class="line">                         cls-&gt;isMetaClassMaybeUnrealized() ? &#x27;+&#x27; : &#x27;-&#x27;,</span><br><span class="line">                         cls-&gt;nameForLogging(), lc.cat-&gt;name);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        auto result = get().try_emplace(cls, lc);</span><br><span class="line">        if (!result.second) &#123;</span><br><span class="line">            result.first-&gt;second.append(lc);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    void attachToClass(Class cls, Class previously, int flags)</span><br><span class="line">    &#123;</span><br><span class="line">        runtimeLock.assertLocked();</span><br><span class="line">        ASSERT((flags &amp; ATTACH_CLASS) ||</span><br><span class="line">               (flags &amp; ATTACH_METACLASS) ||</span><br><span class="line">               (flags &amp; ATTACH_CLASS_AND_METACLASS));</span><br><span class="line"></span><br><span class="line">        auto &amp;map = get();</span><br><span class="line">        auto it = map.find(previously);</span><br><span class="line"></span><br><span class="line">        if (it != map.end()) &#123;</span><br><span class="line">            category_list &amp;list = it-&gt;second;</span><br><span class="line">            if (flags &amp; ATTACH_CLASS_AND_METACLASS) &#123;</span><br><span class="line">                int otherFlags = flags &amp; ~ATTACH_CLASS_AND_METACLASS;</span><br><span class="line">                attachCategories(cls, list.array(), list.count(), otherFlags | ATTACH_CLASS);</span><br><span class="line">                attachCategories(cls-&gt;ISA(), list.array(), list.count(), otherFlags | ATTACH_METACLASS);</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                attachCategories(cls, list.array(), list.count(), flags);</span><br><span class="line">            &#125;</span><br><span class="line">            map.erase(it);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    void eraseCategoryForClass(category_t *cat, Class cls)</span><br><span class="line">    &#123;</span><br><span class="line">        runtimeLock.assertLocked();</span><br><span class="line"></span><br><span class="line">        auto &amp;map = get();</span><br><span class="line">        auto it = map.find(cls);</span><br><span class="line">        if (it != map.end()) &#123;</span><br><span class="line">            category_list &amp;list = it-&gt;second;</span><br><span class="line">            list.erase(cat);</span><br><span class="line">            if (list.count() == 0) &#123;</span><br><span class="line">                map.erase(it);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    void eraseClass(Class cls)</span><br><span class="line">    &#123;</span><br><span class="line">        runtimeLock.assertLocked();</span><br><span class="line"></span><br><span class="line">        get().erase(cls);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">static UnattachedCategories unattachedCategories;</span><br><span class="line"></span><br><span class="line">&#125; // namespace objc</span><br><span class="line"></span><br><span class="line">static bool isBundleClass(Class cls)</span><br><span class="line">&#123;</span><br><span class="line">    return cls-&gt;data()-&gt;ro()-&gt;flags &amp; RO_FROM_BUNDLE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">static void </span><br><span class="line">fixupMethodList(method_list_t *mlist, bool bundleCopy, bool sort)</span><br><span class="line">&#123;</span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line">    ASSERT(!mlist-&gt;isFixedUp());</span><br><span class="line"></span><br><span class="line">    // fixme lock less in attachMethodLists ?</span><br><span class="line">    // dyld3 may have already uniqued, but not sorted, the list</span><br><span class="line">    if (!mlist-&gt;isUniqued()) &#123;</span><br><span class="line">        mutex_locker_t lock(selLock);</span><br><span class="line">    </span><br><span class="line">        // Unique selectors in list.</span><br><span class="line">        for (auto&amp; meth : *mlist) &#123;</span><br><span class="line">            const char *name = sel_cname(meth.name());</span><br><span class="line">            meth.setName(sel_registerNameNoLock(name, bundleCopy));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Sort by selector address.</span><br><span class="line">    // Don&#x27;t try to sort small lists, as they&#x27;re immutable.</span><br><span class="line">    // Don&#x27;t try to sort big lists of nonstandard size, as stable_sort</span><br><span class="line">    // won&#x27;t copy the entries properly.</span><br><span class="line">    if (sort &amp;&amp; !mlist-&gt;isSmallList() &amp;&amp; mlist-&gt;entsize() == method_t::bigSize) &#123;</span><br><span class="line">        method_t::SortBySELAddress sorter;</span><br><span class="line">        std::stable_sort(&amp;mlist-&gt;begin()-&gt;big(), &amp;mlist-&gt;end()-&gt;big(), sorter);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    // Mark method list as uniqued and sorted.</span><br><span class="line">    // Can&#x27;t mark small lists, since they&#x27;re immutable.</span><br><span class="line">    if (!mlist-&gt;isSmallList()) &#123;</span><br><span class="line">        mlist-&gt;setFixedUp();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">static void </span><br><span class="line">prepareMethodLists(Class cls, method_list_t **addedLists, int addedCount,</span><br><span class="line">                   bool baseMethods, bool methodsFromBundle, const char *why)</span><br><span class="line">&#123;</span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line"></span><br><span class="line">    if (addedCount == 0) return;</span><br><span class="line"></span><br><span class="line">    // There exist RR/AWZ/Core special cases for some class&#x27;s base methods.</span><br><span class="line">    // But this code should never need to scan base methods for RR/AWZ/Core:</span><br><span class="line">    // default RR/AWZ/Core cannot be set before setInitialized().</span><br><span class="line">    // Therefore we need not handle any special cases here.</span><br><span class="line">    if (baseMethods) &#123;</span><br><span class="line">        ASSERT(cls-&gt;hasCustomAWZ() &amp;&amp; cls-&gt;hasCustomRR() &amp;&amp; cls-&gt;hasCustomCore());</span><br><span class="line">    &#125; else if (cls-&gt;cache.isConstantOptimizedCache()) &#123;</span><br><span class="line">        cls-&gt;setDisallowPreoptCachesRecursively(why);</span><br><span class="line">    &#125; else if (cls-&gt;allowsPreoptInlinedSels()) &#123;</span><br><span class="line">#if CONFIG_USE_PREOPT_CACHES</span><br><span class="line">        SEL *sels = (SEL *)objc_opt_offsets[OBJC_OPT_INLINED_METHODS_START];</span><br><span class="line">        SEL *sels_end = (SEL *)objc_opt_offsets[OBJC_OPT_INLINED_METHODS_END];</span><br><span class="line">        if (method_lists_contains_any(addedLists, addedLists + addedCount, sels, sels_end - sels)) &#123;</span><br><span class="line">            cls-&gt;setDisallowPreoptInlinedSelsRecursively(why);</span><br><span class="line">        &#125;</span><br><span class="line">#endif</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Add method lists to array.</span><br><span class="line">    // Reallocate un-fixed method lists.</span><br><span class="line">    // The new methods are PREPENDED to the method list array.</span><br><span class="line"></span><br><span class="line">    for (int i = 0; i &lt; addedCount; i++) &#123;</span><br><span class="line">        method_list_t *mlist = addedLists[i];</span><br><span class="line">        ASSERT(mlist);</span><br><span class="line"></span><br><span class="line">        // Fixup selectors if necessary</span><br><span class="line">        if (!mlist-&gt;isFixedUp()) &#123;</span><br><span class="line">            fixupMethodList(mlist, methodsFromBundle, true/*sort*/);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // If the class is initialized, then scan for method implementations</span><br><span class="line">    // tracked by the class&#x27;s flags. If it&#x27;s not initialized yet,</span><br><span class="line">    // then objc_class::setInitialized() will take care of it.</span><br><span class="line">    if (cls-&gt;isInitialized()) &#123;</span><br><span class="line">        objc::AWZScanner::scanAddedMethodLists(cls, addedLists, addedCount);</span><br><span class="line">        objc::RRScanner::scanAddedMethodLists(cls, addedLists, addedCount);</span><br><span class="line">        objc::CoreScanner::scanAddedMethodLists(cls, addedLists, addedCount);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class_rw_ext_t *</span><br><span class="line">class_rw_t::extAlloc(const class_ro_t *ro, bool deepCopy)</span><br><span class="line">&#123;</span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line"></span><br><span class="line">    auto rwe = objc::zalloc&lt;class_rw_ext_t&gt;();</span><br><span class="line"></span><br><span class="line">    rwe-&gt;version = (ro-&gt;flags &amp; RO_META) ? 7 : 0;</span><br><span class="line"></span><br><span class="line">    method_list_t *list = ro-&gt;baseMethods();</span><br><span class="line">    if (list) &#123;</span><br><span class="line">        if (deepCopy) list = list-&gt;duplicate();</span><br><span class="line">        rwe-&gt;methods.attachLists(&amp;list, 1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // See comments in objc_duplicateClass</span><br><span class="line">    // property lists and protocol lists historically</span><br><span class="line">    // have not been deep-copied</span><br><span class="line">    //</span><br><span class="line">    // This is probably wrong and ought to be fixed some day</span><br><span class="line">    property_list_t *proplist = ro-&gt;baseProperties;</span><br><span class="line">    if (proplist) &#123;</span><br><span class="line">        rwe-&gt;properties.attachLists(&amp;proplist, 1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    protocol_list_t *protolist = ro-&gt;baseProtocols;</span><br><span class="line">    if (protolist) &#123;</span><br><span class="line">        rwe-&gt;protocols.attachLists(&amp;protolist, 1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    set_ro_or_rwe(rwe, ro);</span><br><span class="line">    return rwe;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// Attach method lists and properties and protocols from categories to a class.</span><br><span class="line">// Assumes the categories in cats are all loaded and sorted by load order, </span><br><span class="line">// oldest categories first.</span><br><span class="line">static void</span><br><span class="line">attachCategories(Class cls, const locstamped_category_t *cats_list, uint32_t cats_count,</span><br><span class="line">                 int flags)</span><br><span class="line">&#123;</span><br><span class="line">    if (slowpath(PrintReplacedMethods)) &#123;</span><br><span class="line">        printReplacements(cls, cats_list, cats_count);</span><br><span class="line">    &#125;</span><br><span class="line">    if (slowpath(PrintConnecting)) &#123;</span><br><span class="line">        _objc_inform(&quot;CLASS: attaching %d categories to%s class &#x27;%s&#x27;%s&quot;,</span><br><span class="line">                     cats_count, (flags &amp; ATTACH_EXISTING) ? &quot; existing&quot; : &quot;&quot;,</span><br><span class="line">                     cls-&gt;nameForLogging(), (flags &amp; ATTACH_METACLASS) ? &quot; (meta)&quot; : &quot;&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /*</span><br><span class="line">     * Only a few classes have more than 64 categories during launch.</span><br><span class="line">     * This uses a little stack, and avoids malloc.</span><br><span class="line">     *</span><br><span class="line">     * Categories must be added in the proper order, which is back</span><br><span class="line">     * to front. To do that with the chunking, we iterate cats_list</span><br><span class="line">     * from front to back, build up the local buffers backwards,</span><br><span class="line">     * and call attachLists on the chunks. attachLists prepends the</span><br><span class="line">     * lists, so the final result is in the expected order.</span><br><span class="line">     */</span><br><span class="line">    constexpr uint32_t ATTACH_BUFSIZ = 64;</span><br><span class="line">    method_list_t   *mlists[ATTACH_BUFSIZ];</span><br><span class="line">    property_list_t *proplists[ATTACH_BUFSIZ];</span><br><span class="line">    protocol_list_t *protolists[ATTACH_BUFSIZ];</span><br><span class="line"></span><br><span class="line">    uint32_t mcount = 0;</span><br><span class="line">    uint32_t propcount = 0;</span><br><span class="line">    uint32_t protocount = 0;</span><br><span class="line">    bool fromBundle = NO;</span><br><span class="line">    bool isMeta = (flags &amp; ATTACH_METACLASS);</span><br><span class="line">    auto rwe = cls-&gt;data()-&gt;extAllocIfNeeded();</span><br><span class="line"></span><br><span class="line">    for (uint32_t i = 0; i &lt; cats_count; i++) &#123;</span><br><span class="line">        auto&amp; entry = cats_list[i];</span><br><span class="line"></span><br><span class="line">        method_list_t *mlist = entry.cat-&gt;methodsForMeta(isMeta);</span><br><span class="line">        if (mlist) &#123;</span><br><span class="line">            if (mcount == ATTACH_BUFSIZ) &#123;</span><br><span class="line">                prepareMethodLists(cls, mlists, mcount, NO, fromBundle, __func__);</span><br><span class="line">                rwe-&gt;methods.attachLists(mlists, mcount);</span><br><span class="line">                mcount = 0;</span><br><span class="line">            &#125;</span><br><span class="line">            mlists[ATTACH_BUFSIZ - ++mcount] = mlist;</span><br><span class="line">            fromBundle |= entry.hi-&gt;isBundle();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        property_list_t *proplist =</span><br><span class="line">            entry.cat-&gt;propertiesForMeta(isMeta, entry.hi);</span><br><span class="line">        if (proplist) &#123;</span><br><span class="line">            if (propcount == ATTACH_BUFSIZ) &#123;</span><br><span class="line">                rwe-&gt;properties.attachLists(proplists, propcount);</span><br><span class="line">                propcount = 0;</span><br><span class="line">            &#125;</span><br><span class="line">            proplists[ATTACH_BUFSIZ - ++propcount] = proplist;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        protocol_list_t *protolist = entry.cat-&gt;protocolsForMeta(isMeta);</span><br><span class="line">        if (protolist) &#123;</span><br><span class="line">            if (protocount == ATTACH_BUFSIZ) &#123;</span><br><span class="line">                rwe-&gt;protocols.attachLists(protolists, protocount);</span><br><span class="line">                protocount = 0;</span><br><span class="line">            &#125;</span><br><span class="line">            protolists[ATTACH_BUFSIZ - ++protocount] = protolist;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (mcount &gt; 0) &#123;</span><br><span class="line">        prepareMethodLists(cls, mlists + ATTACH_BUFSIZ - mcount, mcount,</span><br><span class="line">                           NO, fromBundle, __func__);</span><br><span class="line">        rwe-&gt;methods.attachLists(mlists + ATTACH_BUFSIZ - mcount, mcount);</span><br><span class="line">        if (flags &amp; ATTACH_EXISTING) &#123;</span><br><span class="line">            flushCaches(cls, __func__, [](Class c)&#123;</span><br><span class="line">                // constant caches have been dealt with in prepareMethodLists</span><br><span class="line">                // if the class still is constant here, it&#x27;s fine to keep</span><br><span class="line">                return !c-&gt;cache.isConstantOptimizedCache();</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    rwe-&gt;properties.attachLists(proplists + ATTACH_BUFSIZ - propcount, propcount);</span><br><span class="line"></span><br><span class="line">    rwe-&gt;protocols.attachLists(protolists + ATTACH_BUFSIZ - protocount, protocount);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* methodizeClass</span><br><span class="line">* Fixes up cls&#x27;s method list, protocol list, and property list.</span><br><span class="line">* Attaches any outstanding categories.</span><br><span class="line">* Locking: runtimeLock must be held by the caller</span><br><span class="line">**********************************************************************/</span><br><span class="line">static void methodizeClass(Class cls, Class previously)</span><br><span class="line">&#123;</span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line"></span><br><span class="line">    bool isMeta = cls-&gt;isMetaClass();</span><br><span class="line">    auto rw = cls-&gt;data();</span><br><span class="line">    auto ro = rw-&gt;ro();</span><br><span class="line">    auto rwe = rw-&gt;ext();</span><br><span class="line"></span><br><span class="line">    // Methodizing for the first time</span><br><span class="line">    if (PrintConnecting) &#123;</span><br><span class="line">        _objc_inform(&quot;CLASS: methodizing class &#x27;%s&#x27; %s&quot;, </span><br><span class="line">                     cls-&gt;nameForLogging(), isMeta ? &quot;(meta)&quot; : &quot;&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Install methods and properties that the class implements itself.</span><br><span class="line">    method_list_t *list = ro-&gt;baseMethods();</span><br><span class="line">    if (list) &#123;</span><br><span class="line">        prepareMethodLists(cls, &amp;list, 1, YES, isBundleClass(cls), nullptr);</span><br><span class="line">        if (rwe) rwe-&gt;methods.attachLists(&amp;list, 1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    property_list_t *proplist = ro-&gt;baseProperties;</span><br><span class="line">    if (rwe &amp;&amp; proplist) &#123;</span><br><span class="line">        rwe-&gt;properties.attachLists(&amp;proplist, 1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    protocol_list_t *protolist = ro-&gt;baseProtocols;</span><br><span class="line">    if (rwe &amp;&amp; protolist) &#123;</span><br><span class="line">        rwe-&gt;protocols.attachLists(&amp;protolist, 1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Root classes get bonus method implementations if they don&#x27;t have </span><br><span class="line">    // them already. These apply before category replacements.</span><br><span class="line">    if (cls-&gt;isRootMetaclass()) &#123;</span><br><span class="line">        // root metaclass</span><br><span class="line">        addMethod(cls, @selector(initialize), (IMP)&amp;objc_noop_imp, &quot;&quot;, NO);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Attach categories.</span><br><span class="line">    if (previously) &#123;</span><br><span class="line">        if (isMeta) &#123;</span><br><span class="line">            objc::unattachedCategories.attachToClass(cls, previously,</span><br><span class="line">                                                     ATTACH_METACLASS);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            // When a class relocates, categories with class methods</span><br><span class="line">            // may be registered on the class itself rather than on</span><br><span class="line">            // the metaclass. Tell attachToClass to look for those.</span><br><span class="line">            objc::unattachedCategories.attachToClass(cls, previously,</span><br><span class="line">                                                     ATTACH_CLASS_AND_METACLASS);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    objc::unattachedCategories.attachToClass(cls, cls,</span><br><span class="line">                                             isMeta ? ATTACH_METACLASS : ATTACH_CLASS);</span><br><span class="line"></span><br><span class="line">#if DEBUG</span><br><span class="line">    // Debug: sanity-check all SELs; log method list contents</span><br><span class="line">    for (const auto&amp; meth : rw-&gt;methods()) &#123;</span><br><span class="line">        if (PrintConnecting) &#123;</span><br><span class="line">            _objc_inform(&quot;METHOD %c[%s %s]&quot;, isMeta ? &#x27;+&#x27; : &#x27;-&#x27;, </span><br><span class="line">                         cls-&gt;nameForLogging(), sel_getName(meth.name()));</span><br><span class="line">        &#125;</span><br><span class="line">        ASSERT(sel_registerName(sel_getName(meth.name())) == meth.name());</span><br><span class="line">    &#125;</span><br><span class="line">#endif</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* nonMetaClasses</span><br><span class="line">* Returns the secondary metaclass =&gt; class map</span><br><span class="line">* Used for some cases of +initialize and +resolveClassMethod:.</span><br><span class="line">* This map does not contain all class and metaclass pairs. It only </span><br><span class="line">* contains metaclasses whose classes would be in the runtime-allocated </span><br><span class="line">* named-class table, but are not because some other class with the same name </span><br><span class="line">* is in that table.</span><br><span class="line">* Classes with no duplicates are not included.</span><br><span class="line">* Classes in the preoptimized named-class table are not included.</span><br><span class="line">* Classes whose duplicates are in the preoptimized table are not included.</span><br><span class="line">* Most code should use getMaybeUnrealizedNonMetaClass() </span><br><span class="line">* instead of reading this table.</span><br><span class="line">* Locking: runtimeLock must be read- or write-locked by the caller</span><br><span class="line">**********************************************************************/</span><br><span class="line">static NXMapTable *nonmeta_class_map = nil;</span><br><span class="line">static NXMapTable *nonMetaClasses(void)</span><br><span class="line">&#123;</span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line"></span><br><span class="line">    if (nonmeta_class_map) return nonmeta_class_map;</span><br><span class="line"></span><br><span class="line">    // nonmeta_class_map is typically small</span><br><span class="line">    INIT_ONCE_PTR(nonmeta_class_map, </span><br><span class="line">                  NXCreateMapTable(NXPtrValueMapPrototype, 32), </span><br><span class="line">                  NXFreeMapTable(v));</span><br><span class="line"></span><br><span class="line">    return nonmeta_class_map;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* addNonMetaClass</span><br><span class="line">* Adds metacls =&gt; cls to the secondary metaclass map</span><br><span class="line">* Locking: runtimeLock must be held by the caller</span><br><span class="line">**********************************************************************/</span><br><span class="line">static void addNonMetaClass(Class cls)</span><br><span class="line">&#123;</span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line">    void *old;</span><br><span class="line">    old = NXMapInsert(nonMetaClasses(), cls-&gt;ISA(), cls);</span><br><span class="line"></span><br><span class="line">    ASSERT(!cls-&gt;isMetaClassMaybeUnrealized());</span><br><span class="line">    ASSERT(cls-&gt;ISA()-&gt;isMetaClassMaybeUnrealized());</span><br><span class="line">    ASSERT(!old);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">static void removeNonMetaClass(Class cls)</span><br><span class="line">&#123;</span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line">    NXMapRemove(nonMetaClasses(), cls-&gt;ISA());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">static bool scanMangledField(const char *&amp;string, const char *end, </span><br><span class="line">                             const char *&amp;field, int&amp; length)</span><br><span class="line">&#123;</span><br><span class="line">    // Leading zero not allowed.</span><br><span class="line">    if (*string == &#x27;0&#x27;) return false;</span><br><span class="line"></span><br><span class="line">    length = 0;</span><br><span class="line">    field = string;</span><br><span class="line">    while (field &lt; end) &#123;</span><br><span class="line">        char c = *field;</span><br><span class="line">        if (!isdigit(c)) break;</span><br><span class="line">        field++;</span><br><span class="line">        if (__builtin_smul_overflow(length, 10, &amp;length)) return false;</span><br><span class="line">        if (__builtin_sadd_overflow(length, c - &#x27;0&#x27;, &amp;length)) return false;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    string = field + length;</span><br><span class="line">    return length &gt; 0  &amp;&amp;  string &lt;= end;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* copySwiftV1DemangledName</span><br><span class="line">* Returns the pretty form of the given Swift-v1-mangled class or protocol name. </span><br><span class="line">* Returns nil if the string doesn&#x27;t look like a mangled Swift v1 name.</span><br><span class="line">* The result must be freed with free().</span><br><span class="line">**********************************************************************/</span><br><span class="line">static char *copySwiftV1DemangledName(const char *string, bool isProtocol = false)</span><br><span class="line">&#123;</span><br><span class="line">    if (!string) return nil;</span><br><span class="line"></span><br><span class="line">    // Swift mangling prefix.</span><br><span class="line">    if (strncmp(string, isProtocol ? &quot;_TtP&quot; : &quot;_TtC&quot;, 4) != 0) return nil;</span><br><span class="line">    string += 4;</span><br><span class="line"></span><br><span class="line">    const char *end = string + strlen(string);</span><br><span class="line"></span><br><span class="line">    // Module name.</span><br><span class="line">    const char *prefix;</span><br><span class="line">    int prefixLength;</span><br><span class="line">    if (string[0] == &#x27;s&#x27;) &#123;</span><br><span class="line">        // &quot;s&quot; is the Swift module.</span><br><span class="line">        prefix = &quot;Swift&quot;;</span><br><span class="line">        prefixLength = 5;</span><br><span class="line">        string += 1;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        if (! scanMangledField(string, end, prefix, prefixLength)) return nil;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Class or protocol name.</span><br><span class="line">    const char *suffix;</span><br><span class="line">    int suffixLength;</span><br><span class="line">    if (! scanMangledField(string, end, suffix, suffixLength)) return nil;</span><br><span class="line"></span><br><span class="line">    if (isProtocol) &#123;</span><br><span class="line">        // Remainder must be &quot;_&quot;.</span><br><span class="line">        if (strcmp(string, &quot;_&quot;) != 0) return nil;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        // Remainder must be empty.</span><br><span class="line">        if (string != end) return nil;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    char *result;</span><br><span class="line">    asprintf(&amp;result, &quot;%.*s.%.*s&quot;, prefixLength,prefix, suffixLength,suffix);</span><br><span class="line">    return result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* copySwiftV1MangledName</span><br><span class="line">* Returns the Swift 1.0 mangled form of the given class or protocol name. </span><br><span class="line">* Returns nil if the string doesn&#x27;t look like an unmangled Swift name.</span><br><span class="line">* The result must be freed with free().</span><br><span class="line">**********************************************************************/</span><br><span class="line">static char *copySwiftV1MangledName(const char *string, bool isProtocol = false)</span><br><span class="line">&#123;</span><br><span class="line">    if (!string) return nil;</span><br><span class="line"></span><br><span class="line">    size_t dotCount = 0;</span><br><span class="line">    size_t dotIndex;</span><br><span class="line">    const char *s;</span><br><span class="line">    for (s = string; *s; s++) &#123;</span><br><span class="line">        if (*s == &#x27;.&#x27;) &#123;</span><br><span class="line">            dotCount++;</span><br><span class="line">            dotIndex = s - string;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    size_t stringLength = s - string;</span><br><span class="line"></span><br><span class="line">    if (dotCount != 1  ||  dotIndex == 0  ||  dotIndex &gt;= stringLength-1) &#123;</span><br><span class="line">        return nil;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    const char *prefix = string;</span><br><span class="line">    size_t prefixLength = dotIndex;</span><br><span class="line">    const char *suffix = string + dotIndex + 1;</span><br><span class="line">    size_t suffixLength = stringLength - (dotIndex + 1);</span><br><span class="line">    </span><br><span class="line">    char *name;</span><br><span class="line"></span><br><span class="line">    if (prefixLength == 5  &amp;&amp;  memcmp(prefix, &quot;Swift&quot;, 5) == 0) &#123;</span><br><span class="line">        asprintf(&amp;name, &quot;_Tt%cs%zu%.*s%s&quot;, </span><br><span class="line">                 isProtocol ? &#x27;P&#x27; : &#x27;C&#x27;, </span><br><span class="line">                 suffixLength, (int)suffixLength, suffix, </span><br><span class="line">                 isProtocol ? &quot;_&quot; : &quot;&quot;);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        asprintf(&amp;name, &quot;_Tt%c%zu%.*s%zu%.*s%s&quot;, </span><br><span class="line">                 isProtocol ? &#x27;P&#x27; : &#x27;C&#x27;, </span><br><span class="line">                 prefixLength, (int)prefixLength, prefix, </span><br><span class="line">                 suffixLength, (int)suffixLength, suffix, </span><br><span class="line">                 isProtocol ? &quot;_&quot; : &quot;&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    return name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* getClassExceptSomeSwift</span><br><span class="line">* Looks up a class by name. The class MIGHT NOT be realized.</span><br><span class="line">* Demangled Swift names are recognized.</span><br><span class="line">* Classes known to the Swift runtime but not yet used are NOT recognized.</span><br><span class="line">*   (such as subclasses of un-instantiated generics)</span><br><span class="line">* Use look_up_class() to find them as well.</span><br><span class="line">* Locking: runtimeLock must be read- or write-locked by the caller.</span><br><span class="line">**********************************************************************/</span><br><span class="line"></span><br><span class="line">// This is a misnomer: gdb_objc_realized_classes is actually a list of </span><br><span class="line">// named classes not in the dyld shared cache, whether realized or not.</span><br><span class="line">// This list excludes lazily named classes, which have to be looked up</span><br><span class="line">// using a getClass hook.</span><br><span class="line">NXMapTable *gdb_objc_realized_classes;  // exported for debuggers in objc-gdb.h</span><br><span class="line">uintptr_t objc_debug_realized_class_generation_count;</span><br><span class="line"></span><br><span class="line">static Class getClass_impl(const char *name)</span><br><span class="line">&#123;</span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line"></span><br><span class="line">    // allocated in _read_images</span><br><span class="line">    ASSERT(gdb_objc_realized_classes);</span><br><span class="line"></span><br><span class="line">    // Try runtime-allocated table</span><br><span class="line">    Class result = (Class)NXMapGet(gdb_objc_realized_classes, name);</span><br><span class="line">    if (result) return result;</span><br><span class="line"></span><br><span class="line">    // Try table from dyld shared cache.</span><br><span class="line">    // Note we do this last to handle the case where we dlopen&#x27;ed a shared cache</span><br><span class="line">    // dylib with duplicates of classes already present in the main executable.</span><br><span class="line">    // In that case, we put the class from the main executable in</span><br><span class="line">    // gdb_objc_realized_classes and want to check that before considering any</span><br><span class="line">    // newly loaded shared cache binaries.</span><br><span class="line">    return getPreoptimizedClass(name);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">static Class getClassExceptSomeSwift(const char *name)</span><br><span class="line">&#123;</span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line"></span><br><span class="line">    // Try name as-is</span><br><span class="line">    Class result = getClass_impl(name);</span><br><span class="line">    if (result) return result;</span><br><span class="line"></span><br><span class="line">    // Try Swift-mangled equivalent of the given name.</span><br><span class="line">    if (char *swName = copySwiftV1MangledName(name)) &#123;</span><br><span class="line">        result = getClass_impl(swName);</span><br><span class="line">        free(swName);</span><br><span class="line">        return result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return nil;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* addNamedClass</span><br><span class="line">* Adds name =&gt; cls to the named non-meta class map.</span><br><span class="line">* Warns about duplicate class names and keeps the old mapping.</span><br><span class="line">* Locking: runtimeLock must be held by the caller</span><br><span class="line">**********************************************************************/</span><br><span class="line">static void addNamedClass(Class cls, const char *name, Class replacing = nil)</span><br><span class="line">&#123;</span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line">    Class old;</span><br><span class="line">    if ((old = getClassExceptSomeSwift(name))  &amp;&amp;  old != replacing) &#123;</span><br><span class="line">        inform_duplicate(name, old, cls);</span><br><span class="line"></span><br><span class="line">        // getMaybeUnrealizedNonMetaClass uses name lookups.</span><br><span class="line">        // Classes not found by name lookup must be in the</span><br><span class="line">        // secondary meta-&gt;nonmeta table.</span><br><span class="line">        addNonMetaClass(cls);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        NXMapInsert(gdb_objc_realized_classes, name, cls);</span><br><span class="line">    &#125;</span><br><span class="line">    ASSERT(!(cls-&gt;data()-&gt;flags &amp; RO_META));</span><br><span class="line"></span><br><span class="line">    // wrong: constructed classes are already realized when they get here</span><br><span class="line">    // ASSERT(!cls-&gt;isRealized());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* removeNamedClass</span><br><span class="line">* Removes cls from the name =&gt; cls map.</span><br><span class="line">* Locking: runtimeLock must be held by the caller</span><br><span class="line">**********************************************************************/</span><br><span class="line">static void removeNamedClass(Class cls, const char *name)</span><br><span class="line">&#123;</span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line">    ASSERT(!(cls-&gt;data()-&gt;flags &amp; RO_META));</span><br><span class="line">    if (cls == NXMapGet(gdb_objc_realized_classes, name)) &#123;</span><br><span class="line">        NXMapRemove(gdb_objc_realized_classes, name);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        // cls has a name collision with another class - don&#x27;t remove the other</span><br><span class="line">        // but do remove cls from the secondary metaclass-&gt;class map.</span><br><span class="line">        removeNonMetaClass(cls);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* futureNamedClasses</span><br><span class="line">* Returns the classname =&gt; future class map for unrealized future classes.</span><br><span class="line">* Locking: runtimeLock must be held by the caller</span><br><span class="line">**********************************************************************/</span><br><span class="line">static NXMapTable *future_named_class_map = nil;</span><br><span class="line">static NXMapTable *futureNamedClasses()</span><br><span class="line">&#123;</span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line">    </span><br><span class="line">    if (future_named_class_map) return future_named_class_map;</span><br><span class="line"></span><br><span class="line">    // future_named_class_map is big enough for CF&#x27;s classes and a few others</span><br><span class="line">    future_named_class_map = </span><br><span class="line">        NXCreateMapTable(NXStrValueMapPrototype, 32);</span><br><span class="line"></span><br><span class="line">    return future_named_class_map;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">static bool haveFutureNamedClasses() &#123;</span><br><span class="line">    return future_named_class_map  &amp;&amp;  NXCountMapTable(future_named_class_map);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* addFutureNamedClass</span><br><span class="line">* Installs cls as the class structure to use for the named class if it appears.</span><br><span class="line">* Locking: runtimeLock must be held by the caller</span><br><span class="line">**********************************************************************/</span><br><span class="line">static void addFutureNamedClass(const char *name, Class cls)</span><br><span class="line">&#123;</span><br><span class="line">    void *old;</span><br><span class="line"></span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line"></span><br><span class="line">    if (PrintFuture) &#123;</span><br><span class="line">        _objc_inform(&quot;FUTURE: reserving %p for %s&quot;, (void*)cls, name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    class_rw_t *rw = objc::zalloc&lt;class_rw_t&gt;();</span><br><span class="line">    class_ro_t *ro = (class_ro_t *)calloc(sizeof(class_ro_t), 1);</span><br><span class="line">    ro-&gt;name.store(strdupIfMutable(name), std::memory_order_relaxed);</span><br><span class="line">    rw-&gt;set_ro(ro);</span><br><span class="line">    cls-&gt;setData(rw);</span><br><span class="line">    cls-&gt;data()-&gt;flags = RO_FUTURE;</span><br><span class="line"></span><br><span class="line">    old = NXMapKeyCopyingInsert(futureNamedClasses(), name, cls);</span><br><span class="line">    ASSERT(!old);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* popFutureNamedClass</span><br><span class="line">* Removes the named class from the unrealized future class list, </span><br><span class="line">* because it has been realized.</span><br><span class="line">* Returns nil if the name is not used by a future class.</span><br><span class="line">* Locking: runtimeLock must be held by the caller</span><br><span class="line">**********************************************************************/</span><br><span class="line">static Class popFutureNamedClass(const char *name)</span><br><span class="line">&#123;</span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line"></span><br><span class="line">    Class cls = nil;</span><br><span class="line"></span><br><span class="line">    if (future_named_class_map) &#123;</span><br><span class="line">        cls = (Class)NXMapKeyFreeingRemove(future_named_class_map, name);</span><br><span class="line">        if (cls &amp;&amp; NXCountMapTable(future_named_class_map) == 0) &#123;</span><br><span class="line">            NXFreeMapTable(future_named_class_map);</span><br><span class="line">            future_named_class_map = nil;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return cls;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* remappedClasses</span><br><span class="line">* Returns the oldClass =&gt; newClass map for realized future classes.</span><br><span class="line">* Returns the oldClass =&gt; nil map for ignored weak-linked classes.</span><br><span class="line">* Locking: runtimeLock must be read- or write-locked by the caller</span><br><span class="line">**********************************************************************/</span><br><span class="line">static objc::DenseMap&lt;Class, Class&gt; *remappedClasses(bool create)</span><br><span class="line">&#123;</span><br><span class="line">    static objc::LazyInitDenseMap&lt;Class, Class&gt; remapped_class_map;</span><br><span class="line"></span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line"></span><br><span class="line">    // start big enough to hold CF&#x27;s classes and a few others</span><br><span class="line">    return remapped_class_map.get(create, 32);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* noClassesRemapped</span><br><span class="line">* Returns YES if no classes have been remapped</span><br><span class="line">* Locking: runtimeLock must be read- or write-locked by the caller</span><br><span class="line">**********************************************************************/</span><br><span class="line">static bool noClassesRemapped(void)</span><br><span class="line">&#123;</span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line"></span><br><span class="line">    bool result = (remappedClasses(NO) == nil);</span><br><span class="line">#if DEBUG</span><br><span class="line">    // Catch construction of an empty table, which defeats optimization.</span><br><span class="line">    auto *map = remappedClasses(NO);</span><br><span class="line">    if (map) ASSERT(map-&gt;size() &gt; 0);</span><br><span class="line">#endif</span><br><span class="line">    return result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* addRemappedClass</span><br><span class="line">* newcls is a realized future class, replacing oldcls.</span><br><span class="line">* OR newcls is nil, replacing ignored weak-linked class oldcls.</span><br><span class="line">* Locking: runtimeLock must be write-locked by the caller</span><br><span class="line">**********************************************************************/</span><br><span class="line">static void addRemappedClass(Class oldcls, Class newcls)</span><br><span class="line">&#123;</span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line"></span><br><span class="line">    if (PrintFuture) &#123;</span><br><span class="line">        _objc_inform(&quot;FUTURE: using %p instead of %p for %s&quot;, </span><br><span class="line">                     (void*)newcls, (void*)oldcls, oldcls-&gt;nameForLogging());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    auto result = remappedClasses(YES)-&gt;insert(&#123; oldcls, newcls &#125;);</span><br><span class="line">#if DEBUG</span><br><span class="line">    if (!std::get&lt;1&gt;(result)) &#123;</span><br><span class="line">        // An existing mapping was overwritten. This is not allowed</span><br><span class="line">        // unless it was to nil.</span><br><span class="line">        auto iterator = std::get&lt;0&gt;(result);</span><br><span class="line">        auto value = std::get&lt;1&gt;(*iterator);</span><br><span class="line">        ASSERT(value == nil);</span><br><span class="line">    &#125;</span><br><span class="line">#else</span><br><span class="line">    (void)result;</span><br><span class="line">#endif</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* remapClass</span><br><span class="line">* Returns the live class pointer for cls, which may be pointing to </span><br><span class="line">* a class struct that has been reallocated.</span><br><span class="line">* Returns nil if cls is ignored because of weak linking.</span><br><span class="line">* Locking: runtimeLock must be read- or write-locked by the caller</span><br><span class="line">**********************************************************************/</span><br><span class="line">static Class remapClass(Class cls)</span><br><span class="line">&#123;</span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line"></span><br><span class="line">    if (!cls) return nil;</span><br><span class="line"></span><br><span class="line">    auto *map = remappedClasses(NO);</span><br><span class="line">    if (!map)</span><br><span class="line">        return cls;</span><br><span class="line">    </span><br><span class="line">    auto iterator = map-&gt;find(cls);</span><br><span class="line">    if (iterator == map-&gt;end())</span><br><span class="line">        return cls;</span><br><span class="line">    return std::get&lt;1&gt;(*iterator);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">static Class remapClass(classref_t cls)</span><br><span class="line">&#123;</span><br><span class="line">    return remapClass((Class)cls);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Class _class_remap(Class cls)</span><br><span class="line">&#123;</span><br><span class="line">    mutex_locker_t lock(runtimeLock);</span><br><span class="line">    return remapClass(cls);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* remapClassRef</span><br><span class="line">* Fix up a class ref, in case the class referenced has been reallocated </span><br><span class="line">* or is an ignored weak-linked class.</span><br><span class="line">* Locking: runtimeLock must be read- or write-locked by the caller</span><br><span class="line">**********************************************************************/</span><br><span class="line">static void remapClassRef(Class *clsref)</span><br><span class="line">&#123;</span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line"></span><br><span class="line">    Class newcls = remapClass(*clsref);    </span><br><span class="line">    if (*clsref != newcls) *clsref = newcls;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">_Nullable Class</span><br><span class="line">objc_loadClassref(_Nullable Class * _Nonnull clsref)</span><br><span class="line">&#123;</span><br><span class="line">    auto *atomicClsref = explicit_atomic&lt;uintptr_t&gt;::from_pointer((uintptr_t *)clsref);</span><br><span class="line">    </span><br><span class="line">    uintptr_t cls = atomicClsref-&gt;load(std::memory_order_relaxed);</span><br><span class="line">    if (fastpath((cls &amp; 1) == 0))</span><br><span class="line">        return (Class)cls;</span><br><span class="line">    </span><br><span class="line">    auto stub = (stub_class_t *)(cls &amp; ~1ULL);</span><br><span class="line">    Class initialized = stub-&gt;initializer((Class)stub, nil);</span><br><span class="line">    atomicClsref-&gt;store((uintptr_t)initialized, std::memory_order_relaxed);</span><br><span class="line">    return initialized;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* getMaybeUnrealizedNonMetaClass</span><br><span class="line">* Return the ordinary class for this class or metaclass. </span><br><span class="line">* `inst` is an instance of `cls` or a subclass thereof, or nil. </span><br><span class="line">* Non-nil inst is faster.</span><br><span class="line">* The result may be unrealized.</span><br><span class="line">* Used by +initialize. </span><br><span class="line">* Locking: runtimeLock must be read- or write-locked by the caller</span><br><span class="line">**********************************************************************/</span><br><span class="line">static Class getMaybeUnrealizedNonMetaClass(Class metacls, id inst)</span><br><span class="line">&#123;</span><br><span class="line">    static int total, named, secondary, sharedcache, dyld3;</span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line">    ASSERT(metacls-&gt;isRealized());</span><br><span class="line"></span><br><span class="line">    total++;</span><br><span class="line"></span><br><span class="line">    // return cls itself if it&#x27;s already a non-meta class</span><br><span class="line">    if (!metacls-&gt;isMetaClass()) return metacls;</span><br><span class="line"></span><br><span class="line">    // metacls really is a metaclass</span><br><span class="line">    // which means inst (if any) is a class</span><br><span class="line"></span><br><span class="line">    // special case for root metaclass</span><br><span class="line">    // where inst == inst-&gt;ISA() == metacls is possible</span><br><span class="line">    if (metacls-&gt;ISA() == metacls) &#123;</span><br><span class="line">        Class cls = metacls-&gt;getSuperclass();</span><br><span class="line">        ASSERT(cls-&gt;isRealized());</span><br><span class="line">        ASSERT(!cls-&gt;isMetaClass());</span><br><span class="line">        ASSERT(cls-&gt;ISA() == metacls);</span><br><span class="line">        if (cls-&gt;ISA() == metacls) return cls;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // use inst if available</span><br><span class="line">    if (inst) &#123;</span><br><span class="line">        Class cls = remapClass((Class)inst);</span><br><span class="line">        // cls may be a subclass - find the real class for metacls</span><br><span class="line">        // fixme this probably stops working once Swift starts</span><br><span class="line">        // reallocating classes if cls is unrealized.</span><br><span class="line">        while (cls) &#123;</span><br><span class="line">            if (cls-&gt;ISA() == metacls) &#123;</span><br><span class="line">                ASSERT(!cls-&gt;isMetaClassMaybeUnrealized());</span><br><span class="line">                return cls;</span><br><span class="line">            &#125;</span><br><span class="line">            cls = cls-&gt;getSuperclass();</span><br><span class="line">        &#125;</span><br><span class="line">#if DEBUG</span><br><span class="line">        _objc_fatal(&quot;cls is not an instance of metacls&quot;);</span><br><span class="line">#else</span><br><span class="line">        // release build: be forgiving and fall through to slow lookups</span><br><span class="line">#endif</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // See if the metaclass has a pointer to its nonmetaclass.</span><br><span class="line">    if (Class cls = metacls-&gt;bits.safe_ro()-&gt;getNonMetaclass())</span><br><span class="line">        return cls;</span><br><span class="line"></span><br><span class="line">    // try name lookup</span><br><span class="line">    &#123;</span><br><span class="line">        Class cls = getClassExceptSomeSwift(metacls-&gt;mangledName());</span><br><span class="line">        if (cls &amp;&amp; cls-&gt;ISA() == metacls) &#123;</span><br><span class="line">            named++;</span><br><span class="line">            if (PrintInitializing) &#123;</span><br><span class="line">                _objc_inform(&quot;INITIALIZE: %d/%d (%g%%) &quot;</span><br><span class="line">                             &quot;successful by-name metaclass lookups&quot;,</span><br><span class="line">                             named, total, named*100.0/total);</span><br><span class="line">            &#125;</span><br><span class="line">            return cls;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // try secondary table</span><br><span class="line">    &#123;</span><br><span class="line">        Class cls = (Class)NXMapGet(nonMetaClasses(), metacls);</span><br><span class="line">        if (cls) &#123;</span><br><span class="line">            secondary++;</span><br><span class="line">            if (PrintInitializing) &#123;</span><br><span class="line">                _objc_inform(&quot;INITIALIZE: %d/%d (%g%%) &quot;</span><br><span class="line">                             &quot;successful secondary metaclass lookups&quot;,</span><br><span class="line">                             secondary, total, secondary*100.0/total);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            ASSERT(cls-&gt;ISA() == metacls);            </span><br><span class="line">            return cls;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // try the dyld closure table</span><br><span class="line">    if (isPreoptimized())</span><br><span class="line">    &#123;</span><br><span class="line">        // Try table from dyld closure first.  It was built to ignore the dupes it</span><br><span class="line">        // knows will come from the cache, so anything left in here was there when</span><br><span class="line">        // we launched</span><br><span class="line">        Class cls = nil;</span><br><span class="line">        // Note, we have to pass the lambda directly here as otherwise we would try</span><br><span class="line">        // message copy and autorelease.</span><br><span class="line">        _dyld_for_each_objc_class(metacls-&gt;mangledName(),</span><br><span class="line">                                  [&amp;cls, metacls](void* classPtr, bool isLoaded, bool* stop) &#123;</span><br><span class="line">          // Skip images which aren&#x27;t loaded.  This supports the case where dyld</span><br><span class="line">          // might soft link an image from the main binary so its possibly not</span><br><span class="line">          // loaded yet.</span><br><span class="line">          if (!isLoaded)</span><br><span class="line">            return;</span><br><span class="line"></span><br><span class="line">          // Found a loaded image with this class name, so check if its the right one</span><br><span class="line">          Class result = (Class)classPtr;</span><br><span class="line">          if (result-&gt;ISA() == metacls) &#123;</span><br><span class="line">              cls = result;</span><br><span class="line">              *stop = true;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        if (cls) &#123;</span><br><span class="line">            dyld3++;</span><br><span class="line">            if (PrintInitializing) &#123;</span><br><span class="line">                _objc_inform(&quot;INITIALIZE: %d/%d (%g%%) &quot;</span><br><span class="line">                             &quot;successful dyld closure metaclass lookups&quot;,</span><br><span class="line">                             dyld3, total, dyld3*100.0/total);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            return cls;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // try any duplicates in the dyld shared cache</span><br><span class="line">    &#123;</span><br><span class="line">        Class cls = nil;</span><br><span class="line"></span><br><span class="line">        int count;</span><br><span class="line">        Class *classes = copyPreoptimizedClasses(metacls-&gt;mangledName(),&amp;count);</span><br><span class="line">        if (classes) &#123;</span><br><span class="line">            for (int i = 0; i &lt; count; i++) &#123;</span><br><span class="line">                if (classes[i]-&gt;ISA() == metacls) &#123;</span><br><span class="line">                    cls = classes[i];</span><br><span class="line">                    break;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            free(classes);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if (cls) &#123;</span><br><span class="line">            sharedcache++;</span><br><span class="line">            if (PrintInitializing) &#123;</span><br><span class="line">                _objc_inform(&quot;INITIALIZE: %d/%d (%g%%) &quot;</span><br><span class="line">                             &quot;successful shared cache metaclass lookups&quot;,</span><br><span class="line">                             sharedcache, total, sharedcache*100.0/total);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            return cls;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    _objc_fatal(&quot;no class for metaclass %p&quot;, (void*)metacls);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* class_initialize.  Send the &#x27;+initialize&#x27; message on demand to any</span><br><span class="line">* uninitialized class. Force initialization of superclasses first.</span><br><span class="line">* inst is an instance of cls, or nil. Non-nil is better for performance.</span><br><span class="line">* Returns the class pointer. If the class was unrealized then </span><br><span class="line">* it may be reallocated.</span><br><span class="line">* Locking: </span><br><span class="line">*   runtimeLock must be held by the caller</span><br><span class="line">*   This function may drop the lock.</span><br><span class="line">*   On exit the lock is re-acquired or dropped as requested by leaveLocked.</span><br><span class="line">**********************************************************************/</span><br><span class="line">static Class initializeAndMaybeRelock(Class cls, id inst,</span><br><span class="line">                                      mutex_t&amp; lock, bool leaveLocked)</span><br><span class="line">&#123;</span><br><span class="line">    lock.assertLocked();</span><br><span class="line">    ASSERT(cls-&gt;isRealized());</span><br><span class="line"></span><br><span class="line">    if (cls-&gt;isInitialized()) &#123;</span><br><span class="line">        if (!leaveLocked) lock.unlock();</span><br><span class="line">        return cls;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Find the non-meta class for cls, if it is not already one.</span><br><span class="line">    // The +initialize message is sent to the non-meta class object.</span><br><span class="line">    Class nonmeta = getMaybeUnrealizedNonMetaClass(cls, inst);</span><br><span class="line"></span><br><span class="line">    // Realize the non-meta class if necessary.</span><br><span class="line">    if (nonmeta-&gt;isRealized()) &#123;</span><br><span class="line">        // nonmeta is cls, which was already realized</span><br><span class="line">        // OR nonmeta is distinct, but is already realized</span><br><span class="line">        // - nothing else to do</span><br><span class="line">        lock.unlock();</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        nonmeta = realizeClassMaybeSwiftAndUnlock(nonmeta, lock);</span><br><span class="line">        // runtimeLock is now unlocked</span><br><span class="line">        // fixme Swift can&#x27;t relocate the class today,</span><br><span class="line">        // but someday it will:</span><br><span class="line">        cls = object_getClass(nonmeta);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // runtimeLock is now unlocked, for +initialize dispatch</span><br><span class="line">    ASSERT(nonmeta-&gt;isRealized());</span><br><span class="line">    initializeNonMetaClass(nonmeta);</span><br><span class="line"></span><br><span class="line">    if (leaveLocked) runtimeLock.lock();</span><br><span class="line">    return cls;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// Locking: acquires runtimeLock</span><br><span class="line">Class class_initialize(Class cls, id obj)</span><br><span class="line">&#123;</span><br><span class="line">    runtimeLock.lock();</span><br><span class="line">    return initializeAndMaybeRelock(cls, obj, runtimeLock, false);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// Locking: caller must hold runtimeLock; this may drop and re-acquire it</span><br><span class="line">static Class initializeAndLeaveLocked(Class cls, id obj, mutex_t&amp; lock)</span><br><span class="line">&#123;</span><br><span class="line">    return initializeAndMaybeRelock(cls, obj, lock, true);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* addRootClass</span><br><span class="line">* Adds cls as a new realized root class.</span><br><span class="line">* Locking: runtimeLock must be held by the caller.</span><br><span class="line">**********************************************************************/</span><br><span class="line">static void addRootClass(Class cls)</span><br><span class="line">&#123;</span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line"></span><br><span class="line">    ASSERT(cls-&gt;isRealized());</span><br><span class="line"></span><br><span class="line">    objc_debug_realized_class_generation_count++;</span><br><span class="line">    </span><br><span class="line">    cls-&gt;data()-&gt;nextSiblingClass = _firstRealizedClass;</span><br><span class="line">    _firstRealizedClass = cls;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">static void removeRootClass(Class cls)</span><br><span class="line">&#123;</span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line"></span><br><span class="line">    objc_debug_realized_class_generation_count++;</span><br><span class="line">    </span><br><span class="line">    Class *classp;</span><br><span class="line">    for (classp = &amp;_firstRealizedClass; </span><br><span class="line">         *classp != cls; </span><br><span class="line">         classp = &amp;(*classp)-&gt;data()-&gt;nextSiblingClass)</span><br><span class="line">    &#123; &#125;</span><br><span class="line">    </span><br><span class="line">    *classp = (*classp)-&gt;data()-&gt;nextSiblingClass;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* addSubclass</span><br><span class="line">* Adds subcls as a subclass of supercls.</span><br><span class="line">* Locking: runtimeLock must be held by the caller.</span><br><span class="line">**********************************************************************/</span><br><span class="line">static void addSubclass(Class supercls, Class subcls)</span><br><span class="line">&#123;</span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line"></span><br><span class="line">    if (supercls  &amp;&amp;  subcls) &#123;</span><br><span class="line">        ASSERT(supercls-&gt;isRealized());</span><br><span class="line">        ASSERT(subcls-&gt;isRealized());</span><br><span class="line"></span><br><span class="line">        objc_debug_realized_class_generation_count++;</span><br><span class="line">        </span><br><span class="line">        subcls-&gt;data()-&gt;nextSiblingClass = supercls-&gt;data()-&gt;firstSubclass;</span><br><span class="line">        supercls-&gt;data()-&gt;firstSubclass = subcls;</span><br><span class="line"></span><br><span class="line">        if (supercls-&gt;hasCxxCtor()) &#123;</span><br><span class="line">            subcls-&gt;setHasCxxCtor();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if (supercls-&gt;hasCxxDtor()) &#123;</span><br><span class="line">            subcls-&gt;setHasCxxDtor();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        objc::AWZScanner::scanAddedSubClass(subcls, supercls);</span><br><span class="line">        objc::RRScanner::scanAddedSubClass(subcls, supercls);</span><br><span class="line">        objc::CoreScanner::scanAddedSubClass(subcls, supercls);</span><br><span class="line"></span><br><span class="line">        if (!supercls-&gt;allowsPreoptCaches()) &#123;</span><br><span class="line">            subcls-&gt;setDisallowPreoptCachesRecursively(__func__);</span><br><span class="line">        &#125; else if (!supercls-&gt;allowsPreoptInlinedSels()) &#123;</span><br><span class="line">            subcls-&gt;setDisallowPreoptInlinedSelsRecursively(__func__);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // Special case: instancesRequireRawIsa does not propagate</span><br><span class="line">        // from root class to root metaclass</span><br><span class="line">        if (supercls-&gt;instancesRequireRawIsa()  &amp;&amp;  supercls-&gt;getSuperclass()) &#123;</span><br><span class="line">            subcls-&gt;setInstancesRequireRawIsaRecursively(true);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* removeSubclass</span><br><span class="line">* Removes subcls as a subclass of supercls.</span><br><span class="line">* Locking: runtimeLock must be held by the caller.</span><br><span class="line">**********************************************************************/</span><br><span class="line">static void removeSubclass(Class supercls, Class subcls)</span><br><span class="line">&#123;</span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line">    ASSERT(supercls-&gt;isRealized());</span><br><span class="line">    ASSERT(subcls-&gt;isRealized());</span><br><span class="line">    ASSERT(subcls-&gt;getSuperclass() == supercls);</span><br><span class="line"></span><br><span class="line">    objc_debug_realized_class_generation_count++;</span><br><span class="line">    </span><br><span class="line">    Class *cp;</span><br><span class="line">    for (cp = &amp;supercls-&gt;data()-&gt;firstSubclass; </span><br><span class="line">         *cp  &amp;&amp;  *cp != subcls; </span><br><span class="line">         cp = &amp;(*cp)-&gt;data()-&gt;nextSiblingClass)</span><br><span class="line">        ;</span><br><span class="line">    ASSERT(*cp == subcls);</span><br><span class="line">    *cp = subcls-&gt;data()-&gt;nextSiblingClass;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* protocols</span><br><span class="line">* Returns the protocol name =&gt; protocol map for protocols.</span><br><span class="line">* Locking: runtimeLock must read- or write-locked by the caller</span><br><span class="line">**********************************************************************/</span><br><span class="line">static NXMapTable *protocols(void)</span><br><span class="line">&#123;</span><br><span class="line">    static NXMapTable *protocol_map = nil;</span><br><span class="line">    </span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line"></span><br><span class="line">    INIT_ONCE_PTR(protocol_map, </span><br><span class="line">                  NXCreateMapTable(NXStrValueMapPrototype, 16), </span><br><span class="line">                  NXFreeMapTable(v) );</span><br><span class="line"></span><br><span class="line">    return protocol_map;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* getProtocol</span><br><span class="line">* Looks up a protocol by name. Demangled Swift names are recognized.</span><br><span class="line">* Locking: runtimeLock must be read- or write-locked by the caller.</span><br><span class="line">**********************************************************************/</span><br><span class="line">static NEVER_INLINE Protocol *getProtocol(const char *name)</span><br><span class="line">&#123;</span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line"></span><br><span class="line">    // Try name as-is.</span><br><span class="line">    Protocol *result = (Protocol *)NXMapGet(protocols(), name);</span><br><span class="line">    if (result) return result;</span><br><span class="line"></span><br><span class="line">    // Try table from dyld3 closure and dyld shared cache</span><br><span class="line">    result = getPreoptimizedProtocol(name);</span><br><span class="line">    if (result) return result;</span><br><span class="line"></span><br><span class="line">    // Try Swift-mangled equivalent of the given name.</span><br><span class="line">    if (char *swName = copySwiftV1MangledName(name, true/*isProtocol*/)) &#123;</span><br><span class="line">        result = (Protocol *)NXMapGet(protocols(), swName);</span><br><span class="line"></span><br><span class="line">        // Try table from dyld3 closure and dyld shared cache</span><br><span class="line">        if (!result)</span><br><span class="line">            result = getPreoptimizedProtocol(swName);</span><br><span class="line"></span><br><span class="line">        free(swName);</span><br><span class="line">        return result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return nullptr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* remapProtocol</span><br><span class="line">* Returns the live protocol pointer for proto, which may be pointing to </span><br><span class="line">* a protocol struct that has been reallocated.</span><br><span class="line">* Locking: runtimeLock must be read- or write-locked by the caller</span><br><span class="line">**********************************************************************/</span><br><span class="line">static ALWAYS_INLINE protocol_t *remapProtocol(protocol_ref_t proto)</span><br><span class="line">&#123;</span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line"></span><br><span class="line">    // Protocols in shared cache images have a canonical bit to mark that they</span><br><span class="line">    // are the definition we should use</span><br><span class="line">    if (((protocol_t *)proto)-&gt;isCanonical())</span><br><span class="line">        return (protocol_t *)proto;</span><br><span class="line"></span><br><span class="line">    protocol_t *newproto = (protocol_t *)</span><br><span class="line">        getProtocol(((protocol_t *)proto)-&gt;mangledName);</span><br><span class="line">    return newproto ? newproto : (protocol_t *)proto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* remapProtocolRef</span><br><span class="line">* Fix up a protocol ref, in case the protocol referenced has been reallocated.</span><br><span class="line">* Locking: runtimeLock must be read- or write-locked by the caller</span><br><span class="line">**********************************************************************/</span><br><span class="line">static size_t UnfixedProtocolReferences;</span><br><span class="line">static void remapProtocolRef(protocol_t **protoref)</span><br><span class="line">&#123;</span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line"></span><br><span class="line">    protocol_t *newproto = remapProtocol((protocol_ref_t)*protoref);</span><br><span class="line">    if (*protoref != newproto) &#123;</span><br><span class="line">        *protoref = newproto;</span><br><span class="line">        UnfixedProtocolReferences++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* moveIvars</span><br><span class="line">* Slides a class&#x27;s ivars to accommodate the given superclass size.</span><br><span class="line">* Ivars are NOT compacted to compensate for a superclass that shrunk.</span><br><span class="line">* Locking: runtimeLock must be held by the caller.</span><br><span class="line">**********************************************************************/</span><br><span class="line">static void moveIvars(class_ro_t *ro, uint32_t superSize)</span><br><span class="line">&#123;</span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line"></span><br><span class="line">    uint32_t diff;</span><br><span class="line"></span><br><span class="line">    ASSERT(superSize &gt; ro-&gt;instanceStart);</span><br><span class="line">    diff = superSize - ro-&gt;instanceStart;</span><br><span class="line"></span><br><span class="line">    if (ro-&gt;ivars) &#123;</span><br><span class="line">        // Find maximum alignment in this class&#x27;s ivars</span><br><span class="line">        uint32_t maxAlignment = 1;</span><br><span class="line">        for (const auto&amp; ivar : *ro-&gt;ivars) &#123;</span><br><span class="line">            if (!ivar.offset) continue;  // anonymous bitfield</span><br><span class="line"></span><br><span class="line">            uint32_t alignment = ivar.alignment();</span><br><span class="line">            if (alignment &gt; maxAlignment) maxAlignment = alignment;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // Compute a slide value that preserves that alignment</span><br><span class="line">        uint32_t alignMask = maxAlignment - 1;</span><br><span class="line">        diff = (diff + alignMask) &amp; ~alignMask;</span><br><span class="line"></span><br><span class="line">        // Slide all of this class&#x27;s ivars en masse</span><br><span class="line">        for (const auto&amp; ivar : *ro-&gt;ivars) &#123;</span><br><span class="line">            if (!ivar.offset) continue;  // anonymous bitfield</span><br><span class="line"></span><br><span class="line">            uint32_t oldOffset = (uint32_t)*ivar.offset;</span><br><span class="line">            uint32_t newOffset = oldOffset + diff;</span><br><span class="line">            *ivar.offset = newOffset;</span><br><span class="line"></span><br><span class="line">            if (PrintIvars) &#123;</span><br><span class="line">                _objc_inform(&quot;IVARS:    offset %u -&gt; %u for %s &quot;</span><br><span class="line">                             &quot;(size %u, align %u)&quot;, </span><br><span class="line">                             oldOffset, newOffset, ivar.name, </span><br><span class="line">                             ivar.size, ivar.alignment());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    *(uint32_t *)&amp;ro-&gt;instanceStart += diff;</span><br><span class="line">    *(uint32_t *)&amp;ro-&gt;instanceSize += diff;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">static void reconcileInstanceVariables(Class cls, Class supercls, const class_ro_t*&amp; ro) </span><br><span class="line">&#123;</span><br><span class="line">    class_rw_t *rw = cls-&gt;data();</span><br><span class="line"></span><br><span class="line">    ASSERT(supercls);</span><br><span class="line">    ASSERT(!cls-&gt;isMetaClass());</span><br><span class="line"></span><br><span class="line">    /* debug: print them all before sliding</span><br><span class="line">    if (ro-&gt;ivars) &#123;</span><br><span class="line">        for (const auto&amp; ivar : *ro-&gt;ivars) &#123;</span><br><span class="line">            if (!ivar.offset) continue;  // anonymous bitfield</span><br><span class="line"></span><br><span class="line">            _objc_inform(&quot;IVARS: %s.%s (offset %u, size %u, align %u)&quot;, </span><br><span class="line">                         ro-&gt;name, ivar.name, </span><br><span class="line">                         *ivar.offset, ivar.size, ivar.alignment());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    */</span><br><span class="line"></span><br><span class="line">    // Non-fragile ivars - reconcile this class with its superclass</span><br><span class="line">    const class_ro_t *super_ro = supercls-&gt;data()-&gt;ro();</span><br><span class="line">    </span><br><span class="line">    if (DebugNonFragileIvars) &#123;</span><br><span class="line">        // Debugging: Force non-fragile ivars to slide.</span><br><span class="line">        // Intended to find compiler, runtime, and program bugs.</span><br><span class="line">        // If it fails with this and works without, you have a problem.</span><br><span class="line">        </span><br><span class="line">        // Operation: Reset everything to 0 + misalignment. </span><br><span class="line">        // Then force the normal sliding logic to push everything back.</span><br><span class="line">        </span><br><span class="line">        // Exceptions: root classes, metaclasses, *NSCF* classes, </span><br><span class="line">        // __CF* classes, NSConstantString, NSSimpleCString</span><br><span class="line">        </span><br><span class="line">        // (already know it&#x27;s not root because supercls != nil)</span><br><span class="line">        const char *clsname = cls-&gt;mangledName();</span><br><span class="line">        if (!strstr(clsname, &quot;NSCF&quot;)  &amp;&amp;  </span><br><span class="line">            0 != strncmp(clsname, &quot;__CF&quot;, 4)  &amp;&amp;  </span><br><span class="line">            0 != strcmp(clsname, &quot;NSConstantString&quot;)  &amp;&amp;  </span><br><span class="line">            0 != strcmp(clsname, &quot;NSSimpleCString&quot;)) </span><br><span class="line">        &#123;</span><br><span class="line">            uint32_t oldStart = ro-&gt;instanceStart;</span><br><span class="line">            class_ro_t *ro_w = make_ro_writeable(rw);</span><br><span class="line">            ro = rw-&gt;ro();</span><br><span class="line">            </span><br><span class="line">            // Find max ivar alignment in class.</span><br><span class="line">            // default to word size to simplify ivar update</span><br><span class="line">            uint32_t alignment = 1&lt;&lt;WORD_SHIFT;</span><br><span class="line">            if (ro-&gt;ivars) &#123;</span><br><span class="line">                for (const auto&amp; ivar : *ro-&gt;ivars) &#123;</span><br><span class="line">                    if (ivar.alignment() &gt; alignment) &#123;</span><br><span class="line">                        alignment = ivar.alignment();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            uint32_t misalignment = ro-&gt;instanceStart % alignment;</span><br><span class="line">            uint32_t delta = ro-&gt;instanceStart - misalignment;</span><br><span class="line">            ro_w-&gt;instanceStart = misalignment;</span><br><span class="line">            ro_w-&gt;instanceSize -= delta;</span><br><span class="line">            </span><br><span class="line">            if (PrintIvars) &#123;</span><br><span class="line">                _objc_inform(&quot;IVARS: DEBUG: forcing ivars for class &#x27;%s&#x27; &quot;</span><br><span class="line">                             &quot;to slide (instanceStart %zu -&gt; %zu)&quot;, </span><br><span class="line">                             cls-&gt;nameForLogging(), (size_t)oldStart, </span><br><span class="line">                             (size_t)ro-&gt;instanceStart);</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            if (ro-&gt;ivars) &#123;</span><br><span class="line">                for (const auto&amp; ivar : *ro-&gt;ivars) &#123;</span><br><span class="line">                    if (!ivar.offset) continue;  // anonymous bitfield</span><br><span class="line">                    *ivar.offset -= delta;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (ro-&gt;instanceStart &gt;= super_ro-&gt;instanceSize) &#123;</span><br><span class="line">        // Superclass has not overgrown its space. We&#x27;re done here.</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    // fixme can optimize for &quot;class has no new ivars&quot;, etc</span><br><span class="line"></span><br><span class="line">    if (ro-&gt;instanceStart &lt; super_ro-&gt;instanceSize) &#123;</span><br><span class="line">        // Superclass has changed size. This class&#x27;s ivars must move.</span><br><span class="line">        // Also slide layout bits in parallel.</span><br><span class="line">        // This code is incapable of compacting the subclass to </span><br><span class="line">        //   compensate for a superclass that shrunk, so don&#x27;t do that.</span><br><span class="line">        if (PrintIvars) &#123;</span><br><span class="line">            _objc_inform(&quot;IVARS: sliding ivars for class %s &quot;</span><br><span class="line">                         &quot;(superclass was %u bytes, now %u)&quot;, </span><br><span class="line">                         cls-&gt;nameForLogging(), ro-&gt;instanceStart, </span><br><span class="line">                         super_ro-&gt;instanceSize);</span><br><span class="line">        &#125;</span><br><span class="line">        class_ro_t *ro_w = make_ro_writeable(rw);</span><br><span class="line">        ro = rw-&gt;ro();</span><br><span class="line">        moveIvars(ro_w, super_ro-&gt;instanceSize);</span><br><span class="line">        gdb_objc_class_changed(cls, OBJC_CLASS_IVARS_CHANGED, ro-&gt;getName());</span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">static void validateAlreadyRealizedClass(Class cls) &#123;</span><br><span class="line">    ASSERT(cls-&gt;isRealized());</span><br><span class="line">#if TARGET_OS_OSX</span><br><span class="line">    class_rw_t *rw = cls-&gt;data();</span><br><span class="line">    size_t rwSize = malloc_size(rw);</span><br><span class="line"></span><br><span class="line">    // Note: this check will need some adjustment if class_rw_t&#x27;s</span><br><span class="line">    // size changes to not match the malloc bucket.</span><br><span class="line">    if (rwSize != sizeof(class_rw_t))</span><br><span class="line">        _objc_fatal(&quot;realized class %p has corrupt data pointer %p&quot;, cls, rw);</span><br><span class="line">#endif</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* realizeClassWithoutSwift</span><br><span class="line">* Performs first-time initialization on class cls, </span><br><span class="line">* including allocating its read-write data.</span><br><span class="line">* Does not perform any Swift-side initialization.</span><br><span class="line">* Returns the real class structure for the class. </span><br><span class="line">* Locking: runtimeLock must be write-locked by the caller</span><br><span class="line">**********************************************************************/</span><br><span class="line">static Class realizeClassWithoutSwift(Class cls, Class previously)</span><br><span class="line">&#123;</span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line"></span><br><span class="line">    class_rw_t *rw;</span><br><span class="line">    Class supercls;</span><br><span class="line">    Class metacls;</span><br><span class="line"></span><br><span class="line">    if (!cls) return nil;</span><br><span class="line">    if (cls-&gt;isRealized()) &#123;</span><br><span class="line">        validateAlreadyRealizedClass(cls);</span><br><span class="line">        return cls;</span><br><span class="line">    &#125;</span><br><span class="line">    ASSERT(cls == remapClass(cls));</span><br><span class="line"></span><br><span class="line">    // fixme verify class is not in an un-dlopened part of the shared cache?</span><br><span class="line"></span><br><span class="line">    auto ro = (const class_ro_t *)cls-&gt;data();</span><br><span class="line">    auto isMeta = ro-&gt;flags &amp; RO_META;</span><br><span class="line">    if (ro-&gt;flags &amp; RO_FUTURE) &#123;</span><br><span class="line">        // This was a future class. rw data is already allocated.</span><br><span class="line">        rw = cls-&gt;data();</span><br><span class="line">        ro = cls-&gt;data()-&gt;ro();</span><br><span class="line">        ASSERT(!isMeta);</span><br><span class="line">        cls-&gt;changeInfo(RW_REALIZED|RW_REALIZING, RW_FUTURE);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        // Normal class. Allocate writeable class data.</span><br><span class="line">        rw = objc::zalloc&lt;class_rw_t&gt;();</span><br><span class="line">        rw-&gt;set_ro(ro);</span><br><span class="line">        rw-&gt;flags = RW_REALIZED|RW_REALIZING|isMeta;</span><br><span class="line">        cls-&gt;setData(rw);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cls-&gt;cache.initializeToEmptyOrPreoptimizedInDisguise();</span><br><span class="line"></span><br><span class="line">#if FAST_CACHE_META</span><br><span class="line">    if (isMeta) cls-&gt;cache.setBit(FAST_CACHE_META);</span><br><span class="line">#endif</span><br><span class="line"></span><br><span class="line">    // Choose an index for this class.</span><br><span class="line">    // Sets cls-&gt;instancesRequireRawIsa if indexes no more indexes are available</span><br><span class="line">    cls-&gt;chooseClassArrayIndex();</span><br><span class="line"></span><br><span class="line">    if (PrintConnecting) &#123;</span><br><span class="line">        _objc_inform(&quot;CLASS: realizing class &#x27;%s&#x27;%s %p %p #%u %s%s&quot;,</span><br><span class="line">                     cls-&gt;nameForLogging(), isMeta ? &quot; (meta)&quot; : &quot;&quot;, </span><br><span class="line">                     (void*)cls, ro, cls-&gt;classArrayIndex(),</span><br><span class="line">                     cls-&gt;isSwiftStable() ? &quot;(swift)&quot; : &quot;&quot;,</span><br><span class="line">                     cls-&gt;isSwiftLegacy() ? &quot;(pre-stable swift)&quot; : &quot;&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Realize superclass and metaclass, if they aren&#x27;t already.</span><br><span class="line">    // This needs to be done after RW_REALIZED is set above, for root classes.</span><br><span class="line">    // This needs to be done after class index is chosen, for root metaclasses.</span><br><span class="line">    // This assumes that none of those classes have Swift contents,</span><br><span class="line">    //   or that Swift&#x27;s initializers have already been called.</span><br><span class="line">    //   fixme that assumption will be wrong if we add support</span><br><span class="line">    //   for ObjC subclasses of Swift classes.</span><br><span class="line">    supercls = realizeClassWithoutSwift(remapClass(cls-&gt;getSuperclass()), nil);</span><br><span class="line">    metacls = realizeClassWithoutSwift(remapClass(cls-&gt;ISA()), nil);</span><br><span class="line"></span><br><span class="line">#if SUPPORT_NONPOINTER_ISA</span><br><span class="line">    if (isMeta) &#123;</span><br><span class="line">        // Metaclasses do not need any features from non pointer ISA</span><br><span class="line">        // This allows for a faspath for classes in objc_retain/objc_release.</span><br><span class="line">        cls-&gt;setInstancesRequireRawIsa();</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        // Disable non-pointer isa for some classes and/or platforms.</span><br><span class="line">        // Set instancesRequireRawIsa.</span><br><span class="line">        bool instancesRequireRawIsa = cls-&gt;instancesRequireRawIsa();</span><br><span class="line">        bool rawIsaIsInherited = false;</span><br><span class="line">        static bool hackedDispatch = false;</span><br><span class="line"></span><br><span class="line">        if (DisableNonpointerIsa) &#123;</span><br><span class="line">            // Non-pointer isa disabled by environment or app SDK version</span><br><span class="line">            instancesRequireRawIsa = true;</span><br><span class="line">        &#125;</span><br><span class="line">        else if (!hackedDispatch  &amp;&amp;  0 == strcmp(ro-&gt;getName(), &quot;OS_object&quot;))</span><br><span class="line">        &#123;</span><br><span class="line">            // hack for libdispatch et al - isa also acts as vtable pointer</span><br><span class="line">            hackedDispatch = true;</span><br><span class="line">            instancesRequireRawIsa = true;</span><br><span class="line">        &#125;</span><br><span class="line">        else if (supercls  &amp;&amp;  supercls-&gt;getSuperclass()  &amp;&amp;</span><br><span class="line">                 supercls-&gt;instancesRequireRawIsa())</span><br><span class="line">        &#123;</span><br><span class="line">            // This is also propagated by addSubclass()</span><br><span class="line">            // but nonpointer isa setup needs it earlier.</span><br><span class="line">            // Special case: instancesRequireRawIsa does not propagate</span><br><span class="line">            // from root class to root metaclass</span><br><span class="line">            instancesRequireRawIsa = true;</span><br><span class="line">            rawIsaIsInherited = true;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if (instancesRequireRawIsa) &#123;</span><br><span class="line">            cls-&gt;setInstancesRequireRawIsaRecursively(rawIsaIsInherited);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">// SUPPORT_NONPOINTER_ISA</span><br><span class="line">#endif</span><br><span class="line"></span><br><span class="line">    // Update superclass and metaclass in case of remapping</span><br><span class="line">    cls-&gt;setSuperclass(supercls);</span><br><span class="line">    cls-&gt;initClassIsa(metacls);</span><br><span class="line"></span><br><span class="line">    // Reconcile instance variable offsets / layout.</span><br><span class="line">    // This may reallocate class_ro_t, updating our ro variable.</span><br><span class="line">    if (supercls  &amp;&amp;  !isMeta) reconcileInstanceVariables(cls, supercls, ro);</span><br><span class="line"></span><br><span class="line">    // Set fastInstanceSize if it wasn&#x27;t set already.</span><br><span class="line">    cls-&gt;setInstanceSize(ro-&gt;instanceSize);</span><br><span class="line"></span><br><span class="line">    // Copy some flags from ro to rw</span><br><span class="line">    if (ro-&gt;flags &amp; RO_HAS_CXX_STRUCTORS) &#123;</span><br><span class="line">        cls-&gt;setHasCxxDtor();</span><br><span class="line">        if (! (ro-&gt;flags &amp; RO_HAS_CXX_DTOR_ONLY)) &#123;</span><br><span class="line">            cls-&gt;setHasCxxCtor();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    // Propagate the associated objects forbidden flag from ro or from</span><br><span class="line">    // the superclass.</span><br><span class="line">    if ((ro-&gt;flags &amp; RO_FORBIDS_ASSOCIATED_OBJECTS) ||</span><br><span class="line">        (supercls &amp;&amp; supercls-&gt;forbidsAssociatedObjects()))</span><br><span class="line">    &#123;</span><br><span class="line">        rw-&gt;flags |= RW_FORBIDS_ASSOCIATED_OBJECTS;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Connect this class to its superclass&#x27;s subclass lists</span><br><span class="line">    if (supercls) &#123;</span><br><span class="line">        addSubclass(supercls, cls);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        addRootClass(cls);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Attach categories</span><br><span class="line">    methodizeClass(cls, previously);</span><br><span class="line"></span><br><span class="line">    return cls;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* _objc_realizeClassFromSwift</span><br><span class="line">* Called by Swift when it needs the ObjC part of a class to be realized.</span><br><span class="line">* There are four cases:</span><br><span class="line">* 1. cls != nil; previously == cls</span><br><span class="line">*    Class cls is being realized in place</span><br><span class="line">* 2. cls != nil; previously == nil</span><br><span class="line">*    Class cls is being constructed at runtime</span><br><span class="line">* 3. cls != nil; previously != cls</span><br><span class="line">*    The class that was at previously has been reallocated to cls</span><br><span class="line">* 4. cls == nil, previously != nil</span><br><span class="line">*    The class at previously is hereby disavowed</span><br><span class="line">*</span><br><span class="line">* Only variants #1 and #2 are supported today.</span><br><span class="line">*</span><br><span class="line">* Locking: acquires runtimeLock</span><br><span class="line">**********************************************************************/</span><br><span class="line">Class _objc_realizeClassFromSwift(Class cls, void *previously)</span><br><span class="line">&#123;</span><br><span class="line">    if (cls) &#123;</span><br><span class="line">        if (previously &amp;&amp; previously != (void*)cls) &#123;</span><br><span class="line">            // #3: relocation</span><br><span class="line">            mutex_locker_t lock(runtimeLock);</span><br><span class="line">            addRemappedClass((Class)previously, cls);</span><br><span class="line">            addClassTableEntry(cls);</span><br><span class="line">            addNamedClass(cls, cls-&gt;mangledName(), /*replacing*/nil);</span><br><span class="line">            return realizeClassWithoutSwift(cls, (Class)previously);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            // #1 and #2: realization in place, or new class</span><br><span class="line">            mutex_locker_t lock(runtimeLock);</span><br><span class="line"></span><br><span class="line">            if (!previously) &#123;</span><br><span class="line">                // #2: new class</span><br><span class="line">                cls = readClass(cls, false/*bundle*/, false/*shared cache*/);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            // #1 and #2: realization in place, or new class</span><br><span class="line">            // We ignore the Swift metadata initializer callback.</span><br><span class="line">            // We assume that&#x27;s all handled since we&#x27;re being called from Swift.</span><br><span class="line">            return realizeClassWithoutSwift(cls, nil);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    else &#123;</span><br><span class="line">        // #4: disavowal</span><br><span class="line">        // In the future this will mean remapping the old address to nil</span><br><span class="line">        // and if necessary removing the old address from any other tables.</span><br><span class="line">        _objc_fatal(&quot;Swift requested that class %p be ignored, &quot;</span><br><span class="line">                    &quot;but libobjc does not support that.&quot;, previously);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* realizeSwiftClass</span><br><span class="line">* Performs first-time initialization on class cls, </span><br><span class="line">* including allocating its read-write data, </span><br><span class="line">* and any Swift-side initialization.</span><br><span class="line">* Returns the real class structure for the class. </span><br><span class="line">* Locking: acquires runtimeLock indirectly</span><br><span class="line">**********************************************************************/</span><br><span class="line">static Class realizeSwiftClass(Class cls)</span><br><span class="line">&#123;</span><br><span class="line">    runtimeLock.assertUnlocked();</span><br><span class="line"></span><br><span class="line">    // Some assumptions:</span><br><span class="line">    // * Metaclasses never have a Swift initializer.</span><br><span class="line">    // * Root classes never have a Swift initializer.</span><br><span class="line">    //   (These two together avoid initialization order problems at the root.)</span><br><span class="line">    // * Unrealized non-Swift classes have no Swift ancestry.</span><br><span class="line">    // * Unrealized Swift classes with no initializer have no ancestry that</span><br><span class="line">    //   does have the initializer.</span><br><span class="line">    //   (These two together mean we don&#x27;t need to scan superclasses here</span><br><span class="line">    //   and we don&#x27;t need to worry about Swift superclasses inside</span><br><span class="line">    //   realizeClassWithoutSwift()).</span><br><span class="line"></span><br><span class="line">    // fixme some of these assumptions will be wrong</span><br><span class="line">    // if we add support for ObjC sublasses of Swift classes.</span><br><span class="line"></span><br><span class="line">#if DEBUG</span><br><span class="line">    runtimeLock.lock();</span><br><span class="line">    ASSERT(remapClass(cls) == cls);</span><br><span class="line">    ASSERT(cls-&gt;isSwiftStable_ButAllowLegacyForNow());</span><br><span class="line">    ASSERT(!cls-&gt;isMetaClassMaybeUnrealized());</span><br><span class="line">    ASSERT(cls-&gt;getSuperclass());</span><br><span class="line">    runtimeLock.unlock();</span><br><span class="line">#endif</span><br><span class="line"></span><br><span class="line">    // Look for a Swift metadata initialization function</span><br><span class="line">    // installed on the class. If it is present we call it.</span><br><span class="line">    // That function in turn initializes the Swift metadata,</span><br><span class="line">    // prepares the &quot;compiler-generated&quot; ObjC metadata if not</span><br><span class="line">    // already present, and calls _objc_realizeSwiftClass() to finish</span><br><span class="line">    // our own initialization.</span><br><span class="line"></span><br><span class="line">    if (auto init = cls-&gt;swiftMetadataInitializer()) &#123;</span><br><span class="line">        if (PrintConnecting) &#123;</span><br><span class="line">            _objc_inform(&quot;CLASS: calling Swift metadata initializer &quot;</span><br><span class="line">                         &quot;for class &#x27;%s&#x27; (%p)&quot;, cls-&gt;nameForLogging(), cls);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Class newcls = init(cls, nil);</span><br><span class="line"></span><br><span class="line">        // fixme someday Swift will need to relocate classes at this point,</span><br><span class="line">        // but we don&#x27;t accept that yet.</span><br><span class="line">        if (cls != newcls) &#123;</span><br><span class="line">            mutex_locker_t lock(runtimeLock);</span><br><span class="line">            addRemappedClass(cls, newcls);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return newcls;</span><br><span class="line">    &#125;</span><br><span class="line">    else &#123;</span><br><span class="line">        // No Swift-side initialization callback.</span><br><span class="line">        // Perform our own realization directly.</span><br><span class="line">        mutex_locker_t lock(runtimeLock);</span><br><span class="line">        return realizeClassWithoutSwift(cls, nil);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* realizeClassMaybeSwift (MaybeRelock / AndUnlock / AndLeaveLocked)</span><br><span class="line">* Realize a class that might be a Swift class.</span><br><span class="line">* Returns the real class structure for the class. </span><br><span class="line">* Locking: </span><br><span class="line">*   runtimeLock must be held on entry</span><br><span class="line">*   runtimeLock may be dropped during execution</span><br><span class="line">*   ...AndUnlock function leaves runtimeLock unlocked on exit</span><br><span class="line">*   ...AndLeaveLocked re-acquires runtimeLock if it was dropped</span><br><span class="line">* This complication avoids repeated lock transitions in some cases.</span><br><span class="line">**********************************************************************/</span><br><span class="line">static Class</span><br><span class="line">realizeClassMaybeSwiftMaybeRelock(Class cls, mutex_t&amp; lock, bool leaveLocked)</span><br><span class="line">&#123;</span><br><span class="line">    lock.assertLocked();</span><br><span class="line"></span><br><span class="line">    if (!cls-&gt;isSwiftStable_ButAllowLegacyForNow()) &#123;</span><br><span class="line">        // Non-Swift class. Realize it now with the lock still held.</span><br><span class="line">        // fixme wrong in the future for objc subclasses of swift classes</span><br><span class="line">        realizeClassWithoutSwift(cls, nil);</span><br><span class="line">        if (!leaveLocked) lock.unlock();</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        // Swift class. We need to drop locks and call the Swift</span><br><span class="line">        // runtime to initialize it.</span><br><span class="line">        lock.unlock();</span><br><span class="line">        cls = realizeSwiftClass(cls);</span><br><span class="line">        ASSERT(cls-&gt;isRealized());    // callback must have provoked realization</span><br><span class="line">        if (leaveLocked) lock.lock();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return cls;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">static Class</span><br><span class="line">realizeClassMaybeSwiftAndUnlock(Class cls, mutex_t&amp; lock)</span><br><span class="line">&#123;</span><br><span class="line">    return realizeClassMaybeSwiftMaybeRelock(cls, lock, false);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">static Class</span><br><span class="line">realizeClassMaybeSwiftAndLeaveLocked(Class cls, mutex_t&amp; lock)</span><br><span class="line">&#123;</span><br><span class="line">    return realizeClassMaybeSwiftMaybeRelock(cls, lock, true);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* missingWeakSuperclass</span><br><span class="line">* Return YES if some superclass of cls was weak-linked and is missing.</span><br><span class="line">**********************************************************************/</span><br><span class="line">static bool </span><br><span class="line">missingWeakSuperclass(Class cls)</span><br><span class="line">&#123;</span><br><span class="line">    ASSERT(!cls-&gt;isRealized());</span><br><span class="line"></span><br><span class="line">    if (!cls-&gt;getSuperclass()) &#123;</span><br><span class="line">        // superclass nil. This is normal for root classes only.</span><br><span class="line">        return (!(cls-&gt;data()-&gt;flags &amp; RO_ROOT));</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        // superclass not nil. Check if a higher superclass is missing.</span><br><span class="line">        Class supercls = remapClass(cls-&gt;getSuperclass());</span><br><span class="line">        ASSERT(cls != cls-&gt;getSuperclass());</span><br><span class="line">        ASSERT(cls != supercls);</span><br><span class="line">        if (!supercls) return YES;</span><br><span class="line">        if (supercls-&gt;isRealized()) return NO;</span><br><span class="line">        return missingWeakSuperclass(supercls);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* realizeAllClassesInImage</span><br><span class="line">* Non-lazily realizes all unrealized classes in the given image.</span><br><span class="line">* Locking: runtimeLock must be held by the caller.</span><br><span class="line">* Locking: this function may drop and re-acquire the lock.</span><br><span class="line">**********************************************************************/</span><br><span class="line">static void realizeAllClassesInImage(header_info *hi)</span><br><span class="line">&#123;</span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line"></span><br><span class="line">    size_t count, i;</span><br><span class="line">    classref_t const *classlist;</span><br><span class="line"></span><br><span class="line">    if (hi-&gt;areAllClassesRealized()) return;</span><br><span class="line"></span><br><span class="line">    classlist = _getObjc2ClassList(hi, &amp;count);</span><br><span class="line"></span><br><span class="line">    for (i = 0; i &lt; count; i++) &#123;</span><br><span class="line">        Class cls = remapClass(classlist[i]);</span><br><span class="line">        if (cls) &#123;</span><br><span class="line">            realizeClassMaybeSwiftAndLeaveLocked(cls, runtimeLock);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    hi-&gt;setAllClassesRealized(YES);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* realizeAllClasses</span><br><span class="line">* Non-lazily realizes all unrealized classes in all known images.</span><br><span class="line">* Locking: runtimeLock must be held by the caller.</span><br><span class="line">* Locking: this function may drop and re-acquire the lock.</span><br><span class="line">* Dropping the lock makes this function thread-unsafe with respect </span><br><span class="line">*   to concurrent image unload, but the callers of this function </span><br><span class="line">*   already ultimately do something that is also thread-unsafe with </span><br><span class="line">*   respect to image unload (such as using the list of all classes).</span><br><span class="line">**********************************************************************/</span><br><span class="line">static void realizeAllClasses(void)</span><br><span class="line">&#123;</span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line"></span><br><span class="line">    header_info *hi;</span><br><span class="line">    for (hi = FirstHeader; hi; hi = hi-&gt;getNext()) &#123;</span><br><span class="line">        realizeAllClassesInImage(hi);  // may drop and re-acquire runtimeLock</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* _objc_allocateFutureClass</span><br><span class="line">* Allocate an unresolved future class for the given class name.</span><br><span class="line">* Returns any existing allocation if one was already made.</span><br><span class="line">* Assumes the named class doesn&#x27;t exist yet.</span><br><span class="line">* Locking: acquires runtimeLock</span><br><span class="line">**********************************************************************/</span><br><span class="line">Class _objc_allocateFutureClass(const char *name)</span><br><span class="line">&#123;</span><br><span class="line">    mutex_locker_t lock(runtimeLock);</span><br><span class="line"></span><br><span class="line">    Class cls;</span><br><span class="line">    NXMapTable *map = futureNamedClasses();</span><br><span class="line"></span><br><span class="line">    if ((cls = (Class)NXMapGet(map, name))) &#123;</span><br><span class="line">        // Already have a future class for this name.</span><br><span class="line">        return cls;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cls = _calloc_class(sizeof(objc_class));</span><br><span class="line">    addFutureNamedClass(name, cls);</span><br><span class="line"></span><br><span class="line">    return cls;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* objc_getFutureClass.  Return the id of the named class.</span><br><span class="line">* If the class does not exist, return an uninitialized class </span><br><span class="line">* structure that will be used for the class when and if it </span><br><span class="line">* does get loaded.</span><br><span class="line">* Not thread safe. </span><br><span class="line">**********************************************************************/</span><br><span class="line">Class objc_getFutureClass(const char *name)</span><br><span class="line">&#123;</span><br><span class="line">    Class cls;</span><br><span class="line"></span><br><span class="line">    // YES unconnected, NO class handler</span><br><span class="line">    // (unconnected is OK because it will someday be the real class)</span><br><span class="line">    cls = look_up_class(name, YES, NO);</span><br><span class="line">    if (cls) &#123;</span><br><span class="line">        if (PrintFuture) &#123;</span><br><span class="line">            _objc_inform(&quot;FUTURE: found %p already in use for %s&quot;, </span><br><span class="line">                         (void*)cls, name);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return cls;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    // No class or future class with that name yet. Make one.</span><br><span class="line">    // fixme not thread-safe with respect to </span><br><span class="line">    // simultaneous library load or getFutureClass.</span><br><span class="line">    return _objc_allocateFutureClass(name);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">BOOL _class_isFutureClass(Class cls)</span><br><span class="line">&#123;</span><br><span class="line">    return cls  &amp;&amp;  cls-&gt;isFuture();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">BOOL _class_isSwift(Class _Nullable cls)</span><br><span class="line">&#123;</span><br><span class="line">    return cls &amp;&amp; cls-&gt;isSwiftStable();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* _objc_flush_caches</span><br><span class="line">* Flushes all caches.</span><br><span class="line">* (Historical behavior: flush caches for cls, its metaclass, </span><br><span class="line">* and subclasses thereof. Nil flushes all classes.)</span><br><span class="line">* Locking: acquires runtimeLock</span><br><span class="line">**********************************************************************/</span><br><span class="line">static void flushCaches(Class cls, const char *func, bool (^predicate)(Class))</span><br><span class="line">&#123;</span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line">#if CONFIG_USE_CACHE_LOCK</span><br><span class="line">    mutex_locker_t lock(cacheUpdateLock);</span><br><span class="line">#endif</span><br><span class="line"></span><br><span class="line">    const auto handler = ^(Class c) &#123;</span><br><span class="line">        if (predicate(c)) &#123;</span><br><span class="line">            c-&gt;cache.eraseNolock(func);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return true;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    if (cls) &#123;</span><br><span class="line">        foreach_realized_class_and_subclass(cls, handler);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        foreach_realized_class_and_metaclass(handler);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">void _objc_flush_caches(Class cls)</span><br><span class="line">&#123;</span><br><span class="line">    &#123;</span><br><span class="line">        mutex_locker_t lock(runtimeLock);</span><br><span class="line">        flushCaches(cls, __func__, [](Class c)&#123;</span><br><span class="line">            return !c-&gt;cache.isConstantOptimizedCache();</span><br><span class="line">        &#125;);</span><br><span class="line">        if (cls &amp;&amp; !cls-&gt;isMetaClass() &amp;&amp; !cls-&gt;isRootClass()) &#123;</span><br><span class="line">            flushCaches(cls-&gt;ISA(), __func__, [](Class c)&#123;</span><br><span class="line">                return !c-&gt;cache.isConstantOptimizedCache();</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            // cls is a root class or root metaclass. Its metaclass is itself</span><br><span class="line">            // or a subclass so the metaclass caches were already flushed.</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (!cls) &#123;</span><br><span class="line">        // collectALot if cls==nil</span><br><span class="line">#if CONFIG_USE_CACHE_LOCK</span><br><span class="line">        mutex_locker_t lock(cacheUpdateLock);</span><br><span class="line">#else</span><br><span class="line">        mutex_locker_t lock(runtimeLock);</span><br><span class="line">#endif</span><br><span class="line">        cache_t::collectNolock(true);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* map_images</span><br><span class="line">* Process the given images which are being mapped in by dyld.</span><br><span class="line">* Calls ABI-agnostic code after taking ABI-specific locks.</span><br><span class="line">*</span><br><span class="line">* Locking: write-locks runtimeLock</span><br><span class="line">**********************************************************************/</span><br><span class="line">void</span><br><span class="line">map_images(unsigned count, const char * const paths[],</span><br><span class="line">           const struct mach_header * const mhdrs[])</span><br><span class="line">&#123;</span><br><span class="line">    mutex_locker_t lock(runtimeLock);</span><br><span class="line">    return map_images_nolock(count, paths, mhdrs);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">static void load_categories_nolock(header_info *hi) &#123;</span><br><span class="line">    bool hasClassProperties = hi-&gt;info()-&gt;hasCategoryClassProperties();</span><br><span class="line"></span><br><span class="line">    size_t count;</span><br><span class="line">    auto processCatlist = [&amp;](category_t * const *catlist) &#123;</span><br><span class="line">        for (unsigned i = 0; i &lt; count; i++) &#123;</span><br><span class="line">            category_t *cat = catlist[i];</span><br><span class="line">            Class cls = remapClass(cat-&gt;cls);</span><br><span class="line">            locstamped_category_t lc&#123;cat, hi&#125;;</span><br><span class="line"></span><br><span class="line">            if (!cls) &#123;</span><br><span class="line">                // Category&#x27;s target class is missing (probably weak-linked).</span><br><span class="line">                // Ignore the category.</span><br><span class="line">                if (PrintConnecting) &#123;</span><br><span class="line">                    _objc_inform(&quot;CLASS: IGNORING category \?\?\?(%s) %p with &quot;</span><br><span class="line">                                 &quot;missing weak-linked target class&quot;,</span><br><span class="line">                                 cat-&gt;name, cat);</span><br><span class="line">                &#125;</span><br><span class="line">                continue;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            // Process this category.</span><br><span class="line">            if (cls-&gt;isStubClass()) &#123;</span><br><span class="line">                // Stub classes are never realized. Stub classes</span><br><span class="line">                // don&#x27;t know their metaclass until they&#x27;re</span><br><span class="line">                // initialized, so we have to add categories with</span><br><span class="line">                // class methods or properties to the stub itself.</span><br><span class="line">                // methodizeClass() will find them and add them to</span><br><span class="line">                // the metaclass as appropriate.</span><br><span class="line">                if (cat-&gt;instanceMethods ||</span><br><span class="line">                    cat-&gt;protocols ||</span><br><span class="line">                    cat-&gt;instanceProperties ||</span><br><span class="line">                    cat-&gt;classMethods ||</span><br><span class="line">                    cat-&gt;protocols ||</span><br><span class="line">                    (hasClassProperties &amp;&amp; cat-&gt;_classProperties))</span><br><span class="line">                &#123;</span><br><span class="line">                    objc::unattachedCategories.addForClass(lc, cls);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                // First, register the category with its target class.</span><br><span class="line">                // Then, rebuild the class&#x27;s method lists (etc) if</span><br><span class="line">                // the class is realized.</span><br><span class="line">                if (cat-&gt;instanceMethods ||  cat-&gt;protocols</span><br><span class="line">                    ||  cat-&gt;instanceProperties)</span><br><span class="line">                &#123;</span><br><span class="line">                    if (cls-&gt;isRealized()) &#123;</span><br><span class="line">                        attachCategories(cls, &amp;lc, 1, ATTACH_EXISTING);</span><br><span class="line">                    &#125; else &#123;</span><br><span class="line">                        objc::unattachedCategories.addForClass(lc, cls);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                if (cat-&gt;classMethods  ||  cat-&gt;protocols</span><br><span class="line">                    ||  (hasClassProperties &amp;&amp; cat-&gt;_classProperties))</span><br><span class="line">                &#123;</span><br><span class="line">                    if (cls-&gt;ISA()-&gt;isRealized()) &#123;</span><br><span class="line">                        attachCategories(cls-&gt;ISA(), &amp;lc, 1, ATTACH_EXISTING | ATTACH_METACLASS);</span><br><span class="line">                    &#125; else &#123;</span><br><span class="line">                        objc::unattachedCategories.addForClass(lc, cls-&gt;ISA());</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    processCatlist(hi-&gt;catlist(&amp;count));</span><br><span class="line">    processCatlist(hi-&gt;catlist2(&amp;count));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">static void loadAllCategories() &#123;</span><br><span class="line">    mutex_locker_t lock(runtimeLock);</span><br><span class="line"></span><br><span class="line">    for (auto *hi = FirstHeader; hi != NULL; hi = hi-&gt;getNext()) &#123;</span><br><span class="line">        load_categories_nolock(hi);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* load_images</span><br><span class="line">* Process +load in the given images which are being mapped in by dyld.</span><br><span class="line">*</span><br><span class="line">* Locking: write-locks runtimeLock and loadMethodLock</span><br><span class="line">**********************************************************************/</span><br><span class="line">extern bool hasLoadMethods(const headerType *mhdr);</span><br><span class="line">extern void prepare_load_methods(const headerType *mhdr);</span><br><span class="line"></span><br><span class="line">void</span><br><span class="line">load_images(const char *path __unused, const struct mach_header *mh)</span><br><span class="line">&#123;</span><br><span class="line">    if (!didInitialAttachCategories &amp;&amp; didCallDyldNotifyRegister) &#123;</span><br><span class="line">        didInitialAttachCategories = true;</span><br><span class="line">        loadAllCategories();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Return without taking locks if there are no +load methods here.</span><br><span class="line">    if (!hasLoadMethods((const headerType *)mh)) return;</span><br><span class="line"></span><br><span class="line">    recursive_mutex_locker_t lock(loadMethodLock);</span><br><span class="line"></span><br><span class="line">    // Discover load methods</span><br><span class="line">    &#123;</span><br><span class="line">        mutex_locker_t lock2(runtimeLock);</span><br><span class="line">        prepare_load_methods((const headerType *)mh);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Call +load methods (without runtimeLock - re-entrant)</span><br><span class="line">    call_load_methods();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* unmap_image</span><br><span class="line">* Process the given image which is about to be unmapped by dyld.</span><br><span class="line">*</span><br><span class="line">* Locking: write-locks runtimeLock and loadMethodLock</span><br><span class="line">**********************************************************************/</span><br><span class="line">void </span><br><span class="line">unmap_image(const char *path __unused, const struct mach_header *mh)</span><br><span class="line">&#123;</span><br><span class="line">    recursive_mutex_locker_t lock(loadMethodLock);</span><br><span class="line">    mutex_locker_t lock2(runtimeLock);</span><br><span class="line">    unmap_image_nolock(mh);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* mustReadClasses</span><br><span class="line">* Preflight check in advance of readClass() from an image.</span><br><span class="line">**********************************************************************/</span><br><span class="line">bool mustReadClasses(header_info *hi, bool hasDyldRoots)</span><br><span class="line">&#123;</span><br><span class="line">    const char *reason;</span><br><span class="line"></span><br><span class="line">    // If the image is not preoptimized then we must read classes.</span><br><span class="line">    if (!hi-&gt;hasPreoptimizedClasses()) &#123;</span><br><span class="line">        reason = nil; // Don&#x27;t log this one because it is noisy.</span><br><span class="line">        goto readthem;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // If iOS simulator then we must read classes.</span><br><span class="line">#if TARGET_OS_SIMULATOR</span><br><span class="line">    reason = &quot;the image is for iOS simulator&quot;;</span><br><span class="line">    goto readthem;</span><br><span class="line">#endif</span><br><span class="line"></span><br><span class="line">    ASSERT(!hi-&gt;isBundle());  // no MH_BUNDLE in shared cache</span><br><span class="line"></span><br><span class="line">    // If the image may have missing weak superclasses then we must read classes</span><br><span class="line">    if (!noMissingWeakSuperclasses() || hasDyldRoots) &#123;</span><br><span class="line">        reason = &quot;the image may contain classes with missing weak superclasses&quot;;</span><br><span class="line">        goto readthem;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // If there are unresolved future classes then we must read classes.</span><br><span class="line">    if (haveFutureNamedClasses()) &#123;</span><br><span class="line">        reason = &quot;there are unresolved future classes pending&quot;;</span><br><span class="line">        goto readthem;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // readClass() rewrites bits in backward-deploying Swift stable ABI code.</span><br><span class="line">    // The assumption here is there there are no such classes</span><br><span class="line">    // in the dyld shared cache.</span><br><span class="line">#if DEBUG</span><br><span class="line">    &#123;</span><br><span class="line">        size_t count;</span><br><span class="line">        classref_t const *classlist = _getObjc2ClassList(hi, &amp;count);</span><br><span class="line">        for (size_t i = 0; i &lt; count; i++) &#123;</span><br><span class="line">            Class cls = remapClass(classlist[i]);</span><br><span class="line">            ASSERT(!cls-&gt;isUnfixedBackwardDeployingStableSwift());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">#endif</span><br><span class="line"></span><br><span class="line">    // readClass() does not need to do anything.</span><br><span class="line">    return NO;</span><br><span class="line"></span><br><span class="line"> readthem:</span><br><span class="line">    if (PrintPreopt  &amp;&amp;  reason) &#123;</span><br><span class="line">        _objc_inform(&quot;PREOPTIMIZATION: reading classes manually from %s &quot;</span><br><span class="line">                     &quot;because %s&quot;, hi-&gt;fname(), reason);</span><br><span class="line">    &#125;</span><br><span class="line">    return YES;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* readClass</span><br><span class="line">* Read a class and metaclass as written by a compiler.</span><br><span class="line">* Returns the new class pointer. This could be: </span><br><span class="line">* - cls</span><br><span class="line">* - nil  (cls has a missing weak-linked superclass)</span><br><span class="line">* - something else (space for this class was reserved by a future class)</span><br><span class="line">*</span><br><span class="line">* Note that all work performed by this function is preflighted by </span><br><span class="line">* mustReadClasses(). Do not change this function without updating that one.</span><br><span class="line">*</span><br><span class="line">* Locking: runtimeLock acquired by map_images or objc_readClassPair</span><br><span class="line">**********************************************************************/</span><br><span class="line">Class readClass(Class cls, bool headerIsBundle, bool headerIsPreoptimized)</span><br><span class="line">&#123;</span><br><span class="line">    const char *mangledName = cls-&gt;nonlazyMangledName();</span><br><span class="line">    </span><br><span class="line">    if (missingWeakSuperclass(cls)) &#123;</span><br><span class="line">        // No superclass (probably weak-linked). </span><br><span class="line">        // Disavow any knowledge of this subclass.</span><br><span class="line">        if (PrintConnecting) &#123;</span><br><span class="line">            _objc_inform(&quot;CLASS: IGNORING class &#x27;%s&#x27; with &quot;</span><br><span class="line">                         &quot;missing weak-linked superclass&quot;, </span><br><span class="line">                         cls-&gt;nameForLogging());</span><br><span class="line">        &#125;</span><br><span class="line">        addRemappedClass(cls, nil);</span><br><span class="line">        cls-&gt;setSuperclass(nil);</span><br><span class="line">        return nil;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    cls-&gt;fixupBackwardDeployingStableSwift();</span><br><span class="line"></span><br><span class="line">    Class replacing = nil;</span><br><span class="line">    if (mangledName != nullptr) &#123;</span><br><span class="line">        if (Class newCls = popFutureNamedClass(mangledName)) &#123;</span><br><span class="line">            // This name was previously allocated as a future class.</span><br><span class="line">            // Copy objc_class to future class&#x27;s struct.</span><br><span class="line">            // Preserve future&#x27;s rw data block.</span><br><span class="line"></span><br><span class="line">            if (newCls-&gt;isAnySwift()) &#123;</span><br><span class="line">                _objc_fatal(&quot;Can&#x27;t complete future class request for &#x27;%s&#x27; &quot;</span><br><span class="line">                            &quot;because the real class is too big.&quot;,</span><br><span class="line">                            cls-&gt;nameForLogging());</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            class_rw_t *rw = newCls-&gt;data();</span><br><span class="line">            const class_ro_t *old_ro = rw-&gt;ro();</span><br><span class="line">            memcpy(newCls, cls, sizeof(objc_class));</span><br><span class="line"></span><br><span class="line">            // Manually set address-discriminated ptrauthed fields</span><br><span class="line">            // so that newCls gets the correct signatures.</span><br><span class="line">            newCls-&gt;setSuperclass(cls-&gt;getSuperclass());</span><br><span class="line">            newCls-&gt;initIsa(cls-&gt;getIsa());</span><br><span class="line"></span><br><span class="line">            rw-&gt;set_ro((class_ro_t *)newCls-&gt;data());</span><br><span class="line">            newCls-&gt;setData(rw);</span><br><span class="line">            freeIfMutable((char *)old_ro-&gt;getName());</span><br><span class="line">            free((void *)old_ro);</span><br><span class="line"></span><br><span class="line">            addRemappedClass(cls, newCls);</span><br><span class="line"></span><br><span class="line">            replacing = cls;</span><br><span class="line">            cls = newCls;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    if (headerIsPreoptimized  &amp;&amp;  !replacing) &#123;</span><br><span class="line">        // class list built in shared cache</span><br><span class="line">        // fixme strict assert doesn&#x27;t work because of duplicates</span><br><span class="line">        // ASSERT(cls == getClass(name));</span><br><span class="line">        ASSERT(mangledName == nullptr || getClassExceptSomeSwift(mangledName));</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        if (mangledName) &#123; //some Swift generic classes can lazily generate their names</span><br><span class="line">            addNamedClass(cls, mangledName, replacing);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            Class meta = cls-&gt;ISA();</span><br><span class="line">            const class_ro_t *metaRO = meta-&gt;bits.safe_ro();</span><br><span class="line">            ASSERT(metaRO-&gt;getNonMetaclass() &amp;&amp; &quot;Metaclass with lazy name must have a pointer to the corresponding nonmetaclass.&quot;);</span><br><span class="line">            ASSERT(metaRO-&gt;getNonMetaclass() == cls &amp;&amp; &quot;Metaclass nonmetaclass pointer must equal the original class.&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        addClassTableEntry(cls);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // for future reference: shared cache never contains MH_BUNDLEs</span><br><span class="line">    if (headerIsBundle) &#123;</span><br><span class="line">        cls-&gt;data()-&gt;flags |= RO_FROM_BUNDLE;</span><br><span class="line">        cls-&gt;ISA()-&gt;data()-&gt;flags |= RO_FROM_BUNDLE;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    return cls;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* readProtocol</span><br><span class="line">* Read a protocol as written by a compiler.</span><br><span class="line">**********************************************************************/</span><br><span class="line">static void</span><br><span class="line">readProtocol(protocol_t *newproto, Class protocol_class,</span><br><span class="line">             NXMapTable *protocol_map, </span><br><span class="line">             bool headerIsPreoptimized, bool headerIsBundle)</span><br><span class="line">&#123;</span><br><span class="line">    // This is not enough to make protocols in unloaded bundles safe, </span><br><span class="line">    // but it does prevent crashes when looking up unrelated protocols.</span><br><span class="line">    auto insertFn = headerIsBundle ? NXMapKeyCopyingInsert : NXMapInsert;</span><br><span class="line"></span><br><span class="line">    protocol_t *oldproto = (protocol_t *)getProtocol(newproto-&gt;mangledName);</span><br><span class="line"></span><br><span class="line">    if (oldproto) &#123;</span><br><span class="line">        if (oldproto != newproto) &#123;</span><br><span class="line">            // Some other definition already won.</span><br><span class="line">            if (PrintProtocols) &#123;</span><br><span class="line">                _objc_inform(&quot;PROTOCOLS: protocol at %p is %s  &quot;</span><br><span class="line">                             &quot;(duplicate of %p)&quot;,</span><br><span class="line">                             newproto, oldproto-&gt;nameForLogging(), oldproto);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            // If we are a shared cache binary then we have a definition of this</span><br><span class="line">            // protocol, but if another one was chosen then we need to clear our</span><br><span class="line">            // isCanonical bit so that no-one trusts it.</span><br><span class="line">            // Note, if getProtocol returned a shared cache protocol then the</span><br><span class="line">            // canonical definition is already in the shared cache and we don&#x27;t</span><br><span class="line">            // need to do anything.</span><br><span class="line">            if (headerIsPreoptimized &amp;&amp; !oldproto-&gt;isCanonical()) &#123;</span><br><span class="line">                // Note newproto is an entry in our __objc_protolist section which</span><br><span class="line">                // for shared cache binaries points to the original protocol in</span><br><span class="line">                // that binary, not the shared cache uniqued one.</span><br><span class="line">                auto cacheproto = (protocol_t *)</span><br><span class="line">                    getSharedCachePreoptimizedProtocol(newproto-&gt;mangledName);</span><br><span class="line">                if (cacheproto &amp;&amp; cacheproto-&gt;isCanonical())</span><br><span class="line">                    cacheproto-&gt;clearIsCanonical();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    else if (headerIsPreoptimized) &#123;</span><br><span class="line">        // Shared cache initialized the protocol object itself, </span><br><span class="line">        // but in order to allow out-of-cache replacement we need </span><br><span class="line">        // to add it to the protocol table now.</span><br><span class="line"></span><br><span class="line">        protocol_t *cacheproto = (protocol_t *)</span><br><span class="line">            getPreoptimizedProtocol(newproto-&gt;mangledName);</span><br><span class="line">        protocol_t *installedproto;</span><br><span class="line">        if (cacheproto  &amp;&amp;  cacheproto != newproto) &#123;</span><br><span class="line">            // Another definition in the shared cache wins (because </span><br><span class="line">            // everything in the cache was fixed up to point to it).</span><br><span class="line">            installedproto = cacheproto;</span><br><span class="line">        &#125;</span><br><span class="line">        else &#123;</span><br><span class="line">            // This definition wins.</span><br><span class="line">            installedproto = newproto;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        ASSERT(installedproto-&gt;getIsa() == protocol_class);</span><br><span class="line">        ASSERT(installedproto-&gt;size &gt;= sizeof(protocol_t));</span><br><span class="line">        insertFn(protocol_map, installedproto-&gt;mangledName, </span><br><span class="line">                 installedproto);</span><br><span class="line">        </span><br><span class="line">        if (PrintProtocols) &#123;</span><br><span class="line">            _objc_inform(&quot;PROTOCOLS: protocol at %p is %s&quot;, </span><br><span class="line">                         installedproto, installedproto-&gt;nameForLogging());</span><br><span class="line">            if (newproto != installedproto) &#123;</span><br><span class="line">                _objc_inform(&quot;PROTOCOLS: protocol at %p is %s  &quot;</span><br><span class="line">                             &quot;(duplicate of %p)&quot;, </span><br><span class="line">                             newproto, installedproto-&gt;nameForLogging(), </span><br><span class="line">                             installedproto);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    else &#123;</span><br><span class="line">        // New protocol from an un-preoptimized image. Fix it up in place.</span><br><span class="line">        // fixme duplicate protocols from unloadable bundle</span><br><span class="line">        newproto-&gt;initIsa(protocol_class);  // fixme pinned</span><br><span class="line">        insertFn(protocol_map, newproto-&gt;mangledName, newproto);</span><br><span class="line">        if (PrintProtocols) &#123;</span><br><span class="line">            _objc_inform(&quot;PROTOCOLS: protocol at %p is %s&quot;,</span><br><span class="line">                         newproto, newproto-&gt;nameForLogging());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* _read_images</span><br><span class="line">* Perform initial processing of the headers in the linked </span><br><span class="line">* list beginning with headerList. </span><br><span class="line">*</span><br><span class="line">* Called by: map_images_nolock</span><br><span class="line">*</span><br><span class="line">* Locking: runtimeLock acquired by map_images</span><br><span class="line">**********************************************************************/</span><br><span class="line">void _read_images(header_info **hList, uint32_t hCount, int totalClasses, int unoptimizedTotalClasses)</span><br><span class="line">&#123;</span><br><span class="line">    header_info *hi;</span><br><span class="line">    uint32_t hIndex;</span><br><span class="line">    size_t count;</span><br><span class="line">    size_t i;</span><br><span class="line">    Class *resolvedFutureClasses = nil;</span><br><span class="line">    size_t resolvedFutureClassCount = 0;</span><br><span class="line">    static bool doneOnce;</span><br><span class="line">    bool launchTime = NO;</span><br><span class="line">    TimeLogger ts(PrintImageTimes);</span><br><span class="line"></span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line"></span><br><span class="line">#define EACH_HEADER \</span><br><span class="line">    hIndex = 0;         \</span><br><span class="line">    hIndex &lt; hCount &amp;&amp; (hi = hList[hIndex]); \</span><br><span class="line">    hIndex++</span><br><span class="line"></span><br><span class="line">    if (!doneOnce) &#123;</span><br><span class="line">        doneOnce = YES;</span><br><span class="line">        launchTime = YES;</span><br><span class="line"></span><br><span class="line">#if SUPPORT_NONPOINTER_ISA</span><br><span class="line">        // Disable non-pointer isa under some conditions.</span><br><span class="line"></span><br><span class="line"># if SUPPORT_INDEXED_ISA</span><br><span class="line">        // Disable nonpointer isa if any image contains old Swift code</span><br><span class="line">        for (EACH_HEADER) &#123;</span><br><span class="line">            if (hi-&gt;info()-&gt;containsSwift()  &amp;&amp;</span><br><span class="line">                hi-&gt;info()-&gt;swiftUnstableVersion() &lt; objc_image_info::SwiftVersion3)</span><br><span class="line">            &#123;</span><br><span class="line">                DisableNonpointerIsa = true;</span><br><span class="line">                if (PrintRawIsa) &#123;</span><br><span class="line">                    _objc_inform(&quot;RAW ISA: disabling non-pointer isa because &quot;</span><br><span class="line">                                 &quot;the app or a framework contains Swift code &quot;</span><br><span class="line">                                 &quot;older than Swift 3.0&quot;);</span><br><span class="line">                &#125;</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"># endif</span><br><span class="line"></span><br><span class="line"># if TARGET_OS_OSX</span><br><span class="line">        // Disable non-pointer isa if the app is too old</span><br><span class="line">        // (linked before OS X 10.11)</span><br><span class="line">//        if (!dyld_program_sdk_at_least(dyld_platform_version_macOS_10_11)) &#123;</span><br><span class="line">//            DisableNonpointerIsa = true;</span><br><span class="line">//            if (PrintRawIsa) &#123;</span><br><span class="line">//                _objc_inform(&quot;RAW ISA: disabling non-pointer isa because &quot;</span><br><span class="line">//                             &quot;the app is too old.&quot;);</span><br><span class="line">//            &#125;</span><br><span class="line">//        &#125;</span><br><span class="line"></span><br><span class="line">        // Disable non-pointer isa if the app has a __DATA,__objc_rawisa section</span><br><span class="line">        // New apps that load old extensions may need this.</span><br><span class="line">        for (EACH_HEADER) &#123;</span><br><span class="line">            if (hi-&gt;mhdr()-&gt;filetype != MH_EXECUTE) continue;</span><br><span class="line">            unsigned long size;</span><br><span class="line">            if (getsectiondata(hi-&gt;mhdr(), &quot;__DATA&quot;, &quot;__objc_rawisa&quot;, &amp;size)) &#123;</span><br><span class="line">                DisableNonpointerIsa = true;</span><br><span class="line">                if (PrintRawIsa) &#123;</span><br><span class="line">                    _objc_inform(&quot;RAW ISA: disabling non-pointer isa because &quot;</span><br><span class="line">                                 &quot;the app has a __DATA,__objc_rawisa section&quot;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            break;  // assume only one MH_EXECUTE image</span><br><span class="line">        &#125;</span><br><span class="line"># endif</span><br><span class="line"></span><br><span class="line">#endif</span><br><span class="line"></span><br><span class="line">        if (DisableTaggedPointers) &#123;</span><br><span class="line">            disableTaggedPointers();</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        initializeTaggedPointerObfuscator();</span><br><span class="line"></span><br><span class="line">        if (PrintConnecting) &#123;</span><br><span class="line">            _objc_inform(&quot;CLASS: found %d classes during launch&quot;, totalClasses);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // namedClasses</span><br><span class="line">        // Preoptimized classes don&#x27;t go in this table.</span><br><span class="line">        // 4/3 is NXMapTable&#x27;s load factor</span><br><span class="line">        int namedClassesSize = </span><br><span class="line">            (isPreoptimized() ? unoptimizedTotalClasses : totalClasses) * 4 / 3;</span><br><span class="line">        gdb_objc_realized_classes =</span><br><span class="line">            NXCreateMapTable(NXStrValueMapPrototype, namedClassesSize);</span><br><span class="line"></span><br><span class="line">        ts.log(&quot;IMAGE TIMES: first time tasks&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Fix up @selector references</span><br><span class="line">    static size_t UnfixedSelectors;</span><br><span class="line">    &#123;</span><br><span class="line">        mutex_locker_t lock(selLock);</span><br><span class="line">        for (EACH_HEADER) &#123;</span><br><span class="line">            if (hi-&gt;hasPreoptimizedSelectors()) continue;</span><br><span class="line"></span><br><span class="line">            bool isBundle = hi-&gt;isBundle();</span><br><span class="line">            SEL *sels = _getObjc2SelectorRefs(hi, &amp;count);</span><br><span class="line">            UnfixedSelectors += count;</span><br><span class="line">            for (i = 0; i &lt; count; i++) &#123;</span><br><span class="line">                const char *name = sel_cname(sels[i]);</span><br><span class="line">                SEL sel = sel_registerNameNoLock(name, isBundle);</span><br><span class="line">                if (sels[i] != sel) &#123;</span><br><span class="line">                    sels[i] = sel;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ts.log(&quot;IMAGE TIMES: fix up selector references&quot;);</span><br><span class="line"></span><br><span class="line">    // Discover classes. Fix up unresolved future classes. Mark bundle classes.</span><br><span class="line">    bool hasDyldRoots = dyld_shared_cache_some_image_overridden();</span><br><span class="line"></span><br><span class="line">    for (EACH_HEADER) &#123;</span><br><span class="line">        if (! mustReadClasses(hi, hasDyldRoots)) &#123;</span><br><span class="line">            // Image is sufficiently optimized that we need not call readClass()</span><br><span class="line">            continue;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        classref_t const *classlist = _getObjc2ClassList(hi, &amp;count);</span><br><span class="line"></span><br><span class="line">        bool headerIsBundle = hi-&gt;isBundle();</span><br><span class="line">        bool headerIsPreoptimized = hi-&gt;hasPreoptimizedClasses();</span><br><span class="line"></span><br><span class="line">        for (i = 0; i &lt; count; i++) &#123;</span><br><span class="line">            Class cls = (Class)classlist[i];</span><br><span class="line">            Class newCls = readClass(cls, headerIsBundle, headerIsPreoptimized);</span><br><span class="line"></span><br><span class="line">            if (newCls != cls  &amp;&amp;  newCls) &#123;</span><br><span class="line">                // Class was moved but not deleted. Currently this occurs </span><br><span class="line">                // only when the new class resolved a future class.</span><br><span class="line">                // Non-lazily realize the class below.</span><br><span class="line">                resolvedFutureClasses = (Class *)</span><br><span class="line">                    realloc(resolvedFutureClasses, </span><br><span class="line">                            (resolvedFutureClassCount+1) * sizeof(Class));</span><br><span class="line">                resolvedFutureClasses[resolvedFutureClassCount++] = newCls;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ts.log(&quot;IMAGE TIMES: discover classes&quot;);</span><br><span class="line"></span><br><span class="line">    // Fix up remapped classes</span><br><span class="line">    // Class list and nonlazy class list remain unremapped.</span><br><span class="line">    // Class refs and super refs are remapped for message dispatching.</span><br><span class="line">    </span><br><span class="line">    if (!noClassesRemapped()) &#123;</span><br><span class="line">        for (EACH_HEADER) &#123;</span><br><span class="line">            Class *classrefs = _getObjc2ClassRefs(hi, &amp;count);</span><br><span class="line">            for (i = 0; i &lt; count; i++) &#123;</span><br><span class="line">                remapClassRef(&amp;classrefs[i]);</span><br><span class="line">            &#125;</span><br><span class="line">            // fixme why doesn&#x27;t test future1 catch the absence of this?</span><br><span class="line">            classrefs = _getObjc2SuperRefs(hi, &amp;count);</span><br><span class="line">            for (i = 0; i &lt; count; i++) &#123;</span><br><span class="line">                remapClassRef(&amp;classrefs[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ts.log(&quot;IMAGE TIMES: remap classes&quot;);</span><br><span class="line"></span><br><span class="line">#if SUPPORT_FIXUP</span><br><span class="line">    // Fix up old objc_msgSend_fixup call sites</span><br><span class="line">    for (EACH_HEADER) &#123;</span><br><span class="line">        message_ref_t *refs = _getObjc2MessageRefs(hi, &amp;count);</span><br><span class="line">        if (count == 0) continue;</span><br><span class="line"></span><br><span class="line">        if (PrintVtables) &#123;</span><br><span class="line">            _objc_inform(&quot;VTABLES: repairing %zu unsupported vtable dispatch &quot;</span><br><span class="line">                         &quot;call sites in %s&quot;, count, hi-&gt;fname());</span><br><span class="line">        &#125;</span><br><span class="line">        for (i = 0; i &lt; count; i++) &#123;</span><br><span class="line">            fixupMessageRef(refs+i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ts.log(&quot;IMAGE TIMES: fix up objc_msgSend_fixup&quot;);</span><br><span class="line">#endif</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    // Discover protocols. Fix up protocol refs.</span><br><span class="line">    for (EACH_HEADER) &#123;</span><br><span class="line">        extern objc_class OBJC_CLASS_$_Protocol;</span><br><span class="line">        Class cls = (Class)&amp;OBJC_CLASS_$_Protocol;</span><br><span class="line">        ASSERT(cls);</span><br><span class="line">        NXMapTable *protocol_map = protocols();</span><br><span class="line">        bool isPreoptimized = hi-&gt;hasPreoptimizedProtocols();</span><br><span class="line"></span><br><span class="line">        // Skip reading protocols if this is an image from the shared cache</span><br><span class="line">        // and we support roots</span><br><span class="line">        // Note, after launch we do need to walk the protocol as the protocol</span><br><span class="line">        // in the shared cache is marked with isCanonical() and that may not</span><br><span class="line">        // be true if some non-shared cache binary was chosen as the canonical</span><br><span class="line">        // definition</span><br><span class="line">        if (launchTime &amp;&amp; isPreoptimized) &#123;</span><br><span class="line">            if (PrintProtocols) &#123;</span><br><span class="line">                _objc_inform(&quot;PROTOCOLS: Skipping reading protocols in image: %s&quot;,</span><br><span class="line">                             hi-&gt;fname());</span><br><span class="line">            &#125;</span><br><span class="line">            continue;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        bool isBundle = hi-&gt;isBundle();</span><br><span class="line"></span><br><span class="line">        protocol_t * const *protolist = _getObjc2ProtocolList(hi, &amp;count);</span><br><span class="line">        for (i = 0; i &lt; count; i++) &#123;</span><br><span class="line">            readProtocol(protolist[i], cls, protocol_map, </span><br><span class="line">                         isPreoptimized, isBundle);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ts.log(&quot;IMAGE TIMES: discover protocols&quot;);</span><br><span class="line"></span><br><span class="line">    // Fix up @protocol references</span><br><span class="line">    // Preoptimized images may have the right </span><br><span class="line">    // answer already but we don&#x27;t know for sure.</span><br><span class="line">    for (EACH_HEADER) &#123;</span><br><span class="line">        // At launch time, we know preoptimized image refs are pointing at the</span><br><span class="line">        // shared cache definition of a protocol.  We can skip the check on</span><br><span class="line">        // launch, but have to visit @protocol refs for shared cache images</span><br><span class="line">        // loaded later.</span><br><span class="line">        if (launchTime &amp;&amp; hi-&gt;isPreoptimized())</span><br><span class="line">            continue;</span><br><span class="line">        protocol_t **protolist = _getObjc2ProtocolRefs(hi, &amp;count);</span><br><span class="line">        for (i = 0; i &lt; count; i++) &#123;</span><br><span class="line">            remapProtocolRef(&amp;protolist[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ts.log(&quot;IMAGE TIMES: fix up @protocol references&quot;);</span><br><span class="line"></span><br><span class="line">    // Discover categories. Only do this after the initial category</span><br><span class="line">    // attachment has been done. For categories present at startup,</span><br><span class="line">    // discovery is deferred until the first load_images call after</span><br><span class="line">    // the call to _dyld_objc_notify_register completes. rdar://problem/53119145</span><br><span class="line">    if (didInitialAttachCategories) &#123;</span><br><span class="line">        for (EACH_HEADER) &#123;</span><br><span class="line">            load_categories_nolock(hi);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ts.log(&quot;IMAGE TIMES: discover categories&quot;);</span><br><span class="line"></span><br><span class="line">    // Category discovery MUST BE Late to avoid potential races</span><br><span class="line">    // when other threads call the new category code before</span><br><span class="line">    // this thread finishes its fixups.</span><br><span class="line"></span><br><span class="line">    // +load handled by prepare_load_methods()</span><br><span class="line"></span><br><span class="line">    // Realize non-lazy classes (for +load methods and static instances)</span><br><span class="line">    for (EACH_HEADER) &#123;</span><br><span class="line">        classref_t const *classlist = hi-&gt;nlclslist(&amp;count);</span><br><span class="line">        for (i = 0; i &lt; count; i++) &#123;</span><br><span class="line">            Class cls = remapClass(classlist[i]);</span><br><span class="line">            if (!cls) continue;</span><br><span class="line"></span><br><span class="line">            addClassTableEntry(cls);</span><br><span class="line"></span><br><span class="line">            if (cls-&gt;isSwiftStable()) &#123;</span><br><span class="line">                if (cls-&gt;swiftMetadataInitializer()) &#123;</span><br><span class="line">                    _objc_fatal(&quot;Swift class %s with a metadata initializer &quot;</span><br><span class="line">                                &quot;is not allowed to be non-lazy&quot;,</span><br><span class="line">                                cls-&gt;nameForLogging());</span><br><span class="line">                &#125;</span><br><span class="line">                // fixme also disallow relocatable classes</span><br><span class="line">                // We can&#x27;t disallow all Swift classes because of</span><br><span class="line">                // classes like Swift.__EmptyArrayStorage</span><br><span class="line">            &#125;</span><br><span class="line">            realizeClassWithoutSwift(cls, nil);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ts.log(&quot;IMAGE TIMES: realize non-lazy classes&quot;);</span><br><span class="line"></span><br><span class="line">    // Realize newly-resolved future classes, in case CF manipulates them</span><br><span class="line">    if (resolvedFutureClasses) &#123;</span><br><span class="line">        for (i = 0; i &lt; resolvedFutureClassCount; i++) &#123;</span><br><span class="line">            Class cls = resolvedFutureClasses[i];</span><br><span class="line">            if (cls-&gt;isSwiftStable()) &#123;</span><br><span class="line">                _objc_fatal(&quot;Swift class is not allowed to be future&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">            realizeClassWithoutSwift(cls, nil);</span><br><span class="line">            cls-&gt;setInstancesRequireRawIsaRecursively(false/*inherited*/);</span><br><span class="line">        &#125;</span><br><span class="line">        free(resolvedFutureClasses);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ts.log(&quot;IMAGE TIMES: realize future classes&quot;);</span><br><span class="line"></span><br><span class="line">    if (DebugNonFragileIvars) &#123;</span><br><span class="line">        realizeAllClasses();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    // Print preoptimization statistics</span><br><span class="line">    if (PrintPreopt) &#123;</span><br><span class="line">        static unsigned int PreoptTotalMethodLists;</span><br><span class="line">        static unsigned int PreoptOptimizedMethodLists;</span><br><span class="line">        static unsigned int PreoptTotalClasses;</span><br><span class="line">        static unsigned int PreoptOptimizedClasses;</span><br><span class="line"></span><br><span class="line">        for (EACH_HEADER) &#123;</span><br><span class="line">            if (hi-&gt;hasPreoptimizedSelectors()) &#123;</span><br><span class="line">                _objc_inform(&quot;PREOPTIMIZATION: honoring preoptimized selectors &quot;</span><br><span class="line">                             &quot;in %s&quot;, hi-&gt;fname());</span><br><span class="line">            &#125;</span><br><span class="line">            else if (hi-&gt;info()-&gt;optimizedByDyld()) &#123;</span><br><span class="line">                _objc_inform(&quot;PREOPTIMIZATION: IGNORING preoptimized selectors &quot;</span><br><span class="line">                             &quot;in %s&quot;, hi-&gt;fname());</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            classref_t const *classlist = _getObjc2ClassList(hi, &amp;count);</span><br><span class="line">            for (i = 0; i &lt; count; i++) &#123;</span><br><span class="line">                Class cls = remapClass(classlist[i]);</span><br><span class="line">                if (!cls) continue;</span><br><span class="line"></span><br><span class="line">                PreoptTotalClasses++;</span><br><span class="line">                if (hi-&gt;hasPreoptimizedClasses()) &#123;</span><br><span class="line">                    PreoptOptimizedClasses++;</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">                const method_list_t *mlist;</span><br><span class="line">                if ((mlist = cls-&gt;bits.safe_ro()-&gt;baseMethods())) &#123;</span><br><span class="line">                    PreoptTotalMethodLists++;</span><br><span class="line">                    if (mlist-&gt;isFixedUp()) &#123;</span><br><span class="line">                        PreoptOptimizedMethodLists++;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                if ((mlist = cls-&gt;ISA()-&gt;bits.safe_ro()-&gt;baseMethods())) &#123;</span><br><span class="line">                    PreoptTotalMethodLists++;</span><br><span class="line">                    if (mlist-&gt;isFixedUp()) &#123;</span><br><span class="line">                        PreoptOptimizedMethodLists++;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        _objc_inform(&quot;PREOPTIMIZATION: %zu selector references not &quot;</span><br><span class="line">                     &quot;pre-optimized&quot;, UnfixedSelectors);</span><br><span class="line">        _objc_inform(&quot;PREOPTIMIZATION: %u/%u (%.3g%%) method lists pre-sorted&quot;,</span><br><span class="line">                     PreoptOptimizedMethodLists, PreoptTotalMethodLists, </span><br><span class="line">                     PreoptTotalMethodLists</span><br><span class="line">                     ? 100.0*PreoptOptimizedMethodLists/PreoptTotalMethodLists </span><br><span class="line">                     : 0.0);</span><br><span class="line">        _objc_inform(&quot;PREOPTIMIZATION: %u/%u (%.3g%%) classes pre-registered&quot;,</span><br><span class="line">                     PreoptOptimizedClasses, PreoptTotalClasses, </span><br><span class="line">                     PreoptTotalClasses </span><br><span class="line">                     ? 100.0*PreoptOptimizedClasses/PreoptTotalClasses</span><br><span class="line">                     : 0.0);</span><br><span class="line">        _objc_inform(&quot;PREOPTIMIZATION: %zu protocol references not &quot;</span><br><span class="line">                     &quot;pre-optimized&quot;, UnfixedProtocolReferences);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">#undef EACH_HEADER</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* prepare_load_methods</span><br><span class="line">* Schedule +load for classes in this image, any un-+load-ed </span><br><span class="line">* superclasses in other images, and any categories in this image.</span><br><span class="line">**********************************************************************/</span><br><span class="line">// Recursively schedule +load for cls and any un-+load-ed superclasses.</span><br><span class="line">// cls must already be connected.</span><br><span class="line">static void schedule_class_load(Class cls)</span><br><span class="line">&#123;</span><br><span class="line">    if (!cls) return;</span><br><span class="line">    ASSERT(cls-&gt;isRealized());  // _read_images should realize</span><br><span class="line"></span><br><span class="line">    if (cls-&gt;data()-&gt;flags &amp; RW_LOADED) return;</span><br><span class="line"></span><br><span class="line">    // Ensure superclass-first ordering</span><br><span class="line">    schedule_class_load(cls-&gt;getSuperclass());</span><br><span class="line"></span><br><span class="line">    add_class_to_loadable_list(cls);</span><br><span class="line">    cls-&gt;setInfo(RW_LOADED); </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// Quick scan for +load methods that doesn&#x27;t take a lock.</span><br><span class="line">bool hasLoadMethods(const headerType *mhdr)</span><br><span class="line">&#123;</span><br><span class="line">    size_t count;</span><br><span class="line">    if (_getObjc2NonlazyClassList(mhdr, &amp;count)  &amp;&amp;  count &gt; 0) return true;</span><br><span class="line">    if (_getObjc2NonlazyCategoryList(mhdr, &amp;count)  &amp;&amp;  count &gt; 0) return true;</span><br><span class="line">    return false;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void prepare_load_methods(const headerType *mhdr)</span><br><span class="line">&#123;</span><br><span class="line">    size_t count, i;</span><br><span class="line"></span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line"></span><br><span class="line">    classref_t const *classlist = </span><br><span class="line">        _getObjc2NonlazyClassList(mhdr, &amp;count);</span><br><span class="line">    for (i = 0; i &lt; count; i++) &#123;</span><br><span class="line">        schedule_class_load(remapClass(classlist[i]));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    category_t * const *categorylist = _getObjc2NonlazyCategoryList(mhdr, &amp;count);</span><br><span class="line">    for (i = 0; i &lt; count; i++) &#123;</span><br><span class="line">        category_t *cat = categorylist[i];</span><br><span class="line">        Class cls = remapClass(cat-&gt;cls);</span><br><span class="line">        if (!cls) continue;  // category for ignored weak-linked class</span><br><span class="line">        if (cls-&gt;isSwiftStable()) &#123;</span><br><span class="line">            _objc_fatal(&quot;Swift class extensions and categories on Swift &quot;</span><br><span class="line">                        &quot;classes are not allowed to have +load methods&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        realizeClassWithoutSwift(cls, nil);</span><br><span class="line">        ASSERT(cls-&gt;ISA()-&gt;isRealized());</span><br><span class="line">        add_category_to_loadable_list(cat);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* _unload_image</span><br><span class="line">* Only handles MH_BUNDLE for now.</span><br><span class="line">* Locking: write-lock and loadMethodLock acquired by unmap_image</span><br><span class="line">**********************************************************************/</span><br><span class="line">void _unload_image(header_info *hi)</span><br><span class="line">&#123;</span><br><span class="line">    size_t count, i;</span><br><span class="line"></span><br><span class="line">    loadMethodLock.assertLocked();</span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line"></span><br><span class="line">    // Unload unattached categories and categories waiting for +load.</span><br><span class="line"></span><br><span class="line">    // Ignore __objc_catlist2. We don&#x27;t support unloading Swift</span><br><span class="line">    // and we never will.</span><br><span class="line">    category_t * const *catlist = hi-&gt;catlist(&amp;count);</span><br><span class="line">    for (i = 0; i &lt; count; i++) &#123;</span><br><span class="line">        category_t *cat = catlist[i];</span><br><span class="line">        Class cls = remapClass(cat-&gt;cls);</span><br><span class="line">        if (!cls) continue;  // category for ignored weak-linked class</span><br><span class="line"></span><br><span class="line">        // fixme for MH_DYLIB cat&#x27;s class may have been unloaded already</span><br><span class="line"></span><br><span class="line">        // unattached list</span><br><span class="line">        objc::unattachedCategories.eraseCategoryForClass(cat, cls);</span><br><span class="line"></span><br><span class="line">        // +load queue</span><br><span class="line">        remove_category_from_loadable_list(cat);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Unload classes.</span><br><span class="line"></span><br><span class="line">    // Gather classes from both __DATA,__objc_clslist </span><br><span class="line">    // and __DATA,__objc_nlclslist. arclite&#x27;s hack puts a class in the latter</span><br><span class="line">    // only, and we need to unload that class if we unload an arclite image.</span><br><span class="line"></span><br><span class="line">    objc::DenseSet&lt;Class&gt; classes&#123;&#125;;</span><br><span class="line">    classref_t const *classlist;</span><br><span class="line"></span><br><span class="line">    classlist = _getObjc2ClassList(hi, &amp;count);</span><br><span class="line">    for (i = 0; i &lt; count; i++) &#123;</span><br><span class="line">        Class cls = remapClass(classlist[i]);</span><br><span class="line">        if (cls) classes.insert(cls);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    classlist = hi-&gt;nlclslist(&amp;count);</span><br><span class="line">    for (i = 0; i &lt; count; i++) &#123;</span><br><span class="line">        Class cls = remapClass(classlist[i]);</span><br><span class="line">        if (cls) classes.insert(cls);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // First detach classes from each other. Then free each class.</span><br><span class="line">    // This avoid bugs where this loop unloads a subclass before its superclass</span><br><span class="line"></span><br><span class="line">    for (Class cls: classes) &#123;</span><br><span class="line">        remove_class_from_loadable_list(cls);</span><br><span class="line">        detach_class(cls-&gt;ISA(), YES);</span><br><span class="line">        detach_class(cls, NO);</span><br><span class="line">    &#125;</span><br><span class="line">    for (Class cls: classes) &#123;</span><br><span class="line">        free_class(cls-&gt;ISA());</span><br><span class="line">        free_class(cls);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // XXX FIXME -- Clean up protocols:</span><br><span class="line">    // &lt;rdar://problem/9033191&gt; Support unloading protocols at dylib/image unload time</span><br><span class="line"></span><br><span class="line">    // fixme DebugUnload</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* method_getDescription</span><br><span class="line">* Returns a pointer to this method&#x27;s objc_method_description.</span><br><span class="line">* Locking: none</span><br><span class="line">**********************************************************************/</span><br><span class="line">struct objc_method_description *</span><br><span class="line">method_getDescription(Method m)</span><br><span class="line">&#123;</span><br><span class="line">    if (!m) return nil;</span><br><span class="line">    return m-&gt;getDescription();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">IMP </span><br><span class="line">method_getImplementation(Method m)</span><br><span class="line">&#123;</span><br><span class="line">    return m ? m-&gt;imp(true) : nil;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">IMPAndSEL _method_getImplementationAndName(Method m)</span><br><span class="line">&#123;</span><br><span class="line">    return &#123; m-&gt;imp(true), m-&gt;name() &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* method_getName</span><br><span class="line">* Returns this method&#x27;s selector.</span><br><span class="line">* The method must not be nil.</span><br><span class="line">* The method must already have been fixed-up.</span><br><span class="line">* Locking: none</span><br><span class="line">**********************************************************************/</span><br><span class="line">SEL </span><br><span class="line">method_getName(Method m)</span><br><span class="line">&#123;</span><br><span class="line">    if (!m) return nil;</span><br><span class="line"></span><br><span class="line">    ASSERT(m-&gt;name() == sel_registerName(sel_getName(m-&gt;name())));</span><br><span class="line">    return m-&gt;name();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* method_getTypeEncoding</span><br><span class="line">* Returns this method&#x27;s old-style type encoding string.</span><br><span class="line">* The method must not be nil.</span><br><span class="line">* Locking: none</span><br><span class="line">**********************************************************************/</span><br><span class="line">const char *</span><br><span class="line">method_getTypeEncoding(Method m)</span><br><span class="line">&#123;</span><br><span class="line">    if (!m) return nil;</span><br><span class="line">    return m-&gt;types();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* method_setImplementation</span><br><span class="line">* Sets this method&#x27;s implementation to imp.</span><br><span class="line">* The previous implementation is returned.</span><br><span class="line">**********************************************************************/</span><br><span class="line">static IMP </span><br><span class="line">_method_setImplementation(Class cls, method_t *m, IMP imp)</span><br><span class="line">&#123;</span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line"></span><br><span class="line">    if (!m) return nil;</span><br><span class="line">    if (!imp) return nil;</span><br><span class="line"></span><br><span class="line">    IMP old = m-&gt;imp(false);</span><br><span class="line">    SEL sel = m-&gt;name();</span><br><span class="line"></span><br><span class="line">    m-&gt;setImp(imp);</span><br><span class="line"></span><br><span class="line">    // Cache updates are slow if cls is nil (i.e. unknown)</span><br><span class="line">    // RR/AWZ updates are slow if cls is nil (i.e. unknown)</span><br><span class="line">    // fixme build list of classes whose Methods are known externally?</span><br><span class="line"></span><br><span class="line">    flushCaches(cls, __func__, [sel, old](Class c)&#123;</span><br><span class="line">        return c-&gt;cache.shouldFlush(sel, old);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    adjustCustomFlagsForMethodChange(cls, m);</span><br><span class="line"></span><br><span class="line">    return old;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">IMP </span><br><span class="line">method_setImplementation(Method m, IMP imp)</span><br><span class="line">&#123;</span><br><span class="line">    // Don&#x27;t know the class - will be slow if RR/AWZ are affected</span><br><span class="line">    // fixme build list of classes whose Methods are known externally?</span><br><span class="line">    mutex_locker_t lock(runtimeLock);</span><br><span class="line">    return _method_setImplementation(Nil, m, imp);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">extern void _method_setImplementationRawUnsafe(Method m, IMP imp)</span><br><span class="line">&#123;</span><br><span class="line">    mutex_locker_t lock(runtimeLock);</span><br><span class="line">    m-&gt;setImp(imp);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">void method_exchangeImplementations(Method m1, Method m2)</span><br><span class="line">&#123;</span><br><span class="line">    if (!m1  ||  !m2) return;</span><br><span class="line"></span><br><span class="line">    mutex_locker_t lock(runtimeLock);</span><br><span class="line"></span><br><span class="line">    IMP imp1 = m1-&gt;imp(false);</span><br><span class="line">    IMP imp2 = m2-&gt;imp(false);</span><br><span class="line">    SEL sel1 = m1-&gt;name();</span><br><span class="line">    SEL sel2 = m2-&gt;name();</span><br><span class="line"></span><br><span class="line">    m1-&gt;setImp(imp2);</span><br><span class="line">    m2-&gt;setImp(imp1);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    // RR/AWZ updates are slow because class is unknown</span><br><span class="line">    // Cache updates are slow because class is unknown</span><br><span class="line">    // fixme build list of classes whose Methods are known externally?</span><br><span class="line"></span><br><span class="line">    flushCaches(nil, __func__, [sel1, sel2, imp1, imp2](Class c)&#123;</span><br><span class="line">        return c-&gt;cache.shouldFlush(sel1, imp1) || c-&gt;cache.shouldFlush(sel2, imp2);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    adjustCustomFlagsForMethodChange(nil, m1);</span><br><span class="line">    adjustCustomFlagsForMethodChange(nil, m2);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* ivar_getOffset</span><br><span class="line">* fixme</span><br><span class="line">* Locking: none</span><br><span class="line">**********************************************************************/</span><br><span class="line">ptrdiff_t</span><br><span class="line">ivar_getOffset(Ivar ivar)</span><br><span class="line">&#123;</span><br><span class="line">    if (!ivar) return 0;</span><br><span class="line">    return *ivar-&gt;offset;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* ivar_getName</span><br><span class="line">* fixme</span><br><span class="line">* Locking: none</span><br><span class="line">**********************************************************************/</span><br><span class="line">const char *</span><br><span class="line">ivar_getName(Ivar ivar)</span><br><span class="line">&#123;</span><br><span class="line">    if (!ivar) return nil;</span><br><span class="line">    return ivar-&gt;name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* ivar_getTypeEncoding</span><br><span class="line">* fixme</span><br><span class="line">* Locking: none</span><br><span class="line">**********************************************************************/</span><br><span class="line">const char *</span><br><span class="line">ivar_getTypeEncoding(Ivar ivar)</span><br><span class="line">&#123;</span><br><span class="line">    if (!ivar) return nil;</span><br><span class="line">    return ivar-&gt;type;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">const char *property_getName(objc_property_t prop)</span><br><span class="line">&#123;</span><br><span class="line">    return prop-&gt;name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">const char *property_getAttributes(objc_property_t prop)</span><br><span class="line">&#123;</span><br><span class="line">    return prop-&gt;attributes;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">objc_property_attribute_t *property_copyAttributeList(objc_property_t prop, </span><br><span class="line">                                                      unsigned int *outCount)</span><br><span class="line">&#123;</span><br><span class="line">    if (!prop) &#123;</span><br><span class="line">        if (outCount) *outCount = 0;</span><br><span class="line">        return nil;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    mutex_locker_t lock(runtimeLock);</span><br><span class="line">    return copyPropertyAttributeList(prop-&gt;attributes,outCount);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">char * property_copyAttributeValue(objc_property_t prop, const char *name)</span><br><span class="line">&#123;</span><br><span class="line">    if (!prop  ||  !name  ||  *name == &#x27;\0&#x27;) return nil;</span><br><span class="line">    </span><br><span class="line">    mutex_locker_t lock(runtimeLock);</span><br><span class="line">    return copyPropertyAttributeValue(prop-&gt;attributes, name);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* getExtendedTypesIndexesForMethod</span><br><span class="line">* Returns:</span><br><span class="line">* a is the count of methods in all method lists before m&#x27;s method list</span><br><span class="line">* b is the index of m in m&#x27;s method list</span><br><span class="line">* a+b is the index of m&#x27;s extended types in the extended types array</span><br><span class="line">**********************************************************************/</span><br><span class="line">static void getExtendedTypesIndexesForMethod(protocol_t *proto, const method_t *m, bool isRequiredMethod, bool isInstanceMethod, uint32_t&amp; a, uint32_t &amp;b)</span><br><span class="line">&#123;</span><br><span class="line">    a = 0;</span><br><span class="line"></span><br><span class="line">    if (proto-&gt;instanceMethods) &#123;</span><br><span class="line">        if (isRequiredMethod &amp;&amp; isInstanceMethod) &#123;</span><br><span class="line">            b = proto-&gt;instanceMethods-&gt;indexOfMethod(m);</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line">        a += proto-&gt;instanceMethods-&gt;count;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (proto-&gt;classMethods) &#123;</span><br><span class="line">        if (isRequiredMethod &amp;&amp; !isInstanceMethod) &#123;</span><br><span class="line">            b = proto-&gt;classMethods-&gt;indexOfMethod(m);</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line">        a += proto-&gt;classMethods-&gt;count;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (proto-&gt;optionalInstanceMethods) &#123;</span><br><span class="line">        if (!isRequiredMethod &amp;&amp; isInstanceMethod) &#123;</span><br><span class="line">            b = proto-&gt;optionalInstanceMethods-&gt;indexOfMethod(m);</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line">        a += proto-&gt;optionalInstanceMethods-&gt;count;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (proto-&gt;optionalClassMethods) &#123;</span><br><span class="line">        if (!isRequiredMethod &amp;&amp; !isInstanceMethod) &#123;</span><br><span class="line">            b = proto-&gt;optionalClassMethods-&gt;indexOfMethod(m);</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line">        a += proto-&gt;optionalClassMethods-&gt;count;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* getExtendedTypesIndexForMethod</span><br><span class="line">* Returns the index of m&#x27;s extended types in proto&#x27;s extended types array.</span><br><span class="line">**********************************************************************/</span><br><span class="line">static uint32_t getExtendedTypesIndexForMethod(protocol_t *proto, const method_t *m, bool isRequiredMethod, bool isInstanceMethod)</span><br><span class="line">&#123;</span><br><span class="line">    uint32_t a;</span><br><span class="line">    uint32_t b;</span><br><span class="line">    getExtendedTypesIndexesForMethod(proto, m, isRequiredMethod, </span><br><span class="line">                                     isInstanceMethod, a, b);</span><br><span class="line">    return a + b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* fixupProtocolMethodList</span><br><span class="line">* Fixes up a single method list in a protocol.</span><br><span class="line">**********************************************************************/</span><br><span class="line">static void</span><br><span class="line">fixupProtocolMethodList(protocol_t *proto, method_list_t *mlist,  </span><br><span class="line">                        bool required, bool instance)</span><br><span class="line">&#123;</span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line"></span><br><span class="line">    if (!mlist) return;</span><br><span class="line">    if (mlist-&gt;isFixedUp()) return;</span><br><span class="line"></span><br><span class="line">    const char **extTypes = proto-&gt;extendedMethodTypes();</span><br><span class="line">    fixupMethodList(mlist, true/*always copy for simplicity*/,</span><br><span class="line">                    !extTypes/*sort if no extended method types*/);</span><br><span class="line">    </span><br><span class="line">    if (extTypes &amp;&amp; !mlist-&gt;isSmallList()) &#123;</span><br><span class="line">        // Sort method list and extended method types together.</span><br><span class="line">        // fixupMethodList() can&#x27;t do this.</span><br><span class="line">        // fixme COW stomp</span><br><span class="line">        uint32_t count = mlist-&gt;count;</span><br><span class="line">        uint32_t prefix;</span><br><span class="line">        uint32_t junk;</span><br><span class="line">        getExtendedTypesIndexesForMethod(proto, &amp;mlist-&gt;get(0), </span><br><span class="line">                                         required, instance, prefix, junk);</span><br><span class="line">        for (uint32_t i = 0; i &lt; count; i++) &#123;</span><br><span class="line">            for (uint32_t j = i+1; j &lt; count; j++) &#123;</span><br><span class="line">                auto&amp; mi = mlist-&gt;get(i).big();</span><br><span class="line">                auto&amp; mj = mlist-&gt;get(j).big();</span><br><span class="line">                if (mi.name &gt; mj.name) &#123;</span><br><span class="line">                    std::swap(mi, mj);</span><br><span class="line">                    std::swap(extTypes[prefix+i], extTypes[prefix+j]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* fixupProtocol</span><br><span class="line">* Fixes up all of a protocol&#x27;s method lists.</span><br><span class="line">**********************************************************************/</span><br><span class="line">static void </span><br><span class="line">fixupProtocol(protocol_t *proto)</span><br><span class="line">&#123;</span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line"></span><br><span class="line">    if (proto-&gt;protocols) &#123;</span><br><span class="line">        for (uintptr_t i = 0; i &lt; proto-&gt;protocols-&gt;count; i++) &#123;</span><br><span class="line">            protocol_t *sub = remapProtocol(proto-&gt;protocols-&gt;list[i]);</span><br><span class="line">            if (!sub-&gt;isFixedUp()) fixupProtocol(sub);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    fixupProtocolMethodList(proto, proto-&gt;instanceMethods, YES, YES);</span><br><span class="line">    fixupProtocolMethodList(proto, proto-&gt;classMethods, YES, NO);</span><br><span class="line">    fixupProtocolMethodList(proto, proto-&gt;optionalInstanceMethods, NO, YES);</span><br><span class="line">    fixupProtocolMethodList(proto, proto-&gt;optionalClassMethods, NO, NO);</span><br><span class="line"></span><br><span class="line">    // fixme memory barrier so we can check this with no lock</span><br><span class="line">    proto-&gt;setFixedUp();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* fixupProtocolIfNeeded</span><br><span class="line">* Fixes up all of a protocol&#x27;s method lists if they aren&#x27;t fixed up already.</span><br><span class="line">* Locking: write-locks runtimeLock.</span><br><span class="line">**********************************************************************/</span><br><span class="line">static void </span><br><span class="line">fixupProtocolIfNeeded(protocol_t *proto)</span><br><span class="line">&#123;</span><br><span class="line">    runtimeLock.assertUnlocked();</span><br><span class="line">    ASSERT(proto);</span><br><span class="line"></span><br><span class="line">    if (!proto-&gt;isFixedUp()) &#123;</span><br><span class="line">        mutex_locker_t lock(runtimeLock);</span><br><span class="line">        fixupProtocol(proto);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">static method_list_t *</span><br><span class="line">getProtocolMethodList(protocol_t *proto, bool required, bool instance)</span><br><span class="line">&#123;</span><br><span class="line">    method_list_t **mlistp = nil;</span><br><span class="line">    if (required) &#123;</span><br><span class="line">        if (instance) &#123;</span><br><span class="line">            mlistp = &amp;proto-&gt;instanceMethods;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            mlistp = &amp;proto-&gt;classMethods;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        if (instance) &#123;</span><br><span class="line">            mlistp = &amp;proto-&gt;optionalInstanceMethods;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            mlistp = &amp;proto-&gt;optionalClassMethods;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return *mlistp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* protocol_getMethod_nolock</span><br><span class="line">* Locking: runtimeLock must be held by the caller</span><br><span class="line">**********************************************************************/</span><br><span class="line">static method_t *</span><br><span class="line">protocol_getMethod_nolock(protocol_t *proto, SEL sel, </span><br><span class="line">                          bool isRequiredMethod, bool isInstanceMethod, </span><br><span class="line">                          bool recursive)</span><br><span class="line">&#123;</span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line"></span><br><span class="line">    if (!proto  ||  !sel) return nil;</span><br><span class="line"></span><br><span class="line">    ASSERT(proto-&gt;isFixedUp());</span><br><span class="line"></span><br><span class="line">    method_list_t *mlist = </span><br><span class="line">        getProtocolMethodList(proto, isRequiredMethod, isInstanceMethod);</span><br><span class="line">    if (mlist) &#123;</span><br><span class="line">        method_t *m = search_method_list(mlist, sel);</span><br><span class="line">        if (m) return m;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (recursive  &amp;&amp;  proto-&gt;protocols) &#123;</span><br><span class="line">        method_t *m;</span><br><span class="line">        for (uint32_t i = 0; i &lt; proto-&gt;protocols-&gt;count; i++) &#123;</span><br><span class="line">            protocol_t *realProto = remapProtocol(proto-&gt;protocols-&gt;list[i]);</span><br><span class="line">            m = protocol_getMethod_nolock(realProto, sel, </span><br><span class="line">                                          isRequiredMethod, isInstanceMethod, </span><br><span class="line">                                          true);</span><br><span class="line">            if (m) return m;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return nil;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* protocol_getMethod</span><br><span class="line">* fixme</span><br><span class="line">* Locking: acquires runtimeLock</span><br><span class="line">**********************************************************************/</span><br><span class="line">Method </span><br><span class="line">protocol_getMethod(protocol_t *proto, SEL sel, bool isRequiredMethod, bool isInstanceMethod, bool recursive)</span><br><span class="line">&#123;</span><br><span class="line">    if (!proto) return nil;</span><br><span class="line">    fixupProtocolIfNeeded(proto);</span><br><span class="line"></span><br><span class="line">    mutex_locker_t lock(runtimeLock);</span><br><span class="line">    return protocol_getMethod_nolock(proto, sel, isRequiredMethod, </span><br><span class="line">                                     isInstanceMethod, recursive);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* protocol_getMethodTypeEncoding_nolock</span><br><span class="line">* Return the @encode string for the requested protocol method.</span><br><span class="line">* Returns nil if the compiler did not emit any extended @encode data.</span><br><span class="line">* Locking: runtimeLock must be held by the caller</span><br><span class="line">**********************************************************************/</span><br><span class="line">const char * </span><br><span class="line">protocol_getMethodTypeEncoding_nolock(protocol_t *proto, SEL sel, </span><br><span class="line">                                      bool isRequiredMethod, </span><br><span class="line">                                      bool isInstanceMethod)</span><br><span class="line">&#123;</span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line"></span><br><span class="line">    if (!proto) return nil;</span><br><span class="line">    if (!proto-&gt;extendedMethodTypes()) return nil;</span><br><span class="line"></span><br><span class="line">    ASSERT(proto-&gt;isFixedUp());</span><br><span class="line"></span><br><span class="line">    method_t *m = </span><br><span class="line">        protocol_getMethod_nolock(proto, sel, </span><br><span class="line">                                  isRequiredMethod, isInstanceMethod, false);</span><br><span class="line">    if (m) &#123;</span><br><span class="line">        uint32_t i = getExtendedTypesIndexForMethod(proto, m, </span><br><span class="line">                                                    isRequiredMethod, </span><br><span class="line">                                                    isInstanceMethod);</span><br><span class="line">        return proto-&gt;extendedMethodTypes()[i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // No method with that name. Search incorporated protocols.</span><br><span class="line">    if (proto-&gt;protocols) &#123;</span><br><span class="line">        for (uintptr_t i = 0; i &lt; proto-&gt;protocols-&gt;count; i++) &#123;</span><br><span class="line">            const char *enc = </span><br><span class="line">                protocol_getMethodTypeEncoding_nolock(remapProtocol(proto-&gt;protocols-&gt;list[i]), sel, isRequiredMethod, isInstanceMethod);</span><br><span class="line">            if (enc) return enc;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return nil;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* _protocol_getMethodTypeEncoding</span><br><span class="line">* Return the @encode string for the requested protocol method.</span><br><span class="line">* Returns nil if the compiler did not emit any extended @encode data.</span><br><span class="line">* Locking: acquires runtimeLock</span><br><span class="line">**********************************************************************/</span><br><span class="line">const char * </span><br><span class="line">_protocol_getMethodTypeEncoding(Protocol *proto_gen, SEL sel, </span><br><span class="line">                                BOOL isRequiredMethod, BOOL isInstanceMethod)</span><br><span class="line">&#123;</span><br><span class="line">    protocol_t *proto = newprotocol(proto_gen);</span><br><span class="line"></span><br><span class="line">    if (!proto) return nil;</span><br><span class="line">    fixupProtocolIfNeeded(proto);</span><br><span class="line"></span><br><span class="line">    mutex_locker_t lock(runtimeLock);</span><br><span class="line">    return protocol_getMethodTypeEncoding_nolock(proto, sel, </span><br><span class="line">                                                 isRequiredMethod, </span><br><span class="line">                                                 isInstanceMethod);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* protocol_t::demangledName</span><br><span class="line">* Returns the (Swift-demangled) name of the given protocol.</span><br><span class="line">* Locking: none</span><br><span class="line">**********************************************************************/</span><br><span class="line">const char *</span><br><span class="line">protocol_t::demangledName() </span><br><span class="line">&#123;</span><br><span class="line">    if (!hasDemangledNameField())</span><br><span class="line">        return mangledName;</span><br><span class="line">    </span><br><span class="line">    if (! _demangledName) &#123;</span><br><span class="line">        char *de = copySwiftV1DemangledName(mangledName, true/*isProtocol*/);</span><br><span class="line">        if (! OSAtomicCompareAndSwapPtrBarrier(nil, (void*)(de ?: mangledName), </span><br><span class="line">                                               (void**)&amp;_demangledName)) </span><br><span class="line">        &#123;</span><br><span class="line">            if (de) free(de);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return _demangledName;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* protocol_getName</span><br><span class="line">* Returns the (Swift-demangled) name of the given protocol.</span><br><span class="line">* Locking: runtimeLock must not be held by the caller</span><br><span class="line">**********************************************************************/</span><br><span class="line">const char *</span><br><span class="line">protocol_getName(Protocol *proto)</span><br><span class="line">&#123;</span><br><span class="line">    if (!proto) return &quot;nil&quot;;</span><br><span class="line">    else return newprotocol(proto)-&gt;demangledName();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* protocol_getInstanceMethodDescription</span><br><span class="line">* Returns the description of a named instance method.</span><br><span class="line">* Locking: runtimeLock must not be held by the caller</span><br><span class="line">**********************************************************************/</span><br><span class="line">struct objc_method_description </span><br><span class="line">protocol_getMethodDescription(Protocol *p, SEL aSel, </span><br><span class="line">                              BOOL isRequiredMethod, BOOL isInstanceMethod)</span><br><span class="line">&#123;</span><br><span class="line">    Method m = </span><br><span class="line">        protocol_getMethod(newprotocol(p), aSel, </span><br><span class="line">                           isRequiredMethod, isInstanceMethod, true);</span><br><span class="line">    // method_getDescription is inefficient for small methods. Don&#x27;t bother</span><br><span class="line">    // trying to use it, just make our own.</span><br><span class="line">    if (m) return (struct objc_method_description)&#123;m-&gt;name(), (char *)m-&gt;types()&#125;;</span><br><span class="line">    else return (struct objc_method_description)&#123;nil, nil&#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* protocol_conformsToProtocol_nolock</span><br><span class="line">* Returns YES if self conforms to other.</span><br><span class="line">* Locking: runtimeLock must be held by the caller.</span><br><span class="line">**********************************************************************/</span><br><span class="line">static bool </span><br><span class="line">protocol_conformsToProtocol_nolock(protocol_t *self, protocol_t *other)</span><br><span class="line">&#123;</span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line"></span><br><span class="line">    if (!self  ||  !other) &#123;</span><br><span class="line">        return NO;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // protocols need not be fixed up</span><br><span class="line"></span><br><span class="line">    if (0 == strcmp(self-&gt;mangledName, other-&gt;mangledName)) &#123;</span><br><span class="line">        return YES;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (self-&gt;protocols) &#123;</span><br><span class="line">        uintptr_t i;</span><br><span class="line">        for (i = 0; i &lt; self-&gt;protocols-&gt;count; i++) &#123;</span><br><span class="line">            protocol_t *proto = remapProtocol(self-&gt;protocols-&gt;list[i]);</span><br><span class="line">            if (other == proto) &#123;</span><br><span class="line">              return YES;</span><br><span class="line">            &#125;</span><br><span class="line">            if (0 == strcmp(other-&gt;mangledName, proto-&gt;mangledName)) &#123;</span><br><span class="line">                return YES;</span><br><span class="line">            &#125;</span><br><span class="line">            if (protocol_conformsToProtocol_nolock(proto, other)) &#123;</span><br><span class="line">                return YES;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return NO;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* protocol_conformsToProtocol</span><br><span class="line">* Returns YES if self conforms to other.</span><br><span class="line">* Locking: acquires runtimeLock</span><br><span class="line">**********************************************************************/</span><br><span class="line">BOOL protocol_conformsToProtocol(Protocol *self, Protocol *other)</span><br><span class="line">&#123;</span><br><span class="line">    mutex_locker_t lock(runtimeLock);</span><br><span class="line">    return protocol_conformsToProtocol_nolock(newprotocol(self), </span><br><span class="line">                                              newprotocol(other));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* protocol_isEqual</span><br><span class="line">* Return YES if two protocols are equal (i.e. conform to each other)</span><br><span class="line">* Locking: acquires runtimeLock</span><br><span class="line">**********************************************************************/</span><br><span class="line">BOOL protocol_isEqual(Protocol *self, Protocol *other)</span><br><span class="line">&#123;</span><br><span class="line">    if (self == other) return YES;</span><br><span class="line">    if (!self  ||  !other) return NO;</span><br><span class="line"></span><br><span class="line">    if (!protocol_conformsToProtocol(self, other)) return NO;</span><br><span class="line">    if (!protocol_conformsToProtocol(other, self)) return NO;</span><br><span class="line"></span><br><span class="line">    return YES;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* protocol_copyMethodDescriptionList</span><br><span class="line">* Returns descriptions of a protocol&#x27;s methods.</span><br><span class="line">* Locking: acquires runtimeLock</span><br><span class="line">**********************************************************************/</span><br><span class="line">struct objc_method_description *</span><br><span class="line">protocol_copyMethodDescriptionList(Protocol *p, </span><br><span class="line">                                   BOOL isRequiredMethod,BOOL isInstanceMethod,</span><br><span class="line">                                   unsigned int *outCount)</span><br><span class="line">&#123;</span><br><span class="line">    protocol_t *proto = newprotocol(p);</span><br><span class="line">    struct objc_method_description *result = nil;</span><br><span class="line">    unsigned int count = 0;</span><br><span class="line"></span><br><span class="line">    if (!proto) &#123;</span><br><span class="line">        if (outCount) *outCount = 0;</span><br><span class="line">        return nil;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    fixupProtocolIfNeeded(proto);</span><br><span class="line"></span><br><span class="line">    mutex_locker_t lock(runtimeLock);</span><br><span class="line"></span><br><span class="line">    method_list_t *mlist = </span><br><span class="line">        getProtocolMethodList(proto, isRequiredMethod, isInstanceMethod);</span><br><span class="line"></span><br><span class="line">    if (mlist) &#123;</span><br><span class="line">        result = (struct objc_method_description *)</span><br><span class="line">            calloc(mlist-&gt;count + 1, sizeof(struct objc_method_description));</span><br><span class="line">        for (const auto&amp; meth : *mlist) &#123;</span><br><span class="line">            result[count].name = meth.name();</span><br><span class="line">            result[count].types = (char *)meth.types();</span><br><span class="line">            count++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (outCount) *outCount = count;</span><br><span class="line">    return result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* protocol_getProperty</span><br><span class="line">* fixme</span><br><span class="line">* Locking: runtimeLock must be held by the caller</span><br><span class="line">**********************************************************************/</span><br><span class="line">static property_t * </span><br><span class="line">protocol_getProperty_nolock(protocol_t *proto, const char *name, </span><br><span class="line">                            bool isRequiredProperty, bool isInstanceProperty)</span><br><span class="line">&#123;</span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line"></span><br><span class="line">    if (!isRequiredProperty) &#123;</span><br><span class="line">        // Only required properties are currently supported.</span><br><span class="line">        return nil;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    property_list_t *plist = isInstanceProperty ? </span><br><span class="line">        proto-&gt;instanceProperties : proto-&gt;classProperties();</span><br><span class="line">    if (plist) &#123;</span><br><span class="line">        for (auto&amp; prop : *plist) &#123;</span><br><span class="line">            if (0 == strcmp(name, prop.name)) &#123;</span><br><span class="line">                return &amp;prop;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (proto-&gt;protocols) &#123;</span><br><span class="line">        uintptr_t i;</span><br><span class="line">        for (i = 0; i &lt; proto-&gt;protocols-&gt;count; i++) &#123;</span><br><span class="line">            protocol_t *p = remapProtocol(proto-&gt;protocols-&gt;list[i]);</span><br><span class="line">            property_t *prop = </span><br><span class="line">                protocol_getProperty_nolock(p, name, </span><br><span class="line">                                            isRequiredProperty, </span><br><span class="line">                                            isInstanceProperty);</span><br><span class="line">            if (prop) return prop;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return nil;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">objc_property_t protocol_getProperty(Protocol *p, const char *name, </span><br><span class="line">                              BOOL isRequiredProperty, BOOL isInstanceProperty)</span><br><span class="line">&#123;</span><br><span class="line">    if (!p  ||  !name) return nil;</span><br><span class="line"></span><br><span class="line">    mutex_locker_t lock(runtimeLock);</span><br><span class="line">    return (objc_property_t)</span><br><span class="line">        protocol_getProperty_nolock(newprotocol(p), name, </span><br><span class="line">                                    isRequiredProperty, isInstanceProperty);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* protocol_copyPropertyList</span><br><span class="line">* protocol_copyPropertyList2</span><br><span class="line">* fixme</span><br><span class="line">* Locking: acquires runtimeLock</span><br><span class="line">**********************************************************************/</span><br><span class="line">static property_t **</span><br><span class="line">copyPropertyList(property_list_t *plist, unsigned int *outCount)</span><br><span class="line">&#123;</span><br><span class="line">    property_t **result = nil;</span><br><span class="line">    unsigned int count = 0;</span><br><span class="line"></span><br><span class="line">    if (plist) &#123;</span><br><span class="line">        count = plist-&gt;count;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (count &gt; 0) &#123;</span><br><span class="line">        result = (property_t **)malloc((count+1) * sizeof(property_t *));</span><br><span class="line"></span><br><span class="line">        count = 0;</span><br><span class="line">        for (auto&amp; prop : *plist) &#123;</span><br><span class="line">            result[count++] = &amp;prop;</span><br><span class="line">        &#125;</span><br><span class="line">        result[count] = nil;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (outCount) *outCount = count;</span><br><span class="line">    return result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">objc_property_t *</span><br><span class="line">protocol_copyPropertyList2(Protocol *proto, unsigned int *outCount, </span><br><span class="line">                           BOOL isRequiredProperty, BOOL isInstanceProperty)</span><br><span class="line">&#123;</span><br><span class="line">    if (!proto  ||  !isRequiredProperty) &#123;</span><br><span class="line">        // Optional properties are not currently supported.</span><br><span class="line">        if (outCount) *outCount = 0;</span><br><span class="line">        return nil;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    mutex_locker_t lock(runtimeLock);</span><br><span class="line"></span><br><span class="line">    property_list_t *plist = isInstanceProperty</span><br><span class="line">        ? newprotocol(proto)-&gt;instanceProperties</span><br><span class="line">        : newprotocol(proto)-&gt;classProperties();</span><br><span class="line">    return (objc_property_t *)copyPropertyList(plist, outCount);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">objc_property_t *</span><br><span class="line">protocol_copyPropertyList(Protocol *proto, unsigned int *outCount)</span><br><span class="line">&#123;</span><br><span class="line">    return protocol_copyPropertyList2(proto, outCount, </span><br><span class="line">                                      YES/*required*/, YES/*instance*/);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* protocol_copyProtocolList</span><br><span class="line">* Copies this protocol&#x27;s incorporated protocols. </span><br><span class="line">* Does not copy those protocol&#x27;s incorporated protocols in turn.</span><br><span class="line">* Locking: acquires runtimeLock</span><br><span class="line">**********************************************************************/</span><br><span class="line">Protocol * __unsafe_unretained * </span><br><span class="line">protocol_copyProtocolList(Protocol *p, unsigned int *outCount)</span><br><span class="line">&#123;</span><br><span class="line">    unsigned int count = 0;</span><br><span class="line">    Protocol **result = nil;</span><br><span class="line">    protocol_t *proto = newprotocol(p);</span><br><span class="line">    </span><br><span class="line">    if (!proto) &#123;</span><br><span class="line">        if (outCount) *outCount = 0;</span><br><span class="line">        return nil;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    mutex_locker_t lock(runtimeLock);</span><br><span class="line"></span><br><span class="line">    if (proto-&gt;protocols) &#123;</span><br><span class="line">        count = (unsigned int)proto-&gt;protocols-&gt;count;</span><br><span class="line">    &#125;</span><br><span class="line">    if (count &gt; 0) &#123;</span><br><span class="line">        result = (Protocol **)malloc((count+1) * sizeof(Protocol *));</span><br><span class="line"></span><br><span class="line">        unsigned int i;</span><br><span class="line">        for (i = 0; i &lt; count; i++) &#123;</span><br><span class="line">            result[i] = (Protocol *)remapProtocol(proto-&gt;protocols-&gt;list[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        result[i] = nil;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (outCount) *outCount = count;</span><br><span class="line">    return result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* objc_allocateProtocol</span><br><span class="line">* Creates a new protocol. The protocol may not be used until </span><br><span class="line">* objc_registerProtocol() is called.</span><br><span class="line">* Returns nil if a protocol with the same name already exists.</span><br><span class="line">* Locking: acquires runtimeLock</span><br><span class="line">**********************************************************************/</span><br><span class="line">Protocol *</span><br><span class="line">objc_allocateProtocol(const char *name)</span><br><span class="line">&#123;</span><br><span class="line">    mutex_locker_t lock(runtimeLock);</span><br><span class="line"></span><br><span class="line">    if (getProtocol(name)) &#123;</span><br><span class="line">        return nil;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    protocol_t *result = (protocol_t *)calloc(sizeof(protocol_t), 1);</span><br><span class="line"></span><br><span class="line">    extern objc_class OBJC_CLASS_$___IncompleteProtocol;</span><br><span class="line">    Class cls = (Class)&amp;OBJC_CLASS_$___IncompleteProtocol;</span><br><span class="line">    result-&gt;initProtocolIsa(cls);</span><br><span class="line">    result-&gt;size = sizeof(protocol_t);</span><br><span class="line">    // fixme mangle the name if it looks swift-y?</span><br><span class="line">    result-&gt;mangledName = strdupIfMutable(name);</span><br><span class="line"></span><br><span class="line">    // fixme reserve name without installing</span><br><span class="line"></span><br><span class="line">    return (Protocol *)result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* objc_registerProtocol</span><br><span class="line">* Registers a newly-constructed protocol. The protocol is now </span><br><span class="line">* ready for use and immutable.</span><br><span class="line">* Locking: acquires runtimeLock</span><br><span class="line">**********************************************************************/</span><br><span class="line">void objc_registerProtocol(Protocol *proto_gen) </span><br><span class="line">&#123;</span><br><span class="line">    protocol_t *proto = newprotocol(proto_gen);</span><br><span class="line"></span><br><span class="line">    mutex_locker_t lock(runtimeLock);</span><br><span class="line"></span><br><span class="line">    extern objc_class OBJC_CLASS_$___IncompleteProtocol;</span><br><span class="line">    Class oldcls = (Class)&amp;OBJC_CLASS_$___IncompleteProtocol;</span><br><span class="line">    extern objc_class OBJC_CLASS_$_Protocol;</span><br><span class="line">    Class cls = (Class)&amp;OBJC_CLASS_$_Protocol;</span><br><span class="line"></span><br><span class="line">    if (proto-&gt;ISA() == cls) &#123;</span><br><span class="line">        _objc_inform(&quot;objc_registerProtocol: protocol &#x27;%s&#x27; was already &quot;</span><br><span class="line">                     &quot;registered!&quot;, proto-&gt;nameForLogging());</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    if (proto-&gt;ISA() != oldcls) &#123;</span><br><span class="line">        _objc_inform(&quot;objc_registerProtocol: protocol &#x27;%s&#x27; was not allocated &quot;</span><br><span class="line">                     &quot;with objc_allocateProtocol!&quot;, proto-&gt;nameForLogging());</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // NOT initProtocolIsa(). The protocol object may already </span><br><span class="line">    // have been retained and we must preserve that count.</span><br><span class="line">    proto-&gt;changeIsa(cls);</span><br><span class="line"></span><br><span class="line">    // Don&#x27;t add this protocol if we already have it.</span><br><span class="line">    // Should we warn on duplicates?</span><br><span class="line">    if (getProtocol(proto-&gt;mangledName) == nil) &#123;</span><br><span class="line">        NXMapKeyCopyingInsert(protocols(), proto-&gt;mangledName, proto);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* protocol_addProtocol</span><br><span class="line">* Adds an incorporated protocol to another protocol.</span><br><span class="line">* No method enforcement is performed.</span><br><span class="line">* `proto` must be under construction. `addition` must not.</span><br><span class="line">* Locking: acquires runtimeLock</span><br><span class="line">**********************************************************************/</span><br><span class="line">void </span><br><span class="line">protocol_addProtocol(Protocol *proto_gen, Protocol *addition_gen) </span><br><span class="line">&#123;</span><br><span class="line">    protocol_t *proto = newprotocol(proto_gen);</span><br><span class="line">    protocol_t *addition = newprotocol(addition_gen);</span><br><span class="line"></span><br><span class="line">    extern objc_class OBJC_CLASS_$___IncompleteProtocol;</span><br><span class="line">    Class cls = (Class)&amp;OBJC_CLASS_$___IncompleteProtocol;</span><br><span class="line"></span><br><span class="line">    if (!proto_gen) return;</span><br><span class="line">    if (!addition_gen) return;</span><br><span class="line"></span><br><span class="line">    mutex_locker_t lock(runtimeLock);</span><br><span class="line"></span><br><span class="line">    if (proto-&gt;ISA() != cls) &#123;</span><br><span class="line">        _objc_inform(&quot;protocol_addProtocol: modified protocol &#x27;%s&#x27; is not &quot;</span><br><span class="line">                     &quot;under construction!&quot;, proto-&gt;nameForLogging());</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    if (addition-&gt;ISA() == cls) &#123;</span><br><span class="line">        _objc_inform(&quot;protocol_addProtocol: added protocol &#x27;%s&#x27; is still &quot;</span><br><span class="line">                     &quot;under construction!&quot;, addition-&gt;nameForLogging());</span><br><span class="line">        return;        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    protocol_list_t *protolist = proto-&gt;protocols;</span><br><span class="line">    if (!protolist) &#123;</span><br><span class="line">        protolist = (protocol_list_t *)</span><br><span class="line">            calloc(1, sizeof(protocol_list_t) </span><br><span class="line">                             + sizeof(protolist-&gt;list[0]));</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        protolist = (protocol_list_t *)</span><br><span class="line">            realloc(protolist, protocol_list_size(protolist) </span><br><span class="line">                              + sizeof(protolist-&gt;list[0]));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    protolist-&gt;list[protolist-&gt;count++] = (protocol_ref_t)addition;</span><br><span class="line">    proto-&gt;protocols = protolist;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* protocol_addMethodDescription</span><br><span class="line">* Adds a method to a protocol. The protocol must be under construction.</span><br><span class="line">* Locking: acquires runtimeLock</span><br><span class="line">**********************************************************************/</span><br><span class="line">static void</span><br><span class="line">protocol_addMethod_nolock(method_list_t*&amp; list, SEL name, const char *types)</span><br><span class="line">&#123;</span><br><span class="line">    if (!list) &#123;</span><br><span class="line">        list = (method_list_t *)calloc(method_list_t::byteSize(sizeof(struct method_t::big), 1), 1);</span><br><span class="line">        list-&gt;entsizeAndFlags = sizeof(struct method_t::big);</span><br><span class="line">        list-&gt;setFixedUp();</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        size_t size = list-&gt;byteSize() + list-&gt;entsize();</span><br><span class="line">        list = (method_list_t *)realloc(list, size);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    auto &amp;meth = list-&gt;get(list-&gt;count++).big();</span><br><span class="line">    meth.name = name;</span><br><span class="line">    meth.types = types ? strdupIfMutable(types) : &quot;&quot;;</span><br><span class="line">    meth.imp = nil;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void </span><br><span class="line">protocol_addMethodDescription(Protocol *proto_gen, SEL name, const char *types,</span><br><span class="line">                              BOOL isRequiredMethod, BOOL isInstanceMethod) </span><br><span class="line">&#123;</span><br><span class="line">    protocol_t *proto = newprotocol(proto_gen);</span><br><span class="line"></span><br><span class="line">    extern objc_class OBJC_CLASS_$___IncompleteProtocol;</span><br><span class="line">    Class cls = (Class)&amp;OBJC_CLASS_$___IncompleteProtocol;</span><br><span class="line"></span><br><span class="line">    if (!proto_gen) return;</span><br><span class="line"></span><br><span class="line">    mutex_locker_t lock(runtimeLock);</span><br><span class="line"></span><br><span class="line">    if (proto-&gt;ISA() != cls) &#123;</span><br><span class="line">        _objc_inform(&quot;protocol_addMethodDescription: protocol &#x27;%s&#x27; is not &quot;</span><br><span class="line">                     &quot;under construction!&quot;, proto-&gt;nameForLogging());</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (isRequiredMethod  &amp;&amp;  isInstanceMethod) &#123;</span><br><span class="line">        protocol_addMethod_nolock(proto-&gt;instanceMethods, name, types);</span><br><span class="line">    &#125; else if (isRequiredMethod  &amp;&amp;  !isInstanceMethod) &#123;</span><br><span class="line">        protocol_addMethod_nolock(proto-&gt;classMethods, name, types);</span><br><span class="line">    &#125; else if (!isRequiredMethod  &amp;&amp;  isInstanceMethod) &#123;</span><br><span class="line">        protocol_addMethod_nolock(proto-&gt;optionalInstanceMethods, name,types);</span><br><span class="line">    &#125; else /*  !isRequiredMethod  &amp;&amp;  !isInstanceMethod) */ &#123;</span><br><span class="line">        protocol_addMethod_nolock(proto-&gt;optionalClassMethods, name, types);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* protocol_addProperty</span><br><span class="line">* Adds a property to a protocol. The protocol must be under construction.</span><br><span class="line">* Locking: acquires runtimeLock</span><br><span class="line">**********************************************************************/</span><br><span class="line">static void </span><br><span class="line">protocol_addProperty_nolock(property_list_t *&amp;plist, const char *name, </span><br><span class="line">                            const objc_property_attribute_t *attrs, </span><br><span class="line">                            unsigned int count)</span><br><span class="line">&#123;</span><br><span class="line">    if (!plist) &#123;</span><br><span class="line">        plist = (property_list_t *)calloc(property_list_t::byteSize(sizeof(property_t), 1), 1);</span><br><span class="line">        plist-&gt;entsizeAndFlags = sizeof(property_t);</span><br><span class="line">        plist-&gt;count = 1;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        plist-&gt;count++;</span><br><span class="line">        plist = (property_list_t *)realloc(plist, plist-&gt;byteSize());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    property_t&amp; prop = plist-&gt;get(plist-&gt;count - 1);</span><br><span class="line">    prop.name = strdupIfMutable(name);</span><br><span class="line">    prop.attributes = copyPropertyAttributeString(attrs, count);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void </span><br><span class="line">protocol_addProperty(Protocol *proto_gen, const char *name, </span><br><span class="line">                     const objc_property_attribute_t *attrs, </span><br><span class="line">                     unsigned int count,</span><br><span class="line">                     BOOL isRequiredProperty, BOOL isInstanceProperty)</span><br><span class="line">&#123;</span><br><span class="line">    protocol_t *proto = newprotocol(proto_gen);</span><br><span class="line"></span><br><span class="line">    extern objc_class OBJC_CLASS_$___IncompleteProtocol;</span><br><span class="line">    Class cls = (Class)&amp;OBJC_CLASS_$___IncompleteProtocol;</span><br><span class="line"></span><br><span class="line">    if (!proto) return;</span><br><span class="line">    if (!name) return;</span><br><span class="line"></span><br><span class="line">    mutex_locker_t lock(runtimeLock);</span><br><span class="line"></span><br><span class="line">    if (proto-&gt;ISA() != cls) &#123;</span><br><span class="line">        _objc_inform(&quot;protocol_addProperty: protocol &#x27;%s&#x27; is not &quot;</span><br><span class="line">                     &quot;under construction!&quot;, proto-&gt;nameForLogging());</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (isRequiredProperty  &amp;&amp;  isInstanceProperty) &#123;</span><br><span class="line">        protocol_addProperty_nolock(proto-&gt;instanceProperties, name, attrs, count);</span><br><span class="line">    &#125;</span><br><span class="line">    else if (isRequiredProperty  &amp;&amp;  !isInstanceProperty) &#123;</span><br><span class="line">        protocol_addProperty_nolock(proto-&gt;_classProperties, name, attrs, count);</span><br><span class="line">    &#125;</span><br><span class="line">    //else if (!isRequiredProperty  &amp;&amp;  isInstanceProperty) &#123;</span><br><span class="line">    //    protocol_addProperty_nolock(proto-&gt;optionalInstanceProperties, name, attrs, count);</span><br><span class="line">    //&#125;</span><br><span class="line">    //else /*  !isRequiredProperty  &amp;&amp;  !isInstanceProperty) */ &#123;</span><br><span class="line">    //    protocol_addProperty_nolock(proto-&gt;optionalClassProperties, name, attrs, count);</span><br><span class="line">    //&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">static int</span><br><span class="line">objc_getRealizedClassList_nolock(Class *buffer, int bufferLen)</span><br><span class="line">&#123;</span><br><span class="line">    int count = 0;</span><br><span class="line"></span><br><span class="line">    if (buffer) &#123;</span><br><span class="line">        int c = 0;</span><br><span class="line">        foreach_realized_class([=, &amp;count, &amp;c](Class cls) &#123;</span><br><span class="line">            count++;</span><br><span class="line">            if (c &lt; bufferLen) &#123;</span><br><span class="line">                buffer[c++] = cls;</span><br><span class="line">            &#125;</span><br><span class="line">            return true;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        foreach_realized_class([&amp;count](Class cls) &#123;</span><br><span class="line">            count++;</span><br><span class="line">            return true;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return count;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">static Class *</span><br><span class="line">objc_copyRealizedClassList_nolock(unsigned int *outCount)</span><br><span class="line">&#123;</span><br><span class="line">    Class *result = nil;</span><br><span class="line">    unsigned int count = 0;</span><br><span class="line"></span><br><span class="line">    foreach_realized_class([&amp;count](Class cls) &#123;</span><br><span class="line">        count++;</span><br><span class="line">        return true;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    if (count &gt; 0) &#123;</span><br><span class="line">        unsigned int c = 0;</span><br><span class="line"></span><br><span class="line">        result = (Class *)malloc((1+count) * sizeof(Class));</span><br><span class="line">        foreach_realized_class([=, &amp;c](Class cls) &#123;</span><br><span class="line">            result[c++] = cls;</span><br><span class="line">            return true;</span><br><span class="line">        &#125;);</span><br><span class="line">        result[c] = nil;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (outCount) *outCount = count;</span><br><span class="line">    return result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line"> * objc_getClassList</span><br><span class="line"> * Returns pointers to all classes.</span><br><span class="line"> * This requires all classes be realized, which is regretfully non-lazy.</span><br><span class="line"> * Locking: acquires runtimeLock</span><br><span class="line"> **********************************************************************/</span><br><span class="line">int</span><br><span class="line">objc_getClassList(Class *buffer, int bufferLen)</span><br><span class="line">&#123;</span><br><span class="line">    mutex_locker_t lock(runtimeLock);</span><br><span class="line"></span><br><span class="line">    realizeAllClasses();</span><br><span class="line"></span><br><span class="line">    return objc_getRealizedClassList_nolock(buffer, bufferLen);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line"> * objc_copyClassList</span><br><span class="line"> * Returns pointers to Realized classes.</span><br><span class="line"> *</span><br><span class="line"> * outCount may be nil. *outCount is the number of classes returned.</span><br><span class="line"> * If the returned array is not nil, it is nil-terminated and must be</span><br><span class="line"> * freed with free().</span><br><span class="line"> * Locking: write-locks runtimeLock</span><br><span class="line"> **********************************************************************/</span><br><span class="line">Class *</span><br><span class="line">objc_copyRealizedClassList(unsigned int *outCount)</span><br><span class="line">&#123;</span><br><span class="line">    mutex_locker_t lock(runtimeLock);</span><br><span class="line"></span><br><span class="line">    return objc_copyRealizedClassList_nolock(outCount);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* objc_copyClassList</span><br><span class="line">* Returns pointers to all classes.</span><br><span class="line">* This requires all classes be realized, which is regretfully non-lazy.</span><br><span class="line">* </span><br><span class="line">* outCount may be nil. *outCount is the number of classes returned. </span><br><span class="line">* If the returned array is not nil, it is nil-terminated and must be </span><br><span class="line">* freed with free().</span><br><span class="line">* Locking: write-locks runtimeLock</span><br><span class="line">**********************************************************************/</span><br><span class="line">Class *</span><br><span class="line">objc_copyClassList(unsigned int *outCount)</span><br><span class="line">&#123;</span><br><span class="line">    mutex_locker_t lock(runtimeLock);</span><br><span class="line"></span><br><span class="line">    realizeAllClasses();</span><br><span class="line"></span><br><span class="line">    return objc_copyRealizedClassList_nolock(outCount);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line"> * class_copyImpCache</span><br><span class="line"> * Returns the current content of the Class IMP Cache</span><br><span class="line"> *</span><br><span class="line"> * outCount may be nil. *outCount is the number of entries returned.</span><br><span class="line"> * If the returned array is not nil, it is nil-terminated and must be</span><br><span class="line"> * freed with free().</span><br><span class="line"> * Locking: write-locks cacheUpdateLock</span><br><span class="line"> **********************************************************************/</span><br><span class="line">objc_imp_cache_entry *</span><br><span class="line">class_copyImpCache(Class cls, int *outCount)</span><br><span class="line">&#123;</span><br><span class="line">    objc_imp_cache_entry *buffer = nullptr;</span><br><span class="line"></span><br><span class="line">#if CONFIG_USE_CACHE_LOCK</span><br><span class="line">    mutex_locker_t lock(cacheUpdateLock);</span><br><span class="line">#else</span><br><span class="line">    mutex_locker_t lock(runtimeLock);</span><br><span class="line">#endif</span><br><span class="line"></span><br><span class="line">    cache_t &amp;cache = cls-&gt;cache;</span><br><span class="line">    int count = (int)cache.occupied();</span><br><span class="line"></span><br><span class="line">    if (count) &#123;</span><br><span class="line">        buffer = (objc_imp_cache_entry *)calloc(1+count, sizeof(objc_imp_cache_entry));</span><br><span class="line">        cache.copyCacheNolock(buffer, count);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (outCount) *outCount = count;</span><br><span class="line">    return buffer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* objc_copyProtocolList</span><br><span class="line">* Returns pointers to all protocols.</span><br><span class="line">* Locking: read-locks runtimeLock</span><br><span class="line">**********************************************************************/</span><br><span class="line">Protocol * __unsafe_unretained * </span><br><span class="line">objc_copyProtocolList(unsigned int *outCount) </span><br><span class="line">&#123;</span><br><span class="line">    mutex_locker_t lock(runtimeLock);</span><br><span class="line"></span><br><span class="line">    NXMapTable *protocol_map = protocols();</span><br><span class="line"></span><br><span class="line">    // Find all the protocols from the pre-optimized images.  These protocols</span><br><span class="line">    // won&#x27;t be in the protocol map.</span><br><span class="line">    objc::DenseMap&lt;const char*, Protocol*&gt; preoptimizedProtocols;</span><br><span class="line">    &#123;</span><br><span class="line">        header_info *hi;</span><br><span class="line">        for (hi = FirstHeader; hi; hi = hi-&gt;getNext()) &#123;</span><br><span class="line">            if (!hi-&gt;hasPreoptimizedProtocols())</span><br><span class="line">                continue;</span><br><span class="line"></span><br><span class="line">            size_t count, i;</span><br><span class="line">            const protocol_t * const *protolist = _getObjc2ProtocolList(hi, &amp;count);</span><br><span class="line">            for (i = 0; i &lt; count; i++) &#123;</span><br><span class="line">                const protocol_t* protocol = protolist[i];</span><br><span class="line"></span><br><span class="line">                // Skip protocols we have in the run time map.  These likely</span><br><span class="line">                // correspond to protocols added dynamically which have the same</span><br><span class="line">                // name as a protocol found later in a dlopen&#x27;ed shared cache image.</span><br><span class="line">                if (NXMapGet(protocol_map, protocol-&gt;mangledName) != nil)</span><br><span class="line">                    continue;</span><br><span class="line"></span><br><span class="line">                // The protocols in the shared cache protolist point to their</span><br><span class="line">                // original on-disk object, not the optimized one.  We can use the name</span><br><span class="line">                // to find the optimized one.</span><br><span class="line">                Protocol* optimizedProto = getPreoptimizedProtocol(protocol-&gt;mangledName);</span><br><span class="line">                preoptimizedProtocols.insert(&#123; protocol-&gt;mangledName, optimizedProto &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    unsigned int count = NXCountMapTable(protocol_map) + (unsigned int)preoptimizedProtocols.size();</span><br><span class="line">    if (count == 0) &#123;</span><br><span class="line">        if (outCount) *outCount = 0;</span><br><span class="line">        return nil;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Protocol **result = (Protocol **)malloc((count+1) * sizeof(Protocol*));</span><br><span class="line"></span><br><span class="line">    unsigned int i = 0;</span><br><span class="line">    Protocol *proto;</span><br><span class="line">    const char *name;</span><br><span class="line">    NXMapState state = NXInitMapState(protocol_map);</span><br><span class="line">    while (NXNextMapState(protocol_map, &amp;state, </span><br><span class="line">                          (const void **)&amp;name, (const void **)&amp;proto))</span><br><span class="line">    &#123;</span><br><span class="line">        result[i++] = proto;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Add any protocols found in the pre-optimized table</span><br><span class="line">    for (auto it : preoptimizedProtocols) &#123;</span><br><span class="line">        result[i++] = it.second;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    result[i++] = nil;</span><br><span class="line">    ASSERT(i == count+1);</span><br><span class="line"></span><br><span class="line">    if (outCount) *outCount = count;</span><br><span class="line">    return result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* objc_getProtocol</span><br><span class="line">* Get a protocol by name, or return nil</span><br><span class="line">* Locking: read-locks runtimeLock</span><br><span class="line">**********************************************************************/</span><br><span class="line">Protocol *objc_getProtocol(const char *name)</span><br><span class="line">&#123;</span><br><span class="line">    mutex_locker_t lock(runtimeLock); </span><br><span class="line">    return getProtocol(name);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* class_copyMethodList</span><br><span class="line">* fixme</span><br><span class="line">* Locking: read-locks runtimeLock</span><br><span class="line">**********************************************************************/</span><br><span class="line">Method *</span><br><span class="line">class_copyMethodList(Class cls, unsigned int *outCount)</span><br><span class="line">&#123;</span><br><span class="line">    unsigned int count = 0;</span><br><span class="line">    Method *result = nil;</span><br><span class="line"></span><br><span class="line">    if (!cls) &#123;</span><br><span class="line">        if (outCount) *outCount = 0;</span><br><span class="line">        return nil;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    mutex_locker_t lock(runtimeLock);</span><br><span class="line">    const auto methods = cls-&gt;data()-&gt;methods();</span><br><span class="line">    </span><br><span class="line">    ASSERT(cls-&gt;isRealized());</span><br><span class="line"></span><br><span class="line">    count = methods.count();</span><br><span class="line"></span><br><span class="line">    if (count &gt; 0) &#123;</span><br><span class="line">        result = (Method *)malloc((count + 1) * sizeof(Method));</span><br><span class="line">        </span><br><span class="line">        count = 0;</span><br><span class="line">        for (auto&amp; meth : methods) &#123;</span><br><span class="line">            result[count++] = &amp;meth;</span><br><span class="line">        &#125;</span><br><span class="line">        result[count] = nil;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (outCount) *outCount = count;</span><br><span class="line">    return result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* class_copyIvarList</span><br><span class="line">* fixme</span><br><span class="line">* Locking: read-locks runtimeLock</span><br><span class="line">**********************************************************************/</span><br><span class="line">Ivar *</span><br><span class="line">class_copyIvarList(Class cls, unsigned int *outCount)</span><br><span class="line">&#123;</span><br><span class="line">    const ivar_list_t *ivars;</span><br><span class="line">    Ivar *result = nil;</span><br><span class="line">    unsigned int count = 0;</span><br><span class="line"></span><br><span class="line">    if (!cls) &#123;</span><br><span class="line">        if (outCount) *outCount = 0;</span><br><span class="line">        return nil;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    mutex_locker_t lock(runtimeLock);</span><br><span class="line"></span><br><span class="line">    ASSERT(cls-&gt;isRealized());</span><br><span class="line">    </span><br><span class="line">    if ((ivars = cls-&gt;data()-&gt;ro()-&gt;ivars)  &amp;&amp;  ivars-&gt;count) &#123;</span><br><span class="line">        result = (Ivar *)malloc((ivars-&gt;count+1) * sizeof(Ivar));</span><br><span class="line">        </span><br><span class="line">        for (auto&amp; ivar : *ivars) &#123;</span><br><span class="line">            if (!ivar.offset) continue;  // anonymous bitfield</span><br><span class="line">            result[count++] = &amp;ivar;</span><br><span class="line">        &#125;</span><br><span class="line">        result[count] = nil;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    if (outCount) *outCount = count;</span><br><span class="line">    return result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* class_copyPropertyList. Returns a heap block containing the </span><br><span class="line">* properties declared in the class, or nil if the class </span><br><span class="line">* declares no properties. Caller must free the block.</span><br><span class="line">* Does not copy any superclass&#x27;s properties.</span><br><span class="line">* Locking: read-locks runtimeLock</span><br><span class="line">**********************************************************************/</span><br><span class="line">objc_property_t *</span><br><span class="line">class_copyPropertyList(Class cls, unsigned int *outCount)</span><br><span class="line">&#123;</span><br><span class="line">    if (!cls) &#123;</span><br><span class="line">        if (outCount) *outCount = 0;</span><br><span class="line">        return nil;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    mutex_locker_t lock(runtimeLock);</span><br><span class="line"></span><br><span class="line">    checkIsKnownClass(cls);</span><br><span class="line">    ASSERT(cls-&gt;isRealized());</span><br><span class="line">    </span><br><span class="line">    auto rw = cls-&gt;data();</span><br><span class="line"></span><br><span class="line">    property_t **result = nil;</span><br><span class="line">    auto const properties = rw-&gt;properties();</span><br><span class="line">    unsigned int count = properties.count();</span><br><span class="line">    if (count &gt; 0) &#123;</span><br><span class="line">        result = (property_t **)malloc((count + 1) * sizeof(property_t *));</span><br><span class="line"></span><br><span class="line">        count = 0;</span><br><span class="line">        for (auto&amp; prop : properties) &#123;</span><br><span class="line">            result[count++] = &amp;prop;</span><br><span class="line">        &#125;</span><br><span class="line">        result[count] = nil;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (outCount) *outCount = count;</span><br><span class="line">    return (objc_property_t *)result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* objc_class::getLoadMethod</span><br><span class="line">* fixme</span><br><span class="line">* Called only from add_class_to_loadable_list.</span><br><span class="line">* Locking: runtimeLock must be read- or write-locked by the caller.</span><br><span class="line">**********************************************************************/</span><br><span class="line">IMP </span><br><span class="line">objc_class::getLoadMethod()</span><br><span class="line">&#123;</span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line"></span><br><span class="line">    const method_list_t *mlist;</span><br><span class="line"></span><br><span class="line">    ASSERT(isRealized());</span><br><span class="line">    ASSERT(ISA()-&gt;isRealized());</span><br><span class="line">    ASSERT(!isMetaClass());</span><br><span class="line">    ASSERT(ISA()-&gt;isMetaClass());</span><br><span class="line"></span><br><span class="line">    mlist = ISA()-&gt;data()-&gt;ro()-&gt;baseMethods();</span><br><span class="line">    if (mlist) &#123;</span><br><span class="line">        for (const auto&amp; meth : *mlist) &#123;</span><br><span class="line">            const char *name = sel_cname(meth.name());</span><br><span class="line">            if (0 == strcmp(name, &quot;load&quot;)) &#123;</span><br><span class="line">                return meth.imp(false);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return nil;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* _category_getName</span><br><span class="line">* Returns a category&#x27;s name.</span><br><span class="line">* Locking: none</span><br><span class="line">**********************************************************************/</span><br><span class="line">const char *</span><br><span class="line">_category_getName(Category cat)</span><br><span class="line">&#123;</span><br><span class="line">    return cat-&gt;name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* _category_getClassName</span><br><span class="line">* Returns a category&#x27;s class&#x27;s name</span><br><span class="line">* Called only from add_category_to_loadable_list and </span><br><span class="line">* remove_category_from_loadable_list for logging purposes.</span><br><span class="line">* Locking: runtimeLock must be read- or write-locked by the caller</span><br><span class="line">**********************************************************************/</span><br><span class="line">const char *</span><br><span class="line">_category_getClassName(Category cat)</span><br><span class="line">&#123;</span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line">    return remapClass(cat-&gt;cls)-&gt;nameForLogging();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* _category_getClass</span><br><span class="line">* Returns a category&#x27;s class</span><br><span class="line">* Called only by call_category_loads.</span><br><span class="line">* Locking: read-locks runtimeLock</span><br><span class="line">**********************************************************************/</span><br><span class="line">Class </span><br><span class="line">_category_getClass(Category cat)</span><br><span class="line">&#123;</span><br><span class="line">    mutex_locker_t lock(runtimeLock);</span><br><span class="line">    Class result = remapClass(cat-&gt;cls);</span><br><span class="line">    ASSERT(result-&gt;isRealized());  // ok for call_category_loads&#x27; usage</span><br><span class="line">    return result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* _category_getLoadMethod</span><br><span class="line">* fixme</span><br><span class="line">* Called only from add_category_to_loadable_list</span><br><span class="line">* Locking: runtimeLock must be read- or write-locked by the caller</span><br><span class="line">**********************************************************************/</span><br><span class="line">IMP </span><br><span class="line">_category_getLoadMethod(Category cat)</span><br><span class="line">&#123;</span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line"></span><br><span class="line">    const method_list_t *mlist;</span><br><span class="line"></span><br><span class="line">    mlist = cat-&gt;classMethods;</span><br><span class="line">    if (mlist) &#123;</span><br><span class="line">        for (const auto&amp; meth : *mlist) &#123;</span><br><span class="line">            const char *name = sel_cname(meth.name());</span><br><span class="line">            if (0 == strcmp(name, &quot;load&quot;)) &#123;</span><br><span class="line">                return meth.imp(false);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return nil;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* category_t::propertiesForMeta</span><br><span class="line">* Return a category&#x27;s instance or class properties.</span><br><span class="line">* hi is the image containing the category.</span><br><span class="line">**********************************************************************/</span><br><span class="line">property_list_t *</span><br><span class="line">category_t::propertiesForMeta(bool isMeta, struct header_info *hi)</span><br><span class="line">&#123;</span><br><span class="line">    if (!isMeta) return instanceProperties;</span><br><span class="line">    else if (hi-&gt;info()-&gt;hasCategoryClassProperties()) return _classProperties;</span><br><span class="line">    else return nil;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* class_copyProtocolList</span><br><span class="line">* fixme</span><br><span class="line">* Locking: read-locks runtimeLock</span><br><span class="line">**********************************************************************/</span><br><span class="line">Protocol * __unsafe_unretained * </span><br><span class="line">class_copyProtocolList(Class cls, unsigned int *outCount)</span><br><span class="line">&#123;</span><br><span class="line">    unsigned int count = 0;</span><br><span class="line">    Protocol **result = nil;</span><br><span class="line">    </span><br><span class="line">    if (!cls) &#123;</span><br><span class="line">        if (outCount) *outCount = 0;</span><br><span class="line">        return nil;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    mutex_locker_t lock(runtimeLock);</span><br><span class="line">    const auto protocols = cls-&gt;data()-&gt;protocols();</span><br><span class="line"></span><br><span class="line">    checkIsKnownClass(cls);</span><br><span class="line"></span><br><span class="line">    ASSERT(cls-&gt;isRealized());</span><br><span class="line">    </span><br><span class="line">    count = protocols.count();</span><br><span class="line"></span><br><span class="line">    if (count &gt; 0) &#123;</span><br><span class="line">        result = (Protocol **)malloc((count+1) * sizeof(Protocol *));</span><br><span class="line"></span><br><span class="line">        count = 0;</span><br><span class="line">        for (const auto&amp; proto : protocols) &#123;</span><br><span class="line">            result[count++] = (Protocol *)remapProtocol(proto);</span><br><span class="line">        &#125;</span><br><span class="line">        result[count] = nil;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (outCount) *outCount = count;</span><br><span class="line">    return result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* objc_copyImageNames</span><br><span class="line">* Copies names of loaded images with ObjC contents.</span><br><span class="line">*</span><br><span class="line">* Locking: acquires runtimeLock</span><br><span class="line">**********************************************************************/</span><br><span class="line">const char **objc_copyImageNames(unsigned int *outCount)</span><br><span class="line">&#123;</span><br><span class="line">    mutex_locker_t lock(runtimeLock);</span><br><span class="line"></span><br><span class="line">    int HeaderCount = 0;</span><br><span class="line">    for (header_info *hi = FirstHeader; hi != nil; hi = hi-&gt;getNext()) &#123;</span><br><span class="line">        HeaderCount++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">#if TARGET_OS_WIN32</span><br><span class="line">    const TCHAR **names = (const TCHAR **)</span><br><span class="line">        malloc((HeaderCount+1) * sizeof(TCHAR *));</span><br><span class="line">#else</span><br><span class="line">    const char **names = (const char **)</span><br><span class="line">        malloc((HeaderCount+1) * sizeof(char *));</span><br><span class="line">#endif</span><br><span class="line"></span><br><span class="line">    unsigned int count = 0;</span><br><span class="line">    for (header_info *hi = FirstHeader; hi != nil; hi = hi-&gt;getNext()) &#123;</span><br><span class="line">#if TARGET_OS_WIN32</span><br><span class="line">        if (hi-&gt;moduleName) &#123;</span><br><span class="line">            names[count++] = hi-&gt;moduleName;</span><br><span class="line">        &#125;</span><br><span class="line">#else</span><br><span class="line">        const char *fname = hi-&gt;fname();</span><br><span class="line">        if (fname) &#123;</span><br><span class="line">            names[count++] = fname;</span><br><span class="line">        &#125;</span><br><span class="line">#endif</span><br><span class="line">    &#125;</span><br><span class="line">    names[count] = nil;</span><br><span class="line">    </span><br><span class="line">    if (count == 0) &#123;</span><br><span class="line">        // Return nil instead of empty list if there are no images</span><br><span class="line">        free((void *)names);</span><br><span class="line">        names = nil;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (outCount) *outCount = count;</span><br><span class="line">    return names;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* copyClassNamesForImage_nolock</span><br><span class="line">* Copies class names from the given image.</span><br><span class="line">* Missing weak-import classes are omitted.</span><br><span class="line">* Swift class names are demangled.</span><br><span class="line">*</span><br><span class="line">* Locking: runtimeLock must be held by the caller</span><br><span class="line">**********************************************************************/</span><br><span class="line">const char **</span><br><span class="line">copyClassNamesForImage_nolock(header_info *hi, unsigned int *outCount)</span><br><span class="line">&#123;</span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line">    ASSERT(hi);</span><br><span class="line"></span><br><span class="line">    size_t count;</span><br><span class="line">    classref_t const *classlist = _getObjc2ClassList(hi, &amp;count);</span><br><span class="line">    const char **names = (const char **)</span><br><span class="line">        malloc((count+1) * sizeof(const char *));</span><br><span class="line"></span><br><span class="line">    size_t shift = 0;</span><br><span class="line">    for (size_t i = 0; i &lt; count; i++) &#123;</span><br><span class="line">        Class cls = remapClass(classlist[i]);</span><br><span class="line">        if (cls) &#123;</span><br><span class="line">            names[i-shift] = cls-&gt;demangledName(/* needs lock */false);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            shift++;  // ignored weak-linked class</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    count -= shift;</span><br><span class="line">    names[count] = nil;</span><br><span class="line"></span><br><span class="line">    if (outCount) *outCount = (unsigned int)count;</span><br><span class="line">    return names;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Class *</span><br><span class="line">copyClassesForImage_nolock(header_info *hi, unsigned int *outCount)</span><br><span class="line">&#123;</span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line">    ASSERT(hi);</span><br><span class="line"></span><br><span class="line">    size_t count;</span><br><span class="line">    classref_t const *classlist = _getObjc2ClassList(hi, &amp;count);</span><br><span class="line">    Class *classes = (Class *)</span><br><span class="line">        malloc((count+1) * sizeof(Class));</span><br><span class="line"></span><br><span class="line">    size_t shift = 0;</span><br><span class="line">    for (size_t i = 0; i &lt; count; i++) &#123;</span><br><span class="line">        Class cls = remapClass(classlist[i]);</span><br><span class="line">        if (cls) &#123;</span><br><span class="line">            classes[i-shift] = cls;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            shift++;  // ignored weak-linked class</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    count -= shift;</span><br><span class="line">    classes[count] = nil;</span><br><span class="line"></span><br><span class="line">    if (outCount) *outCount = (unsigned int)count;</span><br><span class="line">    return classes;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* objc_copyClassNamesForImage</span><br><span class="line">* Copies class names from the named image.</span><br><span class="line">* The image name must be identical to dladdr&#x27;s dli_fname value.</span><br><span class="line">* Missing weak-import classes are omitted.</span><br><span class="line">* Swift class names are demangled.</span><br><span class="line">*</span><br><span class="line">* Locking: acquires runtimeLock</span><br><span class="line">**********************************************************************/</span><br><span class="line">const char **</span><br><span class="line">objc_copyClassNamesForImage(const char *image, unsigned int *outCount)</span><br><span class="line">&#123;</span><br><span class="line">    if (!image) &#123;</span><br><span class="line">        if (outCount) *outCount = 0;</span><br><span class="line">        return nil;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    mutex_locker_t lock(runtimeLock);</span><br><span class="line"></span><br><span class="line">    // Find the image.</span><br><span class="line">    header_info *hi;</span><br><span class="line">    for (hi = FirstHeader; hi != nil; hi = hi-&gt;getNext()) &#123;</span><br><span class="line">#if TARGET_OS_WIN32</span><br><span class="line">        if (0 == wcscmp((TCHAR *)image, hi-&gt;moduleName)) break;</span><br><span class="line">#else</span><br><span class="line">        if (0 == strcmp(image, hi-&gt;fname())) break;</span><br><span class="line">#endif</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (!hi) &#123;</span><br><span class="line">        if (outCount) *outCount = 0;</span><br><span class="line">        return nil;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return copyClassNamesForImage_nolock(hi, outCount);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Class *</span><br><span class="line">objc_copyClassesForImage(const char *image, unsigned int *outCount)</span><br><span class="line">&#123;</span><br><span class="line">    if (!image) &#123;</span><br><span class="line">        if (outCount) *outCount = 0;</span><br><span class="line">        return nil;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    mutex_locker_t lock(runtimeLock);</span><br><span class="line"></span><br><span class="line">    // Find the image.</span><br><span class="line">    header_info *hi;</span><br><span class="line">    for (hi = FirstHeader; hi != nil; hi = hi-&gt;getNext()) &#123;</span><br><span class="line">        if (0 == strcmp(image, hi-&gt;fname())) break;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (!hi) &#123;</span><br><span class="line">        if (outCount) *outCount = 0;</span><br><span class="line">        return nil;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return copyClassesForImage_nolock(hi, outCount);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* objc_copyClassNamesForImageHeader</span><br><span class="line">* Copies class names from the given image.</span><br><span class="line">* Missing weak-import classes are omitted.</span><br><span class="line">* Swift class names are demangled.</span><br><span class="line">*</span><br><span class="line">* Locking: acquires runtimeLock</span><br><span class="line">**********************************************************************/</span><br><span class="line">const char **</span><br><span class="line">objc_copyClassNamesForImageHeader(const struct mach_header *mh, unsigned int *outCount)</span><br><span class="line">&#123;</span><br><span class="line">    if (!mh) &#123;</span><br><span class="line">        if (outCount) *outCount = 0;</span><br><span class="line">        return nil;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    mutex_locker_t lock(runtimeLock);</span><br><span class="line"></span><br><span class="line">    // Find the image.</span><br><span class="line">    header_info *hi;</span><br><span class="line">    for (hi = FirstHeader; hi != nil; hi = hi-&gt;getNext()) &#123;</span><br><span class="line">        if (hi-&gt;mhdr() == (const headerType *)mh) break;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (!hi) &#123;</span><br><span class="line">        if (outCount) *outCount = 0;</span><br><span class="line">        return nil;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return copyClassNamesForImage_nolock(hi, outCount);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* saveTemporaryString</span><br><span class="line">* Save a string in a thread-local FIFO buffer. </span><br><span class="line">* This is suitable for temporary strings generated for logging purposes.</span><br><span class="line">**********************************************************************/</span><br><span class="line">static void</span><br><span class="line">saveTemporaryString(char *str)</span><br><span class="line">&#123;</span><br><span class="line">    // Fixed-size FIFO. We free the first string, shift </span><br><span class="line">    // the rest, and add the new string to the end.</span><br><span class="line">    _objc_pthread_data *data = _objc_fetch_pthread_data(true);</span><br><span class="line">    if (data-&gt;printableNames[0]) &#123;</span><br><span class="line">        free(data-&gt;printableNames[0]);</span><br><span class="line">    &#125;</span><br><span class="line">    int last = countof(data-&gt;printableNames) - 1;</span><br><span class="line">    for (int i = 0; i &lt; last; i++) &#123;</span><br><span class="line">        data-&gt;printableNames[i] = data-&gt;printableNames[i+1];</span><br><span class="line">    &#125;</span><br><span class="line">    data-&gt;printableNames[last] = str;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* objc_class::nameForLogging</span><br><span class="line">* Returns the class&#x27;s name, suitable for display.</span><br><span class="line">* The returned memory is TEMPORARY. Print it or copy it immediately.</span><br><span class="line">* Locking: none</span><br><span class="line">**********************************************************************/</span><br><span class="line">const char *</span><br><span class="line">objc_class::nameForLogging()</span><br><span class="line">&#123;</span><br><span class="line">    // Handle the easy case directly.</span><br><span class="line">    if (isRealized()  ||  isFuture()) &#123;</span><br><span class="line">        if (!isAnySwift()) &#123;</span><br><span class="line">            return data()-&gt;ro()-&gt;getName();</span><br><span class="line">        &#125;</span><br><span class="line">        auto rwe = data()-&gt;ext();</span><br><span class="line">        if (rwe &amp;&amp; rwe-&gt;demangledName) &#123;</span><br><span class="line">            return rwe-&gt;demangledName;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    char *result;</span><br><span class="line"></span><br><span class="line">    if (isStubClass()) &#123;</span><br><span class="line">        asprintf(&amp;result, &quot;&lt;stub class %p&gt;&quot;, this);</span><br><span class="line">    &#125; else if (const char *name = nonlazyMangledName()) &#123;</span><br><span class="line">        char *de = copySwiftV1DemangledName(name);</span><br><span class="line">        if (de) result = de;</span><br><span class="line">        else result = strdup(name);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        asprintf(&amp;result, &quot;&lt;lazily named class %p&gt;&quot;, this);</span><br><span class="line">    &#125;</span><br><span class="line">    saveTemporaryString(result);</span><br><span class="line">    return result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* objc_class::demangledName</span><br><span class="line">* If realize=false, the class must already be realized or future.</span><br><span class="line">* Locking: runtimeLock may or may not be held by the caller.</span><br><span class="line">**********************************************************************/</span><br><span class="line">mutex_t DemangleCacheLock;</span><br><span class="line">static objc::DenseSet&lt;const char *&gt; *DemangleCache;</span><br><span class="line">const char *</span><br><span class="line">objc_class::demangledName(bool needsLock)</span><br><span class="line">&#123;</span><br><span class="line">    if (!needsLock) &#123;</span><br><span class="line">        runtimeLock.assertLocked();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Return previously demangled name if available.</span><br><span class="line">    if (isRealized()  ||  isFuture()) &#123;</span><br><span class="line">        // Swift metaclasses don&#x27;t have the is-Swift bit.</span><br><span class="line">        // We can&#x27;t take this shortcut for them.</span><br><span class="line">        if (isFuture() || (!isMetaClass() &amp;&amp; !isAnySwift())) &#123;</span><br><span class="line">            return data()-&gt;ro()-&gt;getName();</span><br><span class="line">        &#125;</span><br><span class="line">        auto rwe = data()-&gt;ext();</span><br><span class="line">        if (rwe &amp;&amp; rwe-&gt;demangledName) &#123;</span><br><span class="line">            return rwe-&gt;demangledName;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Try demangling the mangled name.</span><br><span class="line">    const char *mangled = mangledName();</span><br><span class="line">    char *de = copySwiftV1DemangledName(mangled);</span><br><span class="line">    class_rw_ext_t *rwe;</span><br><span class="line"></span><br><span class="line">    if (isRealized()  ||  isFuture()) &#123;</span><br><span class="line">        if (needsLock) &#123;</span><br><span class="line">            mutex_locker_t lock(runtimeLock);</span><br><span class="line">            rwe = data()-&gt;extAllocIfNeeded();</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            rwe = data()-&gt;extAllocIfNeeded();</span><br><span class="line">        &#125;</span><br><span class="line">        // Class is already realized or future.</span><br><span class="line">        // Save demangling result in rw data.</span><br><span class="line">        // We may not own runtimeLock so use an atomic operation instead.</span><br><span class="line">        if (! OSAtomicCompareAndSwapPtrBarrier(nil, (void*)(de ?: mangled), </span><br><span class="line">                                               (void**)&amp;rwe-&gt;demangledName))</span><br><span class="line">        &#123;</span><br><span class="line">            if (de) free(de);</span><br><span class="line">        &#125;</span><br><span class="line">        return rwe-&gt;demangledName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Class is not yet realized.</span><br><span class="line">    if (!de) &#123;</span><br><span class="line">        // Name is not mangled. Return it without caching.</span><br><span class="line">        return mangled;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Class is not yet realized and name is mangled.</span><br><span class="line">    // Allocate the name but don&#x27;t save it in the class.</span><br><span class="line">    // Save the name in a side cache instead to prevent leaks.</span><br><span class="line">    // When the class is actually realized we may allocate a second</span><br><span class="line">    // copy of the name, but we don&#x27;t care.</span><br><span class="line">    // (Previously we would try to realize the class now and save the</span><br><span class="line">    // name there, but realization is more complicated for Swift classes.)</span><br><span class="line"></span><br><span class="line">    // Only objc_copyClassNamesForImage() should get here.</span><br><span class="line">    // fixme lldb&#x27;s calls to class_getName() can also get here when</span><br><span class="line">    // interrogating the dyld shared cache. (rdar://27258517)</span><br><span class="line">    // fixme ASSERT(realize);</span><br><span class="line"></span><br><span class="line">    const char *cached;</span><br><span class="line">    &#123;</span><br><span class="line">        mutex_locker_t lock(DemangleCacheLock);</span><br><span class="line">        if (!DemangleCache) &#123;</span><br><span class="line">            DemangleCache = new objc::DenseSet&lt;const char *&gt;&#123;&#125;;</span><br><span class="line">        &#125;</span><br><span class="line">        cached = *DemangleCache-&gt;insert(de).first;</span><br><span class="line">    &#125;</span><br><span class="line">    if (cached != de) free(de);</span><br><span class="line">    return cached;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* class_getName</span><br><span class="line">* fixme</span><br><span class="line">* Locking: may acquire DemangleCacheLock</span><br><span class="line">**********************************************************************/</span><br><span class="line">const char *class_getName(Class cls)</span><br><span class="line">&#123;</span><br><span class="line">    if (!cls) return &quot;nil&quot;;</span><br><span class="line">    // fixme lldb calls class_getName() on unrealized classes (rdar://27258517)</span><br><span class="line">    // ASSERT(cls-&gt;isRealized()  ||  cls-&gt;isFuture());</span><br><span class="line">    return cls-&gt;demangledName(/* needs lock */true);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* objc_debug_class_getNameRaw</span><br><span class="line">* fixme</span><br><span class="line">* Locking: none</span><br><span class="line">**********************************************************************/</span><br><span class="line">const char *objc_debug_class_getNameRaw(Class cls)</span><br><span class="line">&#123;</span><br><span class="line">    if (!cls) return &quot;nil&quot;;</span><br><span class="line">    return cls-&gt;mangledName();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* class_getVersion</span><br><span class="line">* fixme</span><br><span class="line">* Locking: none</span><br><span class="line">**********************************************************************/</span><br><span class="line">int </span><br><span class="line">class_getVersion(Class cls)</span><br><span class="line">&#123;</span><br><span class="line">    if (!cls) return 0;</span><br><span class="line">    ASSERT(cls-&gt;isRealized());</span><br><span class="line">    auto rwe = cls-&gt;data()-&gt;ext();</span><br><span class="line">    if (rwe) &#123;</span><br><span class="line">        return rwe-&gt;version;</span><br><span class="line">    &#125;</span><br><span class="line">    return cls-&gt;isMetaClass() ? 7 : 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* class_setVersion</span><br><span class="line">* fixme</span><br><span class="line">* Locking: none</span><br><span class="line">**********************************************************************/</span><br><span class="line">void </span><br><span class="line">class_setVersion(Class cls, int version)</span><br><span class="line">&#123;</span><br><span class="line">    if (!cls) return;</span><br><span class="line">    ASSERT(cls-&gt;isRealized());</span><br><span class="line">    auto rwe = cls-&gt;data()-&gt;ext();</span><br><span class="line">    if (!rwe) &#123;</span><br><span class="line">        mutex_locker_t lock(runtimeLock);</span><br><span class="line">        rwe = cls-&gt;data()-&gt;extAllocIfNeeded();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    rwe-&gt;version = version;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line"> * search_method_list_inline</span><br><span class="line"> **********************************************************************/</span><br><span class="line">template&lt;class getNameFunc&gt;</span><br><span class="line">ALWAYS_INLINE static method_t *</span><br><span class="line">findMethodInSortedMethodList(SEL key, const method_list_t *list, const getNameFunc &amp;getName)</span><br><span class="line">&#123;</span><br><span class="line">    ASSERT(list);</span><br><span class="line"></span><br><span class="line">    auto first = list-&gt;begin();</span><br><span class="line">    auto base = first;</span><br><span class="line">    decltype(first) probe;</span><br><span class="line"></span><br><span class="line">    uintptr_t keyValue = (uintptr_t)key;</span><br><span class="line">    uint32_t count;</span><br><span class="line">    </span><br><span class="line">    for (count = list-&gt;count; count != 0; count &gt;&gt;= 1) &#123;</span><br><span class="line">        probe = base + (count &gt;&gt; 1);</span><br><span class="line">        </span><br><span class="line">        uintptr_t probeValue = (uintptr_t)getName(probe);</span><br><span class="line">        </span><br><span class="line">        if (keyValue == probeValue) &#123;</span><br><span class="line">            // `probe` is a match.</span><br><span class="line">            // Rewind looking for the *first* occurrence of this value.</span><br><span class="line">            // This is required for correct category overrides.</span><br><span class="line">            while (probe &gt; first &amp;&amp; keyValue == (uintptr_t)getName((probe - 1))) &#123;</span><br><span class="line">                probe--;</span><br><span class="line">            &#125;</span><br><span class="line">            return &amp;*probe;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        if (keyValue &gt; probeValue) &#123;</span><br><span class="line">            base = probe + 1;</span><br><span class="line">            count--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    return nil;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ALWAYS_INLINE static method_t *</span><br><span class="line">findMethodInSortedMethodList(SEL key, const method_list_t *list)</span><br><span class="line">&#123;</span><br><span class="line">    if (list-&gt;isSmallList()) &#123;</span><br><span class="line">        if (CONFIG_SHARED_CACHE_RELATIVE_DIRECT_SELECTORS &amp;&amp; objc::inSharedCache((uintptr_t)list)) &#123;</span><br><span class="line">            return findMethodInSortedMethodList(key, list, [](method_t &amp;m) &#123; return m.getSmallNameAsSEL(); &#125;);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            return findMethodInSortedMethodList(key, list, [](method_t &amp;m) &#123; return m.getSmallNameAsSELRef(); &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        return findMethodInSortedMethodList(key, list, [](method_t &amp;m) &#123; return m.big().name; &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">template&lt;class getNameFunc&gt;</span><br><span class="line">ALWAYS_INLINE static method_t *</span><br><span class="line">findMethodInUnsortedMethodList(SEL sel, const method_list_t *list, const getNameFunc &amp;getName)</span><br><span class="line">&#123;</span><br><span class="line">    for (auto&amp; meth : *list) &#123;</span><br><span class="line">        if (getName(meth) == sel) return &amp;meth;</span><br><span class="line">    &#125;</span><br><span class="line">    return nil;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ALWAYS_INLINE static method_t *</span><br><span class="line">findMethodInUnsortedMethodList(SEL key, const method_list_t *list)</span><br><span class="line">&#123;</span><br><span class="line">    if (list-&gt;isSmallList()) &#123;</span><br><span class="line">        if (CONFIG_SHARED_CACHE_RELATIVE_DIRECT_SELECTORS &amp;&amp; objc::inSharedCache((uintptr_t)list)) &#123;</span><br><span class="line">            return findMethodInUnsortedMethodList(key, list, [](method_t &amp;m) &#123; return m.getSmallNameAsSEL(); &#125;);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            return findMethodInUnsortedMethodList(key, list, [](method_t &amp;m) &#123; return m.getSmallNameAsSELRef(); &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        return findMethodInUnsortedMethodList(key, list, [](method_t &amp;m) &#123; return m.big().name; &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ALWAYS_INLINE static method_t *</span><br><span class="line">search_method_list_inline(const method_list_t *mlist, SEL sel)</span><br><span class="line">&#123;</span><br><span class="line">    int methodListIsFixedUp = mlist-&gt;isFixedUp();</span><br><span class="line">    int methodListHasExpectedSize = mlist-&gt;isExpectedSize();</span><br><span class="line">    </span><br><span class="line">    if (fastpath(methodListIsFixedUp &amp;&amp; methodListHasExpectedSize)) &#123;</span><br><span class="line">        return findMethodInSortedMethodList(sel, mlist);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        // Linear search of unsorted method list</span><br><span class="line">        if (auto *m = findMethodInUnsortedMethodList(sel, mlist))</span><br><span class="line">            return m;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">#if DEBUG</span><br><span class="line">    // sanity-check negative results</span><br><span class="line">    if (mlist-&gt;isFixedUp()) &#123;</span><br><span class="line">        for (auto&amp; meth : *mlist) &#123;</span><br><span class="line">            if (meth.name() == sel) &#123;</span><br><span class="line">                _objc_fatal(&quot;linear search worked when binary search did not&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">#endif</span><br><span class="line"></span><br><span class="line">    return nil;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">NEVER_INLINE static method_t *</span><br><span class="line">search_method_list(const method_list_t *mlist, SEL sel)</span><br><span class="line">&#123;</span><br><span class="line">    return search_method_list_inline(mlist, sel);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line"> * method_lists_contains_any</span><br><span class="line"> **********************************************************************/</span><br><span class="line">template&lt;typename T&gt;</span><br><span class="line">static NEVER_INLINE bool</span><br><span class="line">method_lists_contains_any(T *mlists, T *end,</span><br><span class="line">                          SEL sels[], size_t selcount)</span><br><span class="line">&#123;</span><br><span class="line">    while (mlists &lt; end) &#123;</span><br><span class="line">        const method_list_t *mlist = *mlists++;</span><br><span class="line">        int methodListIsFixedUp = mlist-&gt;isFixedUp();</span><br><span class="line">        int methodListHasExpectedSize = mlist-&gt;entsize() == sizeof(struct method_t::big);</span><br><span class="line"></span><br><span class="line">        if (fastpath(methodListIsFixedUp &amp;&amp; methodListHasExpectedSize)) &#123;</span><br><span class="line">            for (size_t i = 0; i &lt; selcount; i++) &#123;</span><br><span class="line">                if (findMethodInSortedMethodList(sels[i], mlist)) &#123;</span><br><span class="line">                    return true;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            for (size_t i = 0; i &lt; selcount; i++) &#123;</span><br><span class="line">                if (findMethodInUnsortedMethodList(sels[i], mlist)) &#123;</span><br><span class="line">                    return true;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return false;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line"> * getMethodNoSuper_nolock</span><br><span class="line"> * fixme</span><br><span class="line"> * Locking: runtimeLock must be read- or write-locked by the caller</span><br><span class="line"> **********************************************************************/</span><br><span class="line">static method_t *</span><br><span class="line">getMethodNoSuper_nolock(Class cls, SEL sel)</span><br><span class="line">&#123;</span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line"></span><br><span class="line">    ASSERT(cls-&gt;isRealized());</span><br><span class="line">    // fixme nil cls? </span><br><span class="line">    // fixme nil sel?</span><br><span class="line"></span><br><span class="line">    auto const methods = cls-&gt;data()-&gt;methods();</span><br><span class="line">    for (auto mlists = methods.beginLists(),</span><br><span class="line">              end = methods.endLists();</span><br><span class="line">         mlists != end;</span><br><span class="line">         ++mlists)</span><br><span class="line">    &#123;</span><br><span class="line">        // &lt;rdar://problem/46904873&gt; getMethodNoSuper_nolock is the hottest</span><br><span class="line">        // caller of search_method_list, inlining it turns</span><br><span class="line">        // getMethodNoSuper_nolock into a frame-less function and eliminates</span><br><span class="line">        // any store from this codepath.</span><br><span class="line">        method_t *m = search_method_list_inline(*mlists, sel);</span><br><span class="line">        if (m) return m;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return nil;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* getMethod_nolock</span><br><span class="line">* fixme</span><br><span class="line">* Locking: runtimeLock must be read- or write-locked by the caller</span><br><span class="line">**********************************************************************/</span><br><span class="line">static method_t *</span><br><span class="line">getMethod_nolock(Class cls, SEL sel)</span><br><span class="line">&#123;</span><br><span class="line">    method_t *m = nil;</span><br><span class="line"></span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line"></span><br><span class="line">    // fixme nil cls?</span><br><span class="line">    // fixme nil sel?</span><br><span class="line"></span><br><span class="line">    ASSERT(cls-&gt;isRealized());</span><br><span class="line"></span><br><span class="line">    while (cls  &amp;&amp;  ((m = getMethodNoSuper_nolock(cls, sel))) == nil) &#123;</span><br><span class="line">        cls = cls-&gt;getSuperclass();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return m;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* _class_getMethod</span><br><span class="line">* fixme</span><br><span class="line">* Locking: read-locks runtimeLock</span><br><span class="line">**********************************************************************/</span><br><span class="line">static Method _class_getMethod(Class cls, SEL sel)</span><br><span class="line">&#123;</span><br><span class="line">    mutex_locker_t lock(runtimeLock);</span><br><span class="line">    return getMethod_nolock(cls, sel);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* class_getInstanceMethod.  Return the instance method for the</span><br><span class="line">* specified class and selector.</span><br><span class="line">**********************************************************************/</span><br><span class="line">Method class_getInstanceMethod(Class cls, SEL sel)</span><br><span class="line">&#123;</span><br><span class="line">    if (!cls  ||  !sel) return nil;</span><br><span class="line"></span><br><span class="line">    // This deliberately avoids +initialize because it historically did so.</span><br><span class="line"></span><br><span class="line">    // This implementation is a bit weird because it&#x27;s the only place that </span><br><span class="line">    // wants a Method instead of an IMP.</span><br><span class="line"></span><br><span class="line">#warning fixme build and search caches</span><br><span class="line">        </span><br><span class="line">    // Search method lists, try method resolver, etc.</span><br><span class="line">    lookUpImpOrForward(nil, sel, cls, LOOKUP_RESOLVER);</span><br><span class="line"></span><br><span class="line">#warning fixme build and search caches</span><br><span class="line"></span><br><span class="line">    return _class_getMethod(cls, sel);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* resolveClassMethod</span><br><span class="line">* Call +resolveClassMethod, looking for a method to be added to class cls.</span><br><span class="line">* cls should be a metaclass.</span><br><span class="line">* Does not check if the method already exists.</span><br><span class="line">**********************************************************************/</span><br><span class="line">static void resolveClassMethod(id inst, SEL sel, Class cls)</span><br><span class="line">&#123;</span><br><span class="line">    runtimeLock.assertUnlocked();</span><br><span class="line">    ASSERT(cls-&gt;isRealized());</span><br><span class="line">    ASSERT(cls-&gt;isMetaClass());</span><br><span class="line"></span><br><span class="line">    if (!lookUpImpOrNilTryCache(inst, @selector(resolveClassMethod:), cls)) &#123;</span><br><span class="line">        // Resolver not implemented.</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Class nonmeta;</span><br><span class="line">    &#123;</span><br><span class="line">        mutex_locker_t lock(runtimeLock);</span><br><span class="line">        nonmeta = getMaybeUnrealizedNonMetaClass(cls, inst);</span><br><span class="line">        // +initialize path should have realized nonmeta already</span><br><span class="line">        if (!nonmeta-&gt;isRealized()) &#123;</span><br><span class="line">            _objc_fatal(&quot;nonmeta class %s (%p) unexpectedly not realized&quot;,</span><br><span class="line">                        nonmeta-&gt;nameForLogging(), nonmeta);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    BOOL (*msg)(Class, SEL, SEL) = (typeof(msg))objc_msgSend;</span><br><span class="line">    bool resolved = msg(nonmeta, @selector(resolveClassMethod:), sel);</span><br><span class="line"></span><br><span class="line">    // Cache the result (good or bad) so the resolver doesn&#x27;t fire next time.</span><br><span class="line">    // +resolveClassMethod adds to self-&gt;ISA() a.k.a. cls</span><br><span class="line">    IMP imp = lookUpImpOrNilTryCache(inst, sel, cls);</span><br><span class="line"></span><br><span class="line">    if (resolved  &amp;&amp;  PrintResolving) &#123;</span><br><span class="line">        if (imp) &#123;</span><br><span class="line">            _objc_inform(&quot;RESOLVE: method %c[%s %s] &quot;</span><br><span class="line">                         &quot;dynamically resolved to %p&quot;, </span><br><span class="line">                         cls-&gt;isMetaClass() ? &#x27;+&#x27; : &#x27;-&#x27;, </span><br><span class="line">                         cls-&gt;nameForLogging(), sel_getName(sel), imp);</span><br><span class="line">        &#125;</span><br><span class="line">        else &#123;</span><br><span class="line">            // Method resolver didn&#x27;t add anything?</span><br><span class="line">            _objc_inform(&quot;RESOLVE: +[%s resolveClassMethod:%s] returned YES&quot;</span><br><span class="line">                         &quot;, but no new implementation of %c[%s %s] was found&quot;,</span><br><span class="line">                         cls-&gt;nameForLogging(), sel_getName(sel), </span><br><span class="line">                         cls-&gt;isMetaClass() ? &#x27;+&#x27; : &#x27;-&#x27;, </span><br><span class="line">                         cls-&gt;nameForLogging(), sel_getName(sel));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* resolveInstanceMethod</span><br><span class="line">* Call +resolveInstanceMethod, looking for a method to be added to class cls.</span><br><span class="line">* cls may be a metaclass or a non-meta class.</span><br><span class="line">* Does not check if the method already exists.</span><br><span class="line">**********************************************************************/</span><br><span class="line">static void resolveInstanceMethod(id inst, SEL sel, Class cls)</span><br><span class="line">&#123;</span><br><span class="line">    runtimeLock.assertUnlocked();</span><br><span class="line">    ASSERT(cls-&gt;isRealized());</span><br><span class="line">    SEL resolve_sel = @selector(resolveInstanceMethod:);</span><br><span class="line"></span><br><span class="line">    if (!lookUpImpOrNilTryCache(cls, resolve_sel, cls-&gt;ISA(/*authenticated*/true))) &#123;</span><br><span class="line">        // Resolver not implemented.</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    BOOL (*msg)(Class, SEL, SEL) = (typeof(msg))objc_msgSend;</span><br><span class="line">    bool resolved = msg(cls, resolve_sel, sel);</span><br><span class="line"></span><br><span class="line">    // Cache the result (good or bad) so the resolver doesn&#x27;t fire next time.</span><br><span class="line">    // +resolveInstanceMethod adds to self a.k.a. cls</span><br><span class="line">    IMP imp = lookUpImpOrNilTryCache(inst, sel, cls);</span><br><span class="line"></span><br><span class="line">    if (resolved  &amp;&amp;  PrintResolving) &#123;</span><br><span class="line">        if (imp) &#123;</span><br><span class="line">            _objc_inform(&quot;RESOLVE: method %c[%s %s] &quot;</span><br><span class="line">                         &quot;dynamically resolved to %p&quot;, </span><br><span class="line">                         cls-&gt;isMetaClass() ? &#x27;+&#x27; : &#x27;-&#x27;, </span><br><span class="line">                         cls-&gt;nameForLogging(), sel_getName(sel), imp);</span><br><span class="line">        &#125;</span><br><span class="line">        else &#123;</span><br><span class="line">            // Method resolver didn&#x27;t add anything?</span><br><span class="line">            _objc_inform(&quot;RESOLVE: +[%s resolveInstanceMethod:%s] returned YES&quot;</span><br><span class="line">                         &quot;, but no new implementation of %c[%s %s] was found&quot;,</span><br><span class="line">                         cls-&gt;nameForLogging(), sel_getName(sel), </span><br><span class="line">                         cls-&gt;isMetaClass() ? &#x27;+&#x27; : &#x27;-&#x27;, </span><br><span class="line">                         cls-&gt;nameForLogging(), sel_getName(sel));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* resolveMethod_locked</span><br><span class="line">* Call +resolveClassMethod or +resolveInstanceMethod.</span><br><span class="line">*</span><br><span class="line">* Called with the runtimeLock held to avoid pressure in the caller</span><br><span class="line">* Tail calls into lookUpImpOrForward, also to avoid pressure in the callerb</span><br><span class="line">**********************************************************************/</span><br><span class="line">static NEVER_INLINE IMP</span><br><span class="line">resolveMethod_locked(id inst, SEL sel, Class cls, int behavior)</span><br><span class="line">&#123;</span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line">    ASSERT(cls-&gt;isRealized());</span><br><span class="line"></span><br><span class="line">    runtimeLock.unlock();</span><br><span class="line"></span><br><span class="line">    if (! cls-&gt;isMetaClass()) &#123;</span><br><span class="line">        // try [cls resolveInstanceMethod:sel]</span><br><span class="line">        resolveInstanceMethod(inst, sel, cls);</span><br><span class="line">    &#125; </span><br><span class="line">    else &#123;</span><br><span class="line">        // try [nonMetaClass resolveClassMethod:sel]</span><br><span class="line">        // and [cls resolveInstanceMethod:sel]</span><br><span class="line">        resolveClassMethod(inst, sel, cls);</span><br><span class="line">        if (!lookUpImpOrNilTryCache(inst, sel, cls)) &#123;</span><br><span class="line">            resolveInstanceMethod(inst, sel, cls);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // chances are that calling the resolver have populated the cache</span><br><span class="line">    // so attempt using it</span><br><span class="line">    return lookUpImpOrForwardTryCache(inst, sel, cls, behavior);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* log_and_fill_cache</span><br><span class="line">* Log this method call. If the logger permits it, fill the method cache.</span><br><span class="line">* cls is the method whose cache should be filled. </span><br><span class="line">* implementer is the class that owns the implementation in question.</span><br><span class="line">**********************************************************************/</span><br><span class="line">static void</span><br><span class="line">log_and_fill_cache(Class cls, IMP imp, SEL sel, id receiver, Class implementer)</span><br><span class="line">&#123;</span><br><span class="line">#if SUPPORT_MESSAGE_LOGGING</span><br><span class="line">    if (slowpath(objcMsgLogEnabled &amp;&amp; implementer)) &#123;</span><br><span class="line">        bool cacheIt = logMessageSend(implementer-&gt;isMetaClass(), </span><br><span class="line">                                      cls-&gt;nameForLogging(),</span><br><span class="line">                                      implementer-&gt;nameForLogging(), </span><br><span class="line">                                      sel);</span><br><span class="line">        if (!cacheIt) return;</span><br><span class="line">    &#125;</span><br><span class="line">#endif</span><br><span class="line">    cls-&gt;cache.insert(sel, imp, receiver);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* realizeAndInitializeIfNeeded_locked</span><br><span class="line">* Realize the given class if not already realized, and initialize it if</span><br><span class="line">* not already initialized.</span><br><span class="line">* inst is an instance of cls or a subclass, or nil if none is known.</span><br><span class="line">* cls is the class to initialize and realize.</span><br><span class="line">* initializer is true to initialize the class, false to skip initialization.</span><br><span class="line">**********************************************************************/</span><br><span class="line">static Class</span><br><span class="line">realizeAndInitializeIfNeeded_locked(id inst, Class cls, bool initialize)</span><br><span class="line">&#123;</span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line">    if (slowpath(!cls-&gt;isRealized())) &#123;</span><br><span class="line">        cls = realizeClassMaybeSwiftAndLeaveLocked(cls, runtimeLock);</span><br><span class="line">        // runtimeLock may have been dropped but is now locked again</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (slowpath(initialize &amp;&amp; !cls-&gt;isInitialized())) &#123;</span><br><span class="line">        cls = initializeAndLeaveLocked(cls, inst, runtimeLock);</span><br><span class="line">        // runtimeLock may have been dropped but is now locked again</span><br><span class="line"></span><br><span class="line">        // If sel == initialize, class_initialize will send +initialize and</span><br><span class="line">        // then the messenger will send +initialize again after this</span><br><span class="line">        // procedure finishes. Of course, if this is not being called</span><br><span class="line">        // from the messenger then it won&#x27;t happen. 2778172</span><br><span class="line">    &#125;</span><br><span class="line">    return cls;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* lookUpImpOrForward / lookUpImpOrForwardTryCache / lookUpImpOrNilTryCache</span><br><span class="line">* The standard IMP lookup.</span><br><span class="line">*</span><br><span class="line">* The TryCache variant attempts a fast-path lookup in the IMP Cache.</span><br><span class="line">* Most callers should use lookUpImpOrForwardTryCache with LOOKUP_INITIALIZE</span><br><span class="line">*</span><br><span class="line">* Without LOOKUP_INITIALIZE: tries to avoid +initialize (but sometimes fails)</span><br><span class="line">* With    LOOKUP_NIL: returns nil on negative cache hits</span><br><span class="line">*</span><br><span class="line">* inst is an instance of cls or a subclass thereof, or nil if none is known.</span><br><span class="line">*   If cls is an un-initialized metaclass then a non-nil inst is faster.</span><br><span class="line">* May return _objc_msgForward_impcache. IMPs destined for external use </span><br><span class="line">*   must be converted to _objc_msgForward or _objc_msgForward_stret.</span><br><span class="line">*   If you don&#x27;t want forwarding at all, use LOOKUP_NIL.</span><br><span class="line">**********************************************************************/</span><br><span class="line">ALWAYS_INLINE</span><br><span class="line">static IMP _lookUpImpTryCache(id inst, SEL sel, Class cls, int behavior)</span><br><span class="line">&#123;</span><br><span class="line">    runtimeLock.assertUnlocked();</span><br><span class="line"></span><br><span class="line">    if (slowpath(!cls-&gt;isInitialized())) &#123;</span><br><span class="line">        // see comment in lookUpImpOrForward</span><br><span class="line">        return lookUpImpOrForward(inst, sel, cls, behavior);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    IMP imp = cache_getImp(cls, sel);</span><br><span class="line">    if (imp != NULL) goto done;</span><br><span class="line">#if CONFIG_USE_PREOPT_CACHES</span><br><span class="line">    if (fastpath(cls-&gt;cache.isConstantOptimizedCache(/* strict */true))) &#123;</span><br><span class="line">        imp = cache_getImp(cls-&gt;cache.preoptFallbackClass(), sel);</span><br><span class="line">    &#125;</span><br><span class="line">#endif</span><br><span class="line">    if (slowpath(imp == NULL)) &#123;</span><br><span class="line">        return lookUpImpOrForward(inst, sel, cls, behavior);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">done:</span><br><span class="line">    if ((behavior &amp; LOOKUP_NIL) &amp;&amp; imp == (IMP)_objc_msgForward_impcache) &#123;</span><br><span class="line">        return nil;</span><br><span class="line">    &#125;</span><br><span class="line">    return imp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">IMP lookUpImpOrForwardTryCache(id inst, SEL sel, Class cls, int behavior)</span><br><span class="line">&#123;</span><br><span class="line">    return _lookUpImpTryCache(inst, sel, cls, behavior);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">IMP lookUpImpOrNilTryCache(id inst, SEL sel, Class cls, int behavior)</span><br><span class="line">&#123;</span><br><span class="line">    return _lookUpImpTryCache(inst, sel, cls, behavior | LOOKUP_NIL);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">NEVER_INLINE</span><br><span class="line">IMP lookUpImpOrForward(id inst, SEL sel, Class cls, int behavior)</span><br><span class="line">&#123;</span><br><span class="line">    const IMP forward_imp = (IMP)_objc_msgForward_impcache;</span><br><span class="line">    IMP imp = nil;</span><br><span class="line">    Class curClass;</span><br><span class="line"></span><br><span class="line">    runtimeLock.assertUnlocked();</span><br><span class="line"></span><br><span class="line">    if (slowpath(!cls-&gt;isInitialized())) &#123;</span><br><span class="line">        // The first message sent to a class is often +new or +alloc, or +self</span><br><span class="line">        // which goes through objc_opt_* or various optimized entry points.</span><br><span class="line">        //</span><br><span class="line">        // However, the class isn&#x27;t realized/initialized yet at this point,</span><br><span class="line">        // and the optimized entry points fall down through objc_msgSend,</span><br><span class="line">        // which ends up here.</span><br><span class="line">        //</span><br><span class="line">        // We really want to avoid caching these, as it can cause IMP caches</span><br><span class="line">        // to be made with a single entry forever.</span><br><span class="line">        //</span><br><span class="line">        // Note that this check is racy as several threads might try to</span><br><span class="line">        // message a given class for the first time at the same time,</span><br><span class="line">        // in which case we might cache anyway.</span><br><span class="line">        behavior |= LOOKUP_NOCACHE;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // runtimeLock is held during isRealized and isInitialized checking</span><br><span class="line">    // to prevent races against concurrent realization.</span><br><span class="line"></span><br><span class="line">    // runtimeLock is held during method search to make</span><br><span class="line">    // method-lookup + cache-fill atomic with respect to method addition.</span><br><span class="line">    // Otherwise, a category could be added but ignored indefinitely because</span><br><span class="line">    // the cache was re-filled with the old value after the cache flush on</span><br><span class="line">    // behalf of the category.</span><br><span class="line"></span><br><span class="line">    runtimeLock.lock();</span><br><span class="line"></span><br><span class="line">    // We don&#x27;t want people to be able to craft a binary blob that looks like</span><br><span class="line">    // a class but really isn&#x27;t one and do a CFI attack.</span><br><span class="line">    //</span><br><span class="line">    // To make these harder we want to make sure this is a class that was</span><br><span class="line">    // either built into the binary or legitimately registered through</span><br><span class="line">    // objc_duplicateClass, objc_initializeClassPair or objc_allocateClassPair.</span><br><span class="line">    checkIsKnownClass(cls);</span><br><span class="line"></span><br><span class="line">    cls = realizeAndInitializeIfNeeded_locked(inst, cls, behavior &amp; LOOKUP_INITIALIZE);</span><br><span class="line">    // runtimeLock may have been dropped but is now locked again</span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line">    curClass = cls;</span><br><span class="line"></span><br><span class="line">    // The code used to lookup the class&#x27;s cache again right after</span><br><span class="line">    // we take the lock but for the vast majority of the cases</span><br><span class="line">    // evidence shows this is a miss most of the time, hence a time loss.</span><br><span class="line">    //</span><br><span class="line">    // The only codepath calling into this without having performed some</span><br><span class="line">    // kind of cache lookup is class_getInstanceMethod().</span><br><span class="line"></span><br><span class="line">    for (unsigned attempts = unreasonableClassCount();;) &#123;</span><br><span class="line">        if (curClass-&gt;cache.isConstantOptimizedCache(/* strict */true)) &#123;</span><br><span class="line">#if CONFIG_USE_PREOPT_CACHES</span><br><span class="line">            imp = cache_getImp(curClass, sel);</span><br><span class="line">            if (imp) goto done_unlock;</span><br><span class="line">            curClass = curClass-&gt;cache.preoptFallbackClass();</span><br><span class="line">#endif</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            // curClass method list.</span><br><span class="line">            Method meth = getMethodNoSuper_nolock(curClass, sel);</span><br><span class="line">            if (meth) &#123;</span><br><span class="line">                imp = meth-&gt;imp(false);</span><br><span class="line">                goto done;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            if (slowpath((curClass = curClass-&gt;getSuperclass()) == nil)) &#123;</span><br><span class="line">                // No implementation found, and method resolver didn&#x27;t help.</span><br><span class="line">                // Use forwarding.</span><br><span class="line">                imp = forward_imp;</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // Halt if there is a cycle in the superclass chain.</span><br><span class="line">        if (slowpath(--attempts == 0)) &#123;</span><br><span class="line">            _objc_fatal(&quot;Memory corruption in class list.&quot;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // Superclass cache.</span><br><span class="line">        imp = cache_getImp(curClass, sel);</span><br><span class="line">        if (slowpath(imp == forward_imp)) &#123;</span><br><span class="line">            // Found a forward:: entry in a superclass.</span><br><span class="line">            // Stop searching, but don&#x27;t cache yet; call method</span><br><span class="line">            // resolver for this class first.</span><br><span class="line">            break;</span><br><span class="line">        &#125;</span><br><span class="line">        if (fastpath(imp)) &#123;</span><br><span class="line">            // Found the method in a superclass. Cache it in this class.</span><br><span class="line">            goto done;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // No implementation found. Try method resolver once.</span><br><span class="line"></span><br><span class="line">    if (slowpath(behavior &amp; LOOKUP_RESOLVER)) &#123;</span><br><span class="line">        behavior ^= LOOKUP_RESOLVER;</span><br><span class="line">        return resolveMethod_locked(inst, sel, cls, behavior);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"> done:</span><br><span class="line">    if (fastpath((behavior &amp; LOOKUP_NOCACHE) == 0)) &#123;</span><br><span class="line">#if CONFIG_USE_PREOPT_CACHES</span><br><span class="line">        while (cls-&gt;cache.isConstantOptimizedCache(/* strict */true)) &#123;</span><br><span class="line">            cls = cls-&gt;cache.preoptFallbackClass();</span><br><span class="line">        &#125;</span><br><span class="line">#endif</span><br><span class="line">        log_and_fill_cache(cls, imp, sel, inst, curClass);</span><br><span class="line">    &#125;</span><br><span class="line"> done_unlock:</span><br><span class="line">    runtimeLock.unlock();</span><br><span class="line">    if (slowpath((behavior &amp; LOOKUP_NIL) &amp;&amp; imp == forward_imp)) &#123;</span><br><span class="line">        return nil;</span><br><span class="line">    &#125;</span><br><span class="line">    return imp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* lookupMethodInClassAndLoadCache.</span><br><span class="line">* Like lookUpImpOrForward, but does not search superclasses.</span><br><span class="line">* Caches and returns objc_msgForward if the method is not found in the class.</span><br><span class="line">**********************************************************************/</span><br><span class="line">IMP lookupMethodInClassAndLoadCache(Class cls, SEL sel)</span><br><span class="line">&#123;</span><br><span class="line">    IMP imp;</span><br><span class="line"></span><br><span class="line">    // fixme this is incomplete - no resolver, +initialize - </span><br><span class="line">    // but it&#x27;s only used for .cxx_construct/destruct so we don&#x27;t care</span><br><span class="line">    ASSERT(sel == SEL_cxx_construct  ||  sel == SEL_cxx_destruct);</span><br><span class="line"></span><br><span class="line">    // Search cache first.</span><br><span class="line">    //</span><br><span class="line">    // If the cache used for the lookup is preoptimized,</span><br><span class="line">    // we ask for `_objc_msgForward_impcache` to be returned on cache misses,</span><br><span class="line">    // so that there&#x27;s no TOCTOU race between using `isConstantOptimizedCache`</span><br><span class="line">    // and calling cache_getImp() when not under the runtime lock.</span><br><span class="line">    //</span><br><span class="line">    // For dynamic caches, a miss will return `nil`</span><br><span class="line">    imp = cache_getImp(cls, sel, _objc_msgForward_impcache);</span><br><span class="line"></span><br><span class="line">    if (slowpath(imp == nil)) &#123;</span><br><span class="line">        // Cache miss. Search method list.</span><br><span class="line"></span><br><span class="line">        mutex_locker_t lock(runtimeLock);</span><br><span class="line"></span><br><span class="line">        if (auto meth = getMethodNoSuper_nolock(cls, sel)) &#123;</span><br><span class="line">            // Hit in method list. Cache it.</span><br><span class="line">            imp = meth-&gt;imp(false);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            imp = _objc_msgForward_impcache;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // Note, because we do not hold the runtime lock above</span><br><span class="line">        // isConstantOptimizedCache might flip, so we need to double check</span><br><span class="line">        if (!cls-&gt;cache.isConstantOptimizedCache(true /* strict */)) &#123;</span><br><span class="line">            cls-&gt;cache.insert(sel, imp, nil);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return imp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* class_getProperty</span><br><span class="line">* fixme</span><br><span class="line">* Locking: read-locks runtimeLock</span><br><span class="line">**********************************************************************/</span><br><span class="line">objc_property_t class_getProperty(Class cls, const char *name)</span><br><span class="line">&#123;</span><br><span class="line">    if (!cls  ||  !name) return nil;</span><br><span class="line"></span><br><span class="line">    mutex_locker_t lock(runtimeLock);</span><br><span class="line"></span><br><span class="line">    checkIsKnownClass(cls);</span><br><span class="line">    </span><br><span class="line">    ASSERT(cls-&gt;isRealized());</span><br><span class="line"></span><br><span class="line">    for ( ; cls; cls = cls-&gt;getSuperclass()) &#123;</span><br><span class="line">        for (auto&amp; prop : cls-&gt;data()-&gt;properties()) &#123;</span><br><span class="line">            if (0 == strcmp(name, prop.name)) &#123;</span><br><span class="line">                return (objc_property_t)&amp;prop;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    return nil;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* Locking: fixme</span><br><span class="line">**********************************************************************/</span><br><span class="line"></span><br><span class="line">Class gdb_class_getClass(Class cls)</span><br><span class="line">&#123;</span><br><span class="line">    const char *className = cls-&gt;mangledName();</span><br><span class="line">    if(!className || !strlen(className)) return Nil;</span><br><span class="line">    Class rCls = look_up_class(className, NO, NO);</span><br><span class="line">    return rCls;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Class gdb_object_getClass(id obj)</span><br><span class="line">&#123;</span><br><span class="line">    if (!obj) return nil;</span><br><span class="line">    return gdb_class_getClass(obj-&gt;getIsa());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* Locking: write-locks runtimeLock</span><br><span class="line">**********************************************************************/</span><br><span class="line">void </span><br><span class="line">objc_class::setInitialized()</span><br><span class="line">&#123;</span><br><span class="line">    Class metacls;</span><br><span class="line">    Class cls;</span><br><span class="line"></span><br><span class="line">    ASSERT(!isMetaClass());</span><br><span class="line"></span><br><span class="line">    cls = (Class)this;</span><br><span class="line">    metacls = cls-&gt;ISA();</span><br><span class="line"></span><br><span class="line">    mutex_locker_t lock(runtimeLock);</span><br><span class="line"></span><br><span class="line">    // Special cases:</span><br><span class="line">    // - NSObject AWZ  class methods are default.</span><br><span class="line">    // - NSObject RR   class and instance methods are default.</span><br><span class="line">    // - NSObject Core class and instance methods are default.</span><br><span class="line">    // adjustCustomFlagsForMethodChange() also knows these special cases.</span><br><span class="line">    // attachMethodLists() also knows these special cases.</span><br><span class="line"></span><br><span class="line">    objc::AWZScanner::scanInitializedClass(cls, metacls);</span><br><span class="line">    objc::RRScanner::scanInitializedClass(cls, metacls);</span><br><span class="line">    objc::CoreScanner::scanInitializedClass(cls, metacls);</span><br><span class="line"></span><br><span class="line">#if CONFIG_USE_PREOPT_CACHES</span><br><span class="line">    cls-&gt;cache.maybeConvertToPreoptimized();</span><br><span class="line">    metacls-&gt;cache.maybeConvertToPreoptimized();</span><br><span class="line">#endif</span><br><span class="line"></span><br><span class="line">    if (PrintInitializing) &#123;</span><br><span class="line">        _objc_inform(&quot;INITIALIZE: thread %p: setInitialized(%s)&quot;,</span><br><span class="line">                     objc_thread_self(), cls-&gt;nameForLogging());</span><br><span class="line">    &#125;</span><br><span class="line">    // Update the +initialize flags.</span><br><span class="line">    // Do this last.</span><br><span class="line">    metacls-&gt;changeInfo(RW_INITIALIZED, RW_INITIALIZING);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">void</span><br><span class="line">objc_class::printInstancesRequireRawIsa(bool inherited)</span><br><span class="line">&#123;</span><br><span class="line">    ASSERT(PrintRawIsa);</span><br><span class="line">    ASSERT(instancesRequireRawIsa());</span><br><span class="line">    _objc_inform(&quot;RAW ISA:  %s%s%s&quot;, nameForLogging(), </span><br><span class="line">                 isMetaClass() ? &quot; (meta)&quot; : &quot;&quot;, </span><br><span class="line">                 inherited ? &quot; (inherited)&quot; : &quot;&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* Mark this class and all of its subclasses as requiring raw isa pointers</span><br><span class="line">**********************************************************************/</span><br><span class="line">void objc_class::setInstancesRequireRawIsaRecursively(bool inherited)</span><br><span class="line">&#123;</span><br><span class="line">    Class cls = (Class)this;</span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line"></span><br><span class="line">    if (instancesRequireRawIsa()) return;</span><br><span class="line">    </span><br><span class="line">    foreach_realized_class_and_subclass(cls, [=](Class c)&#123;</span><br><span class="line">        if (c-&gt;instancesRequireRawIsa()) &#123;</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        c-&gt;setInstancesRequireRawIsa();</span><br><span class="line"></span><br><span class="line">        if (PrintRawIsa) c-&gt;printInstancesRequireRawIsa(inherited || c != cls);</span><br><span class="line">        return true;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#if CONFIG_USE_PREOPT_CACHES</span><br><span class="line">void objc_class::setDisallowPreoptCachesRecursively(const char *why)</span><br><span class="line">&#123;</span><br><span class="line">    Class cls = (Class)this;</span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line"></span><br><span class="line">    if (!allowsPreoptCaches()) return;</span><br><span class="line"></span><br><span class="line">    foreach_realized_class_and_subclass(cls, [=](Class c)&#123;</span><br><span class="line">        if (!c-&gt;allowsPreoptCaches()) &#123;</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if (c-&gt;cache.isConstantOptimizedCache(/* strict */true)) &#123;</span><br><span class="line">            c-&gt;cache.eraseNolock(why);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            if (PrintCaches) &#123;</span><br><span class="line">                  _objc_inform(&quot;CACHES: %sclass %s: disallow preopt cache (from %s)&quot;,</span><br><span class="line">                               isMetaClass() ? &quot;meta&quot; : &quot;&quot;,</span><br><span class="line">                               nameForLogging(), why);</span><br><span class="line">            &#125;</span><br><span class="line">            c-&gt;setDisallowPreoptCaches();</span><br><span class="line">        &#125;</span><br><span class="line">        return true;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void objc_class::setDisallowPreoptInlinedSelsRecursively(const char *why)</span><br><span class="line">&#123;</span><br><span class="line">    Class cls = (Class)this;</span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line"></span><br><span class="line">    if (!allowsPreoptInlinedSels()) return;</span><br><span class="line"></span><br><span class="line">    foreach_realized_class_and_subclass(cls, [=](Class c)&#123;</span><br><span class="line">        if (!c-&gt;allowsPreoptInlinedSels()) &#123;</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if (PrintCaches) &#123;</span><br><span class="line">              _objc_inform(&quot;CACHES: %sclass %s: disallow sel-inlined preopt cache (from %s)&quot;,</span><br><span class="line">                           isMetaClass() ? &quot;meta&quot; : &quot;&quot;,</span><br><span class="line">                           nameForLogging(), why);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        c-&gt;setDisallowPreoptInlinedSels();</span><br><span class="line">        if (c-&gt;cache.isConstantOptimizedCacheWithInlinedSels()) &#123;</span><br><span class="line">            c-&gt;cache.eraseNolock(why);</span><br><span class="line">        &#125;</span><br><span class="line">        return true;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line">#endif</span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* Choose a class index. </span><br><span class="line">* Set instancesRequireRawIsa if no more class indexes are available.</span><br><span class="line">**********************************************************************/</span><br><span class="line">void objc_class::chooseClassArrayIndex()</span><br><span class="line">&#123;</span><br><span class="line">#if SUPPORT_INDEXED_ISA</span><br><span class="line">    Class cls = (Class)this;</span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line"></span><br><span class="line">    if (objc_indexed_classes_count &gt;= ISA_INDEX_COUNT) &#123;</span><br><span class="line">        // No more indexes available.</span><br><span class="line">        ASSERT(cls-&gt;classArrayIndex() == 0);</span><br><span class="line">        cls-&gt;setInstancesRequireRawIsaRecursively(false/*not inherited*/);</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    unsigned index = objc_indexed_classes_count++;</span><br><span class="line">    if (index == 0) index = objc_indexed_classes_count++;  // index 0 is unused</span><br><span class="line">    classForIndex(index) = cls;</span><br><span class="line">    cls-&gt;setClassArrayIndex(index);</span><br><span class="line">#endif</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">static const char *empty_lazyClassNamer(Class cls __unused) &#123;</span><br><span class="line">    return nullptr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">static ChainedHookFunction&lt;objc_hook_lazyClassNamer&gt; LazyClassNamerHook&#123;empty_lazyClassNamer&#125;;</span><br><span class="line"></span><br><span class="line">void objc_setHook_lazyClassNamer(_Nonnull objc_hook_lazyClassNamer newValue,</span><br><span class="line">                                  _Nonnull objc_hook_lazyClassNamer * _Nonnull oldOutValue) &#123;</span><br><span class="line">    LazyClassNamerHook.set(newValue, oldOutValue);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">const char * objc_class::installMangledNameForLazilyNamedClass() &#123;</span><br><span class="line">    auto lazyClassNamer = LazyClassNamerHook.get();</span><br><span class="line">    if (!*lazyClassNamer) &#123;</span><br><span class="line">        _objc_fatal(&quot;Lazily named class %p with no lazy name handler registered&quot;, this);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // If this is called on a metaclass, extract the original class</span><br><span class="line">    // and make it do the installation instead. It will install</span><br><span class="line">    // the metaclass&#x27;s name too.</span><br><span class="line">    if (isMetaClass()) &#123;</span><br><span class="line">        Class nonMeta = bits.safe_ro()-&gt;getNonMetaclass();</span><br><span class="line">        return nonMeta-&gt;installMangledNameForLazilyNamedClass();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Class cls = (Class)this;</span><br><span class="line">    Class metaclass = ISA();</span><br><span class="line"></span><br><span class="line">    const char *name = lazyClassNamer((Class)this);</span><br><span class="line">    if (!name) &#123;</span><br><span class="line">        _objc_fatal(&quot;Lazily named class %p wasn&#x27;t named by lazy name handler&quot;, this);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Emplace the name into the class_ro_t. If we lose the race,</span><br><span class="line">    // then we&#x27;ll free our name and use whatever got placed there</span><br><span class="line">    // instead of our name.</span><br><span class="line">    const char *previously = NULL;</span><br><span class="line">    class_ro_t *ro = (class_ro_t *)cls-&gt;bits.safe_ro();</span><br><span class="line">    bool wonRace = ro-&gt;name.compare_exchange_strong(previously, name, std::memory_order_release, std::memory_order_acquire);</span><br><span class="line">    if (!wonRace) &#123;</span><br><span class="line">        free((void *)name);</span><br><span class="line">        name = previously;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Emplace whatever name won the race in the metaclass too.</span><br><span class="line">    class_ro_t *metaRO = (class_ro_t *)metaclass-&gt;bits.safe_ro();</span><br><span class="line"></span><br><span class="line">    // Write our pointer if the current value is NULL. There&#x27;s no</span><br><span class="line">    // need to loop or check success, since the only way this can</span><br><span class="line">    // fail is if another thread succeeded in writing the exact</span><br><span class="line">    // same pointer.</span><br><span class="line">    const char *expected = NULL;</span><br><span class="line">    metaRO-&gt;name.compare_exchange_strong(expected, name, std::memory_order_release, std::memory_order_acquire);</span><br><span class="line"></span><br><span class="line">    return name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* Update custom RR and AWZ when a method changes its IMP</span><br><span class="line">**********************************************************************/</span><br><span class="line">static void</span><br><span class="line">adjustCustomFlagsForMethodChange(Class cls, method_t *meth)</span><br><span class="line">&#123;</span><br><span class="line">    objc::AWZScanner::scanChangedMethod(cls, meth);</span><br><span class="line">    objc::RRScanner::scanChangedMethod(cls, meth);</span><br><span class="line">    objc::CoreScanner::scanChangedMethod(cls, meth);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* class_getIvarLayout</span><br><span class="line">* Called by the garbage collector. </span><br><span class="line">* The class must be nil or already realized. </span><br><span class="line">* Locking: none</span><br><span class="line">**********************************************************************/</span><br><span class="line">const uint8_t *</span><br><span class="line">class_getIvarLayout(Class cls)</span><br><span class="line">&#123;</span><br><span class="line">    if (cls) return cls-&gt;data()-&gt;ro()-&gt;getIvarLayout();</span><br><span class="line">    else return nil;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* class_getWeakIvarLayout</span><br><span class="line">* Called by the garbage collector. </span><br><span class="line">* The class must be nil or already realized. </span><br><span class="line">* Locking: none</span><br><span class="line">**********************************************************************/</span><br><span class="line">const uint8_t *</span><br><span class="line">class_getWeakIvarLayout(Class cls)</span><br><span class="line">&#123;</span><br><span class="line">    if (cls) return cls-&gt;data()-&gt;ro()-&gt;weakIvarLayout;</span><br><span class="line">    else return nil;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* class_setIvarLayout</span><br><span class="line">* Changes the class&#x27;s ivar layout.</span><br><span class="line">* nil layout means no unscanned ivars</span><br><span class="line">* The class must be under construction.</span><br><span class="line">* fixme: sanity-check layout vs instance size?</span><br><span class="line">* fixme: sanity-check layout vs superclass?</span><br><span class="line">* Locking: acquires runtimeLock</span><br><span class="line">**********************************************************************/</span><br><span class="line">void</span><br><span class="line">class_setIvarLayout(Class cls, const uint8_t *layout)</span><br><span class="line">&#123;</span><br><span class="line">    if (!cls) return;</span><br><span class="line"></span><br><span class="line">    ASSERT(!cls-&gt;isMetaClass());</span><br><span class="line"></span><br><span class="line">    mutex_locker_t lock(runtimeLock);</span><br><span class="line">    </span><br><span class="line">    checkIsKnownClass(cls);</span><br><span class="line"></span><br><span class="line">    // Can only change layout of in-construction classes.</span><br><span class="line">    // note: if modifications to post-construction classes were </span><br><span class="line">    //   allowed, there would be a race below (us vs. concurrent object_setIvar)</span><br><span class="line">    if (!(cls-&gt;data()-&gt;flags &amp; RW_CONSTRUCTING)) &#123;</span><br><span class="line">        _objc_inform(&quot;*** Can&#x27;t set ivar layout for already-registered &quot;</span><br><span class="line">                     &quot;class &#x27;%s&#x27;&quot;, cls-&gt;nameForLogging());</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    class_ro_t *ro_w = make_ro_writeable(cls-&gt;data());</span><br><span class="line"></span><br><span class="line">    try_free(ro_w-&gt;getIvarLayout());</span><br><span class="line">    ro_w-&gt;ivarLayout = ustrdupMaybeNil(layout);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* class_setWeakIvarLayout</span><br><span class="line">* Changes the class&#x27;s weak ivar layout.</span><br><span class="line">* nil layout means no weak ivars</span><br><span class="line">* The class must be under construction.</span><br><span class="line">* fixme: sanity-check layout vs instance size?</span><br><span class="line">* fixme: sanity-check layout vs superclass?</span><br><span class="line">* Locking: acquires runtimeLock</span><br><span class="line">**********************************************************************/</span><br><span class="line">void</span><br><span class="line">class_setWeakIvarLayout(Class cls, const uint8_t *layout)</span><br><span class="line">&#123;</span><br><span class="line">    if (!cls) return;</span><br><span class="line"></span><br><span class="line">    mutex_locker_t lock(runtimeLock);</span><br><span class="line">    </span><br><span class="line">    checkIsKnownClass(cls);</span><br><span class="line"></span><br><span class="line">    // Can only change layout of in-construction classes.</span><br><span class="line">    // note: if modifications to post-construction classes were </span><br><span class="line">    //   allowed, there would be a race below (us vs. concurrent object_setIvar)</span><br><span class="line">    if (!(cls-&gt;data()-&gt;flags &amp; RW_CONSTRUCTING)) &#123;</span><br><span class="line">        _objc_inform(&quot;*** Can&#x27;t set weak ivar layout for already-registered &quot;</span><br><span class="line">                     &quot;class &#x27;%s&#x27;&quot;, cls-&gt;nameForLogging());</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    class_ro_t *ro_w = make_ro_writeable(cls-&gt;data());</span><br><span class="line"></span><br><span class="line">    try_free(ro_w-&gt;weakIvarLayout);</span><br><span class="line">    ro_w-&gt;weakIvarLayout = ustrdupMaybeNil(layout);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* getIvar</span><br><span class="line">* Look up an ivar by name.</span><br><span class="line">* Locking: runtimeLock must be read- or write-locked by the caller.</span><br><span class="line">**********************************************************************/</span><br><span class="line">static ivar_t *getIvar(Class cls, const char *name)</span><br><span class="line">&#123;</span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line"></span><br><span class="line">    const ivar_list_t *ivars;</span><br><span class="line">    ASSERT(cls-&gt;isRealized());</span><br><span class="line">    if ((ivars = cls-&gt;data()-&gt;ro()-&gt;ivars)) &#123;</span><br><span class="line">        for (auto&amp; ivar : *ivars) &#123;</span><br><span class="line">            if (!ivar.offset) continue;  // anonymous bitfield</span><br><span class="line"></span><br><span class="line">            // ivar.name may be nil for anonymous bitfields etc.</span><br><span class="line">            if (ivar.name  &amp;&amp;  0 == strcmp(name, ivar.name)) &#123;</span><br><span class="line">                return &amp;ivar;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return nil;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* _class_getClassForIvar</span><br><span class="line">* Given a class and an ivar that is in it or one of its superclasses, </span><br><span class="line">* find the actual class that defined the ivar.</span><br><span class="line">**********************************************************************/</span><br><span class="line">Class _class_getClassForIvar(Class cls, Ivar ivar)</span><br><span class="line">&#123;</span><br><span class="line">    mutex_locker_t lock(runtimeLock);</span><br><span class="line"></span><br><span class="line">    for ( ; cls; cls = cls-&gt;getSuperclass()) &#123;</span><br><span class="line">        if (auto ivars = cls-&gt;data()-&gt;ro()-&gt;ivars) &#123;</span><br><span class="line">            if (ivars-&gt;containsIvar(ivar)) &#123;</span><br><span class="line">                return cls;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return nil;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* _class_getVariable</span><br><span class="line">* fixme</span><br><span class="line">* Locking: read-locks runtimeLock</span><br><span class="line">**********************************************************************/</span><br><span class="line">Ivar </span><br><span class="line">_class_getVariable(Class cls, const char *name)</span><br><span class="line">&#123;</span><br><span class="line">    mutex_locker_t lock(runtimeLock);</span><br><span class="line"></span><br><span class="line">    for ( ; cls; cls = cls-&gt;getSuperclass()) &#123;</span><br><span class="line">        ivar_t *ivar = getIvar(cls, name);</span><br><span class="line">        if (ivar) &#123;</span><br><span class="line">            return ivar;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return nil;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* class_conformsToProtocol</span><br><span class="line">* fixme</span><br><span class="line">* Locking: read-locks runtimeLock</span><br><span class="line">**********************************************************************/</span><br><span class="line">BOOL class_conformsToProtocol(Class cls, Protocol *proto_gen)</span><br><span class="line">&#123;</span><br><span class="line">    protocol_t *proto = newprotocol(proto_gen);</span><br><span class="line">    </span><br><span class="line">    if (!cls) return NO;</span><br><span class="line">    if (!proto_gen) return NO;</span><br><span class="line"></span><br><span class="line">    mutex_locker_t lock(runtimeLock);</span><br><span class="line"></span><br><span class="line">    checkIsKnownClass(cls);</span><br><span class="line">    </span><br><span class="line">    ASSERT(cls-&gt;isRealized());</span><br><span class="line">    </span><br><span class="line">    for (const auto&amp; proto_ref : cls-&gt;data()-&gt;protocols()) &#123;</span><br><span class="line">        protocol_t *p = remapProtocol(proto_ref);</span><br><span class="line">        if (p == proto || protocol_conformsToProtocol_nolock(p, proto)) &#123;</span><br><span class="line">            return YES;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return NO;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">static void</span><br><span class="line">addMethods_finish(Class cls, method_list_t *newlist)</span><br><span class="line">&#123;</span><br><span class="line">    auto rwe = cls-&gt;data()-&gt;extAllocIfNeeded();</span><br><span class="line"></span><br><span class="line">    if (newlist-&gt;count &gt; 1) &#123;</span><br><span class="line">        method_t::SortBySELAddress sorter;</span><br><span class="line">        std::stable_sort(&amp;newlist-&gt;begin()-&gt;big(), &amp;newlist-&gt;end()-&gt;big(), sorter);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    prepareMethodLists(cls, &amp;newlist, 1, NO, NO, __func__);</span><br><span class="line">    rwe-&gt;methods.attachLists(&amp;newlist, 1);</span><br><span class="line"></span><br><span class="line">    // If the class being modified has a constant cache,</span><br><span class="line">    // then all children classes are flattened constant caches</span><br><span class="line">    // and need to be flushed as well.</span><br><span class="line">    flushCaches(cls, __func__, [](Class c)&#123;</span><br><span class="line">        // constant caches have been dealt with in prepareMethodLists</span><br><span class="line">        // if the class still is constant here, it&#x27;s fine to keep</span><br><span class="line">        return !c-&gt;cache.isConstantOptimizedCache();</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/**********************************************************************</span><br><span class="line">* addMethod</span><br><span class="line">* fixme</span><br><span class="line">* Locking: runtimeLock must be held by the caller</span><br><span class="line">**********************************************************************/</span><br><span class="line">static IMP </span><br><span class="line">addMethod(Class cls, SEL name, IMP imp, const char *types, bool replace)</span><br><span class="line">&#123;</span><br><span class="line">    IMP result = nil;</span><br><span class="line"></span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line"></span><br><span class="line">    checkIsKnownClass(cls);</span><br><span class="line">    </span><br><span class="line">    ASSERT(types);</span><br><span class="line">    ASSERT(cls-&gt;isRealized());</span><br><span class="line"></span><br><span class="line">    method_t *m;</span><br><span class="line">    if ((m = getMethodNoSuper_nolock(cls, name))) &#123;</span><br><span class="line">        // already exists</span><br><span class="line">        if (!replace) &#123;</span><br><span class="line">            result = m-&gt;imp(false);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            result = _method_setImplementation(cls, m, imp);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        // fixme optimize</span><br><span class="line">        method_list_t *newlist;</span><br><span class="line">        newlist = (method_list_t *)calloc(method_list_t::byteSize(method_t::bigSize, 1), 1);</span><br><span class="line">        newlist-&gt;entsizeAndFlags = </span><br><span class="line">            (uint32_t)sizeof(struct method_t::big) | fixed_up_method_list;</span><br><span class="line">        newlist-&gt;count = 1;</span><br><span class="line">        auto &amp;first = newlist-&gt;begin()-&gt;big();</span><br><span class="line">        first.name = name;</span><br><span class="line">        first.types = strdupIfMutable(types);</span><br><span class="line">        first.imp = imp;</span><br><span class="line"></span><br><span class="line">        addMethods_finish(cls, newlist);</span><br><span class="line">        result = nil;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**********************************************************************</span><br><span class="line">* addMethods</span><br><span class="line">* Add the given methods to a class in bulk.</span><br><span class="line">* Returns the selectors which could not be added, when replace == NO and a</span><br><span class="line">* method already exists. The returned selectors are NULL terminated and must be</span><br><span class="line">* freed by the caller. They are NULL if no failures occurred.</span><br><span class="line">* Locking: runtimeLock must be held by the caller</span><br><span class="line">**********************************************************************/</span><br><span class="line">static SEL *</span><br><span class="line">addMethods(Class cls, const SEL *names, const IMP *imps, const char **types,</span><br><span class="line">           uint32_t count, bool replace, uint32_t *outFailedCount)</span><br><span class="line">&#123;</span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line">    </span><br><span class="line">    ASSERT(names);</span><br><span class="line">    ASSERT(imps);</span><br><span class="line">    ASSERT(types);</span><br><span class="line">    ASSERT(cls-&gt;isRealized());</span><br><span class="line">    </span><br><span class="line">    method_list_t *newlist;</span><br><span class="line">    size_t newlistSize = method_list_t::byteSize(sizeof(struct method_t::big), count);</span><br><span class="line">    newlist = (method_list_t *)calloc(newlistSize, 1);</span><br><span class="line">    newlist-&gt;entsizeAndFlags =</span><br><span class="line">        (uint32_t)sizeof(struct method_t::big) | fixed_up_method_list;</span><br><span class="line">    newlist-&gt;count = 0;</span><br><span class="line">    </span><br><span class="line">    SEL *failedNames = nil;</span><br><span class="line">    uint32_t failedCount = 0;</span><br><span class="line">    </span><br><span class="line">    for (uint32_t i = 0; i &lt; count; i++) &#123;</span><br><span class="line">        method_t *m;</span><br><span class="line">        if ((m = getMethodNoSuper_nolock(cls, names[i]))) &#123;</span><br><span class="line">            // already exists</span><br><span class="line">            if (!replace) &#123;</span><br><span class="line">                // report failure</span><br><span class="line">                if (failedNames == nil) &#123;</span><br><span class="line">                    // allocate an extra entry for a trailing NULL in case</span><br><span class="line">                    // every method fails</span><br><span class="line">                    failedNames = (SEL *)calloc(sizeof(*failedNames),</span><br><span class="line">                                                count + 1);</span><br><span class="line">                &#125;</span><br><span class="line">                failedNames[failedCount] = m-&gt;name();</span><br><span class="line">                failedCount++;</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                _method_setImplementation(cls, m, imps[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            auto &amp;newmethod = newlist-&gt;end()-&gt;big();</span><br><span class="line">            newmethod.name = names[i];</span><br><span class="line">            newmethod.types = strdupIfMutable(types[i]);</span><br><span class="line">            newmethod.imp = imps[i];</span><br><span class="line">            newlist-&gt;count++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    if (newlist-&gt;count &gt; 0) &#123;</span><br><span class="line">        // fixme resize newlist because it may have been over-allocated above.</span><br><span class="line">        // Note that realloc() alone doesn&#x27;t work due to ptrauth.</span><br><span class="line">        addMethods_finish(cls, newlist);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        // Attaching the method list to the class consumes it. If we don&#x27;t</span><br><span class="line">        // do that, we have to free the memory ourselves.</span><br><span class="line">        free(newlist);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    if (outFailedCount) *outFailedCount = failedCount;</span><br><span class="line">    </span><br><span class="line">    return failedNames;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">BOOL </span><br><span class="line">class_addMethod(Class cls, SEL name, IMP imp, const char *types)</span><br><span class="line">&#123;</span><br><span class="line">    if (!cls) return NO;</span><br><span class="line"></span><br><span class="line">    mutex_locker_t lock(runtimeLock);</span><br><span class="line">    return ! addMethod(cls, name, imp, types ?: &quot;&quot;, NO);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">IMP </span><br><span class="line">class_replaceMethod(Class cls, SEL name, IMP imp, const char *types)</span><br><span class="line">&#123;</span><br><span class="line">    if (!cls) return nil;</span><br><span class="line"></span><br><span class="line">    mutex_locker_t lock(runtimeLock);</span><br><span class="line">    return addMethod(cls, name, imp, types ?: &quot;&quot;, YES);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">SEL *</span><br><span class="line">class_addMethodsBulk(Class cls, const SEL *names, const IMP *imps,</span><br><span class="line">                     const char **types, uint32_t count,</span><br><span class="line">                     uint32_t *outFailedCount)</span><br><span class="line">&#123;</span><br><span class="line">    if (!cls) &#123;</span><br><span class="line">        if (outFailedCount) *outFailedCount = count;</span><br><span class="line">        return (SEL *)memdup(names, count * sizeof(*names));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    mutex_locker_t lock(runtimeLock);</span><br><span class="line">    return addMethods(cls, names, imps, types, count, NO, outFailedCount);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void</span><br><span class="line">class_replaceMethodsBulk(Class cls, const SEL *names, const IMP *imps,</span><br><span class="line">                         const char **types, uint32_t count)</span><br><span class="line">&#123;</span><br><span class="line">    if (!cls) return;</span><br><span class="line">    </span><br><span class="line">    mutex_locker_t lock(runtimeLock);</span><br><span class="line">    addMethods(cls, names, imps, types, count, YES, nil);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* class_addIvar</span><br><span class="line">* Adds an ivar to a class.</span><br><span class="line">* Locking: acquires runtimeLock</span><br><span class="line">**********************************************************************/</span><br><span class="line">BOOL </span><br><span class="line">class_addIvar(Class cls, const char *name, size_t size, </span><br><span class="line">              uint8_t alignment, const char *type)</span><br><span class="line">&#123;</span><br><span class="line">    if (!cls) return NO;</span><br><span class="line"></span><br><span class="line">    if (!type) type = &quot;&quot;;</span><br><span class="line">    if (name  &amp;&amp;  0 == strcmp(name, &quot;&quot;)) name = nil;</span><br><span class="line"></span><br><span class="line">    mutex_locker_t lock(runtimeLock);</span><br><span class="line"></span><br><span class="line">    checkIsKnownClass(cls);</span><br><span class="line">    ASSERT(cls-&gt;isRealized());</span><br><span class="line"></span><br><span class="line">    // No class variables</span><br><span class="line">    if (cls-&gt;isMetaClass()) &#123;</span><br><span class="line">        return NO;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Can only add ivars to in-construction classes.</span><br><span class="line">    if (!(cls-&gt;data()-&gt;flags &amp; RW_CONSTRUCTING)) &#123;</span><br><span class="line">        return NO;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Check for existing ivar with this name, unless it&#x27;s anonymous.</span><br><span class="line">    // Check for too-big ivar.</span><br><span class="line">    // fixme check for superclass ivar too?</span><br><span class="line">    if ((name  &amp;&amp;  getIvar(cls, name))  ||  size &gt; UINT32_MAX) &#123;</span><br><span class="line">        return NO;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    class_ro_t *ro_w = make_ro_writeable(cls-&gt;data());</span><br><span class="line"></span><br><span class="line">    // fixme allocate less memory here</span><br><span class="line">    </span><br><span class="line">    ivar_list_t *oldlist, *newlist;</span><br><span class="line">    if ((oldlist = (ivar_list_t *)cls-&gt;data()-&gt;ro()-&gt;ivars)) &#123;</span><br><span class="line">        size_t oldsize = oldlist-&gt;byteSize();</span><br><span class="line">        newlist = (ivar_list_t *)calloc(oldsize + oldlist-&gt;entsize(), 1);</span><br><span class="line">        memcpy(newlist, oldlist, oldsize);</span><br><span class="line">        free(oldlist);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        newlist = (ivar_list_t *)calloc(ivar_list_t::byteSize(sizeof(ivar_t), 1), 1);</span><br><span class="line">        newlist-&gt;entsizeAndFlags = (uint32_t)sizeof(ivar_t);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    uint32_t offset = cls-&gt;unalignedInstanceSize();</span><br><span class="line">    uint32_t alignMask = (1&lt;&lt;alignment)-1;</span><br><span class="line">    offset = (offset + alignMask) &amp; ~alignMask;</span><br><span class="line"></span><br><span class="line">    ivar_t&amp; ivar = newlist-&gt;get(newlist-&gt;count++);</span><br><span class="line">#if __x86_64__</span><br><span class="line">    // Deliberately over-allocate the ivar offset variable. </span><br><span class="line">    // Use calloc() to clear all 64 bits. See the note in struct ivar_t.</span><br><span class="line">    ivar.offset = (int32_t *)(int64_t *)calloc(sizeof(int64_t), 1);</span><br><span class="line">#else</span><br><span class="line">    ivar.offset = (int32_t *)malloc(sizeof(int32_t));</span><br><span class="line">#endif</span><br><span class="line">    *ivar.offset = offset;</span><br><span class="line">    ivar.name = name ? strdupIfMutable(name) : nil;</span><br><span class="line">    ivar.type = strdupIfMutable(type);</span><br><span class="line">    ivar.alignment_raw = alignment;</span><br><span class="line">    ivar.size = (uint32_t)size;</span><br><span class="line"></span><br><span class="line">    ro_w-&gt;ivars = newlist;</span><br><span class="line">    cls-&gt;setInstanceSize((uint32_t)(offset + size));</span><br><span class="line"></span><br><span class="line">    // Ivar layout updated in registerClass.</span><br><span class="line"></span><br><span class="line">    return YES;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* class_addProtocol</span><br><span class="line">* Adds a protocol to a class.</span><br><span class="line">* Locking: acquires runtimeLock</span><br><span class="line">**********************************************************************/</span><br><span class="line">BOOL class_addProtocol(Class cls, Protocol *protocol_gen)</span><br><span class="line">&#123;</span><br><span class="line">    protocol_t *protocol = newprotocol(protocol_gen);</span><br><span class="line"></span><br><span class="line">    if (!cls) return NO;</span><br><span class="line">    if (class_conformsToProtocol(cls, protocol_gen)) return NO;</span><br><span class="line"></span><br><span class="line">    mutex_locker_t lock(runtimeLock);</span><br><span class="line">    auto rwe = cls-&gt;data()-&gt;extAllocIfNeeded();</span><br><span class="line"></span><br><span class="line">    ASSERT(cls-&gt;isRealized());</span><br><span class="line">    </span><br><span class="line">    // fixme optimize</span><br><span class="line">    protocol_list_t *protolist = (protocol_list_t *)</span><br><span class="line">        malloc(sizeof(protocol_list_t) + sizeof(protocol_t *));</span><br><span class="line">    protolist-&gt;count = 1;</span><br><span class="line">    protolist-&gt;list[0] = (protocol_ref_t)protocol;</span><br><span class="line"></span><br><span class="line">    rwe-&gt;protocols.attachLists(&amp;protolist, 1);</span><br><span class="line"></span><br><span class="line">    // fixme metaclass?</span><br><span class="line"></span><br><span class="line">    return YES;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* class_addProperty</span><br><span class="line">* Adds a property to a class.</span><br><span class="line">* Locking: acquires runtimeLock</span><br><span class="line">**********************************************************************/</span><br><span class="line">static bool </span><br><span class="line">_class_addProperty(Class cls, const char *name, </span><br><span class="line">                   const objc_property_attribute_t *attrs, unsigned int count, </span><br><span class="line">                   bool replace)</span><br><span class="line">&#123;</span><br><span class="line">    if (!cls) return NO;</span><br><span class="line">    if (!name) return NO;</span><br><span class="line"></span><br><span class="line">    property_t *prop = class_getProperty(cls, name);</span><br><span class="line">    if (prop  &amp;&amp;  !replace) &#123;</span><br><span class="line">        // already exists, refuse to replace</span><br><span class="line">        return NO;</span><br><span class="line">    &#125; </span><br><span class="line">    else if (prop) &#123;</span><br><span class="line">        // replace existing</span><br><span class="line">        mutex_locker_t lock(runtimeLock);</span><br><span class="line">        try_free(prop-&gt;attributes);</span><br><span class="line">        prop-&gt;attributes = copyPropertyAttributeString(attrs, count);</span><br><span class="line">        return YES;</span><br><span class="line">    &#125;</span><br><span class="line">    else &#123;</span><br><span class="line">        mutex_locker_t lock(runtimeLock);</span><br><span class="line">        auto rwe = cls-&gt;data()-&gt;extAllocIfNeeded();</span><br><span class="line">        </span><br><span class="line">        ASSERT(cls-&gt;isRealized());</span><br><span class="line">        </span><br><span class="line">        property_list_t *proplist = (property_list_t *)</span><br><span class="line">            malloc(property_list_t::byteSize(sizeof(property_t), 1));</span><br><span class="line">        proplist-&gt;count = 1;</span><br><span class="line">        proplist-&gt;entsizeAndFlags = sizeof(property_t);</span><br><span class="line">        proplist-&gt;begin()-&gt;name = strdupIfMutable(name);</span><br><span class="line">        proplist-&gt;begin()-&gt;attributes = copyPropertyAttributeString(attrs, count);</span><br><span class="line">        </span><br><span class="line">        rwe-&gt;properties.attachLists(&amp;proplist, 1);</span><br><span class="line">        </span><br><span class="line">        return YES;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">BOOL </span><br><span class="line">class_addProperty(Class cls, const char *name, </span><br><span class="line">                  const objc_property_attribute_t *attrs, unsigned int n)</span><br><span class="line">&#123;</span><br><span class="line">    return _class_addProperty(cls, name, attrs, n, NO);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void </span><br><span class="line">class_replaceProperty(Class cls, const char *name, </span><br><span class="line">                      const objc_property_attribute_t *attrs, unsigned int n)</span><br><span class="line">&#123;</span><br><span class="line">    _class_addProperty(cls, name, attrs, n, YES);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* look_up_class</span><br><span class="line">* Look up a class by name, and realize it.</span><br><span class="line">* Locking: acquires runtimeLock</span><br><span class="line">**********************************************************************/</span><br><span class="line">static BOOL empty_getClass(const char *name, Class *outClass)</span><br><span class="line">&#123;</span><br><span class="line">    *outClass = nil;</span><br><span class="line">    return NO;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">static ChainedHookFunction&lt;objc_hook_getClass&gt; GetClassHook&#123;empty_getClass&#125;;</span><br><span class="line"></span><br><span class="line">void objc_setHook_getClass(objc_hook_getClass newValue,</span><br><span class="line">                           objc_hook_getClass *outOldValue)</span><br><span class="line">&#123;</span><br><span class="line">    GetClassHook.set(newValue, outOldValue);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Class </span><br><span class="line">look_up_class(const char *name, </span><br><span class="line">              bool includeUnconnected __attribute__((unused)), </span><br><span class="line">              bool includeClassHandler __attribute__((unused)))</span><br><span class="line">&#123;</span><br><span class="line">    if (!name) return nil;</span><br><span class="line"></span><br><span class="line">    Class result;</span><br><span class="line">    bool unrealized;</span><br><span class="line">    &#123;</span><br><span class="line">        runtimeLock.lock();</span><br><span class="line">        result = getClassExceptSomeSwift(name);</span><br><span class="line">        unrealized = result  &amp;&amp;  !result-&gt;isRealized();</span><br><span class="line">        if (unrealized) &#123;</span><br><span class="line">            result = realizeClassMaybeSwiftAndUnlock(result, runtimeLock);</span><br><span class="line">            // runtimeLock is now unlocked</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            runtimeLock.unlock();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (!result) &#123;</span><br><span class="line">        // Ask Swift about its un-instantiated classes.</span><br><span class="line"></span><br><span class="line">        // We use thread-local storage to prevent infinite recursion</span><br><span class="line">        // if the hook function provokes another lookup of the same name</span><br><span class="line">        // (for example, if the hook calls objc_allocateClassPair)</span><br><span class="line"></span><br><span class="line">        auto *tls = _objc_fetch_pthread_data(true);</span><br><span class="line"></span><br><span class="line">        // Stop if this thread is already looking up this name.</span><br><span class="line">        for (unsigned i = 0; i &lt; tls-&gt;classNameLookupsUsed; i++) &#123;</span><br><span class="line">            if (0 == strcmp(name, tls-&gt;classNameLookups[i])) &#123;</span><br><span class="line">                return nil;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // Save this lookup in tls.</span><br><span class="line">        if (tls-&gt;classNameLookupsUsed == tls-&gt;classNameLookupsAllocated) &#123;</span><br><span class="line">            tls-&gt;classNameLookupsAllocated =</span><br><span class="line">                (tls-&gt;classNameLookupsAllocated * 2 ?: 1);</span><br><span class="line">            size_t size = tls-&gt;classNameLookupsAllocated *</span><br><span class="line">                sizeof(tls-&gt;classNameLookups[0]);</span><br><span class="line">            tls-&gt;classNameLookups = (const char **)</span><br><span class="line">                realloc(tls-&gt;classNameLookups, size);</span><br><span class="line">        &#125;</span><br><span class="line">        tls-&gt;classNameLookups[tls-&gt;classNameLookupsUsed++] = name;</span><br><span class="line"></span><br><span class="line">        // Call the hook.</span><br><span class="line">        Class swiftcls = nil;</span><br><span class="line">        if (GetClassHook.get()(name, &amp;swiftcls)) &#123;</span><br><span class="line">            ASSERT(swiftcls-&gt;isRealized());</span><br><span class="line">            result = swiftcls;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // Erase the name from tls.</span><br><span class="line">        unsigned slot = --tls-&gt;classNameLookupsUsed;</span><br><span class="line">        ASSERT(slot &gt;= 0  &amp;&amp;  slot &lt; tls-&gt;classNameLookupsAllocated);</span><br><span class="line">        ASSERT(name == tls-&gt;classNameLookups[slot]);</span><br><span class="line">        tls-&gt;classNameLookups[slot] = nil;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* objc_duplicateClass</span><br><span class="line">* fixme</span><br><span class="line">* Locking: acquires runtimeLock</span><br><span class="line">**********************************************************************/</span><br><span class="line">Class </span><br><span class="line">objc_duplicateClass(Class original, const char *name, </span><br><span class="line">                    size_t extraBytes)</span><br><span class="line">&#123;</span><br><span class="line">    Class duplicate;</span><br><span class="line"></span><br><span class="line">    mutex_locker_t lock(runtimeLock);</span><br><span class="line"></span><br><span class="line">    checkIsKnownClass(original);</span><br><span class="line"></span><br><span class="line">    auto orig_rw  = original-&gt;data();</span><br><span class="line">    auto orig_rwe = orig_rw-&gt;ext();</span><br><span class="line">    auto orig_ro  = orig_rw-&gt;ro();</span><br><span class="line"></span><br><span class="line">    ASSERT(original-&gt;isRealized());</span><br><span class="line">    ASSERT(!original-&gt;isMetaClass());</span><br><span class="line"></span><br><span class="line">    duplicate = alloc_class_for_subclass(original, extraBytes);</span><br><span class="line"></span><br><span class="line">    duplicate-&gt;initClassIsa(original-&gt;ISA());</span><br><span class="line">    duplicate-&gt;setSuperclass(original-&gt;getSuperclass());</span><br><span class="line"></span><br><span class="line">    duplicate-&gt;cache.initializeToEmpty();</span><br><span class="line"></span><br><span class="line">    class_rw_t *rw = objc::zalloc&lt;class_rw_t&gt;();</span><br><span class="line">    rw-&gt;flags = (orig_rw-&gt;flags | RW_COPIED_RO | RW_REALIZING);</span><br><span class="line">    rw-&gt;firstSubclass = nil;</span><br><span class="line">    rw-&gt;nextSiblingClass = nil;</span><br><span class="line"></span><br><span class="line">    duplicate-&gt;bits = original-&gt;bits;</span><br><span class="line">    duplicate-&gt;setData(rw);</span><br><span class="line"></span><br><span class="line">    auto ro = orig_ro-&gt;duplicate();</span><br><span class="line">    *(char **)&amp;ro-&gt;name = strdupIfMutable(name);</span><br><span class="line">    rw-&gt;set_ro(ro);</span><br><span class="line"></span><br><span class="line">    if (orig_rwe) &#123;</span><br><span class="line">        auto rwe = rw-&gt;extAllocIfNeeded();</span><br><span class="line">        rwe-&gt;version = orig_rwe-&gt;version;</span><br><span class="line">        orig_rwe-&gt;methods.duplicateInto(rwe-&gt;methods);</span><br><span class="line"></span><br><span class="line">        // fixme dies when categories are added to the base</span><br><span class="line">        rwe-&gt;properties = orig_rwe-&gt;properties;</span><br><span class="line">        rwe-&gt;protocols = orig_rwe-&gt;protocols;</span><br><span class="line">    &#125; else if (ro-&gt;baseMethods()) &#123;</span><br><span class="line">        // if we have base methods, we need to make a deep copy</span><br><span class="line">        // which requires a class_rw_ext_t to be allocated</span><br><span class="line">        rw-&gt;deepCopy(ro);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    duplicate-&gt;chooseClassArrayIndex();</span><br><span class="line"></span><br><span class="line">    if (duplicate-&gt;getSuperclass()) &#123;</span><br><span class="line">        addSubclass(duplicate-&gt;getSuperclass(), duplicate);</span><br><span class="line">        // duplicate-&gt;isa == original-&gt;isa so don&#x27;t addSubclass() for it</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        addRootClass(duplicate);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Don&#x27;t methodize class - construction above is correct</span><br><span class="line"></span><br><span class="line">    addNamedClass(duplicate, ro-&gt;getName());</span><br><span class="line">    addClassTableEntry(duplicate, /*addMeta=*/false);</span><br><span class="line">    </span><br><span class="line">    if (PrintConnecting) &#123;</span><br><span class="line">        _objc_inform(&quot;CLASS: realizing class &#x27;%s&#x27; (duplicate of %s) %p %p&quot;, </span><br><span class="line">                     name, original-&gt;nameForLogging(), (void*)duplicate, ro);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    duplicate-&gt;clearInfo(RW_REALIZING);</span><br><span class="line"></span><br><span class="line">    return duplicate;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* objc_initializeClassPair</span><br><span class="line">* Locking: runtimeLock must be write-locked by the caller</span><br><span class="line">**********************************************************************/</span><br><span class="line"></span><br><span class="line">// &amp;UnsetLayout is the default ivar layout during class construction</span><br><span class="line">static const uint8_t UnsetLayout = 0;</span><br><span class="line"></span><br><span class="line">static void objc_initializeClassPair_internal(Class superclass, const char *name, Class cls, Class meta)</span><br><span class="line">&#123;</span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line"></span><br><span class="line">    class_ro_t *cls_ro_w, *meta_ro_w;</span><br><span class="line">    class_rw_t *cls_rw_w, *meta_rw_w;</span><br><span class="line">    </span><br><span class="line">    cls_rw_w   = objc::zalloc&lt;class_rw_t&gt;();</span><br><span class="line">    meta_rw_w  = objc::zalloc&lt;class_rw_t&gt;();</span><br><span class="line">    cls_ro_w   = (class_ro_t *)calloc(sizeof(class_ro_t), 1);</span><br><span class="line">    meta_ro_w  = (class_ro_t *)calloc(sizeof(class_ro_t), 1);</span><br><span class="line"></span><br><span class="line">    cls-&gt;setData(cls_rw_w);</span><br><span class="line">    cls_rw_w-&gt;set_ro(cls_ro_w);</span><br><span class="line">    meta-&gt;setData(meta_rw_w);</span><br><span class="line">    meta_rw_w-&gt;set_ro(meta_ro_w);</span><br><span class="line"></span><br><span class="line">    // Set basic info</span><br><span class="line"></span><br><span class="line">    cls_rw_w-&gt;flags = RW_CONSTRUCTING | RW_COPIED_RO | RW_REALIZED | RW_REALIZING;</span><br><span class="line">    meta_rw_w-&gt;flags = RW_CONSTRUCTING | RW_COPIED_RO | RW_REALIZED | RW_REALIZING | RW_META;</span><br><span class="line"></span><br><span class="line">    cls_ro_w-&gt;flags = 0;</span><br><span class="line">    meta_ro_w-&gt;flags = RO_META;</span><br><span class="line">    if (superclass) &#123;</span><br><span class="line">        uint32_t flagsToCopy = RW_FORBIDS_ASSOCIATED_OBJECTS;</span><br><span class="line">        cls_rw_w-&gt;flags |= superclass-&gt;data()-&gt;flags &amp; flagsToCopy;</span><br><span class="line">        cls_ro_w-&gt;instanceStart = superclass-&gt;unalignedInstanceSize();</span><br><span class="line">        meta_ro_w-&gt;instanceStart = superclass-&gt;ISA()-&gt;unalignedInstanceSize();</span><br><span class="line">        cls-&gt;setInstanceSize(cls_ro_w-&gt;instanceStart);</span><br><span class="line">        meta-&gt;setInstanceSize(meta_ro_w-&gt;instanceStart);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        cls_ro_w-&gt;flags |= RO_ROOT;</span><br><span class="line">        meta_ro_w-&gt;flags |= RO_ROOT;</span><br><span class="line">        cls_ro_w-&gt;instanceStart = 0;</span><br><span class="line">        meta_ro_w-&gt;instanceStart = (uint32_t)sizeof(objc_class);</span><br><span class="line">        cls-&gt;setInstanceSize((uint32_t)sizeof(id));  // just an isa</span><br><span class="line">        meta-&gt;setInstanceSize(meta_ro_w-&gt;instanceStart);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cls_ro_w-&gt;name.store(strdupIfMutable(name), std::memory_order_release);</span><br><span class="line">    meta_ro_w-&gt;name.store(strdupIfMutable(name), std::memory_order_release);</span><br><span class="line"></span><br><span class="line">    cls_ro_w-&gt;ivarLayout = &amp;UnsetLayout;</span><br><span class="line">    cls_ro_w-&gt;weakIvarLayout = &amp;UnsetLayout;</span><br><span class="line"></span><br><span class="line">    meta-&gt;chooseClassArrayIndex();</span><br><span class="line">    cls-&gt;chooseClassArrayIndex();</span><br><span class="line"></span><br><span class="line">    // This absolutely needs to be done before addSubclass</span><br><span class="line">    // as initializeToEmpty() clobbers the FAST_CACHE bits</span><br><span class="line">    cls-&gt;cache.initializeToEmpty();</span><br><span class="line">    meta-&gt;cache.initializeToEmpty();</span><br><span class="line"></span><br><span class="line">#if FAST_CACHE_META</span><br><span class="line">    meta-&gt;cache.setBit(FAST_CACHE_META);</span><br><span class="line">#endif</span><br><span class="line">    meta-&gt;setInstancesRequireRawIsa();</span><br><span class="line"></span><br><span class="line">    // Connect to superclasses and metaclasses</span><br><span class="line">    cls-&gt;initClassIsa(meta);</span><br><span class="line"></span><br><span class="line">    if (superclass) &#123;</span><br><span class="line">        meta-&gt;initClassIsa(superclass-&gt;ISA()-&gt;ISA());</span><br><span class="line">        cls-&gt;setSuperclass(superclass);</span><br><span class="line">        meta-&gt;setSuperclass(superclass-&gt;ISA());</span><br><span class="line">        addSubclass(superclass, cls);</span><br><span class="line">        addSubclass(superclass-&gt;ISA(), meta);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        meta-&gt;initClassIsa(meta);</span><br><span class="line">        cls-&gt;setSuperclass(Nil);</span><br><span class="line">        meta-&gt;setSuperclass(cls);</span><br><span class="line">        addRootClass(cls);</span><br><span class="line">        addSubclass(cls, meta);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    addClassTableEntry(cls);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* verifySuperclass</span><br><span class="line">* Sanity-check the superclass provided to </span><br><span class="line">* objc_allocateClassPair, objc_initializeClassPair, or objc_readClassPair.</span><br><span class="line">**********************************************************************/</span><br><span class="line">bool</span><br><span class="line">verifySuperclass(Class superclass, bool rootOK)</span><br><span class="line">&#123;</span><br><span class="line">    if (!superclass) &#123;</span><br><span class="line">        // Superclass does not exist.</span><br><span class="line">        // If subclass may be a root class, this is OK.</span><br><span class="line">        // If subclass must not be a root class, this is bad.</span><br><span class="line">        return rootOK;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Superclass must be realized.</span><br><span class="line">    if (! superclass-&gt;isRealized()) return false;</span><br><span class="line"></span><br><span class="line">    // Superclass must not be under construction.</span><br><span class="line">    if (superclass-&gt;data()-&gt;flags &amp; RW_CONSTRUCTING) return false;</span><br><span class="line"></span><br><span class="line">    return true;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* objc_initializeClassPair</span><br><span class="line">**********************************************************************/</span><br><span class="line">Class objc_initializeClassPair(Class superclass, const char *name, Class cls, Class meta)</span><br><span class="line">&#123;</span><br><span class="line">    // Fail if the class name is in use.</span><br><span class="line">    if (look_up_class(name, NO, NO)) return nil;</span><br><span class="line"></span><br><span class="line">    mutex_locker_t lock(runtimeLock);</span><br><span class="line"></span><br><span class="line">    // Fail if the class name is in use.</span><br><span class="line">    // Fail if the superclass isn&#x27;t kosher.</span><br><span class="line">    if (getClassExceptSomeSwift(name)  ||</span><br><span class="line">        !verifySuperclass(superclass, true/*rootOK*/))</span><br><span class="line">    &#123;</span><br><span class="line">        return nil;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    objc_initializeClassPair_internal(superclass, name, cls, meta);</span><br><span class="line"></span><br><span class="line">    return cls;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* objc_allocateClassPair</span><br><span class="line">* fixme</span><br><span class="line">* Locking: acquires runtimeLock</span><br><span class="line">**********************************************************************/</span><br><span class="line">Class objc_allocateClassPair(Class superclass, const char *name, </span><br><span class="line">                             size_t extraBytes)</span><br><span class="line">&#123;</span><br><span class="line">    Class cls, meta;</span><br><span class="line"></span><br><span class="line">    // Fail if the class name is in use.</span><br><span class="line">    if (look_up_class(name, NO, NO)) return nil;</span><br><span class="line"></span><br><span class="line">    mutex_locker_t lock(runtimeLock);</span><br><span class="line"></span><br><span class="line">    // Fail if the class name is in use.</span><br><span class="line">    // Fail if the superclass isn&#x27;t kosher.</span><br><span class="line">    if (getClassExceptSomeSwift(name)  ||</span><br><span class="line">        !verifySuperclass(superclass, true/*rootOK*/))</span><br><span class="line">    &#123;</span><br><span class="line">        return nil;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Allocate new classes.</span><br><span class="line">    cls  = alloc_class_for_subclass(superclass, extraBytes);</span><br><span class="line">    meta = alloc_class_for_subclass(superclass, extraBytes);</span><br><span class="line"></span><br><span class="line">    // fixme mangle the name if it looks swift-y?</span><br><span class="line">    objc_initializeClassPair_internal(superclass, name, cls, meta);</span><br><span class="line"></span><br><span class="line">    return cls;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* objc_registerClassPair</span><br><span class="line">* fixme</span><br><span class="line">* Locking: acquires runtimeLock</span><br><span class="line">**********************************************************************/</span><br><span class="line">void objc_registerClassPair(Class cls)</span><br><span class="line">&#123;</span><br><span class="line">    mutex_locker_t lock(runtimeLock);</span><br><span class="line"></span><br><span class="line">    checkIsKnownClass(cls);</span><br><span class="line"></span><br><span class="line">    if ((cls-&gt;data()-&gt;flags &amp; RW_CONSTRUCTED)  ||</span><br><span class="line">        (cls-&gt;ISA()-&gt;data()-&gt;flags &amp; RW_CONSTRUCTED)) </span><br><span class="line">    &#123;</span><br><span class="line">        _objc_inform(&quot;objc_registerClassPair: class &#x27;%s&#x27; was already &quot;</span><br><span class="line">                     &quot;registered!&quot;, cls-&gt;data()-&gt;ro()-&gt;getName());</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (!(cls-&gt;data()-&gt;flags &amp; RW_CONSTRUCTING)  ||  </span><br><span class="line">        !(cls-&gt;ISA()-&gt;data()-&gt;flags &amp; RW_CONSTRUCTING))</span><br><span class="line">    &#123;</span><br><span class="line">        _objc_inform(&quot;objc_registerClassPair: class &#x27;%s&#x27; was not &quot;</span><br><span class="line">                     &quot;allocated with objc_allocateClassPair!&quot;, </span><br><span class="line">                     cls-&gt;data()-&gt;ro()-&gt;getName());</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Clear &quot;under construction&quot; bit, set &quot;done constructing&quot; bit</span><br><span class="line">    cls-&gt;ISA()-&gt;changeInfo(RW_CONSTRUCTED, RW_CONSTRUCTING | RW_REALIZING);</span><br><span class="line">    cls-&gt;changeInfo(RW_CONSTRUCTED, RW_CONSTRUCTING | RW_REALIZING);</span><br><span class="line"></span><br><span class="line">    // Add to named class table.</span><br><span class="line">    addNamedClass(cls, cls-&gt;data()-&gt;ro()-&gt;getName());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* objc_readClassPair()</span><br><span class="line">* Read a class and metaclass as written by a compiler.</span><br><span class="line">* Assumes the class and metaclass are not referenced by other things </span><br><span class="line">* that might need to be fixed up (such as categories and subclasses).</span><br><span class="line">* Does not call +load.</span><br><span class="line">* Returns the class pointer, or nil.</span><br><span class="line">*</span><br><span class="line">* Locking: runtimeLock acquired by map_images</span><br><span class="line">**********************************************************************/</span><br><span class="line">Class objc_readClassPair(Class bits, const struct objc_image_info *info)</span><br><span class="line">&#123;</span><br><span class="line">    mutex_locker_t lock(runtimeLock);</span><br><span class="line"></span><br><span class="line">    // No info bits are significant yet.</span><br><span class="line">    (void)info;</span><br><span class="line"></span><br><span class="line">    // Fail if the superclass isn&#x27;t kosher.</span><br><span class="line">    bool rootOK = bits-&gt;data()-&gt;flags &amp; RO_ROOT;</span><br><span class="line">    if (!verifySuperclass(bits-&gt;getSuperclass(), rootOK))&#123;</span><br><span class="line">        return nil;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Duplicate classes are allowed, just like they are for image loading.</span><br><span class="line">    // readClass will complain about the duplicate.</span><br><span class="line"></span><br><span class="line">    Class cls = readClass(bits, false/*bundle*/, false/*shared cache*/);</span><br><span class="line">    if (cls != bits) &#123;</span><br><span class="line">        // This function isn&#x27;t allowed to remap anything.</span><br><span class="line">        _objc_fatal(&quot;objc_readClassPair for class %s changed %p to %p&quot;, </span><br><span class="line">                    cls-&gt;nameForLogging(), bits, cls);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // The only client of this function is old Swift.</span><br><span class="line">    // Stable Swift won&#x27;t use it.</span><br><span class="line">    // fixme once Swift in the OS settles we can assert(!cls-&gt;isSwiftStable()).</span><br><span class="line">    cls = realizeClassWithoutSwift(cls, nil);</span><br><span class="line"></span><br><span class="line">    return cls;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* detach_class</span><br><span class="line">* Disconnect a class from other data structures.</span><br><span class="line">* Exception: does not remove the class from the +load list</span><br><span class="line">* Call this before free_class.</span><br><span class="line">* Locking: runtimeLock must be held by the caller.</span><br><span class="line">**********************************************************************/</span><br><span class="line">static void detach_class(Class cls, bool isMeta)</span><br><span class="line">&#123;</span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line"></span><br><span class="line">    // categories not yet attached to this class</span><br><span class="line">    objc::unattachedCategories.eraseClass(cls);</span><br><span class="line"></span><br><span class="line">    // superclass&#x27;s subclass list</span><br><span class="line">    if (cls-&gt;isRealized()) &#123;</span><br><span class="line">        Class supercls = cls-&gt;getSuperclass();</span><br><span class="line">        if (supercls) &#123;</span><br><span class="line">            removeSubclass(supercls, cls);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            removeRootClass(cls);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // class tables and +load queue</span><br><span class="line">    if (!isMeta) &#123;</span><br><span class="line">        removeNamedClass(cls, cls-&gt;mangledName());</span><br><span class="line">    &#125;</span><br><span class="line">    objc::allocatedClasses.get().erase(cls);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* free_class</span><br><span class="line">* Frees a class&#x27;s data structures.</span><br><span class="line">* Call this after detach_class.</span><br><span class="line">* Locking: runtimeLock must be held by the caller</span><br><span class="line">**********************************************************************/</span><br><span class="line">static void free_class(Class cls)</span><br><span class="line">&#123;</span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line"></span><br><span class="line">    if (! cls-&gt;isRealized()) return;</span><br><span class="line"></span><br><span class="line">    auto rw = cls-&gt;data();</span><br><span class="line">    auto rwe = rw-&gt;ext();</span><br><span class="line">    auto ro = rw-&gt;ro();</span><br><span class="line"></span><br><span class="line">    cls-&gt;cache.destroy();</span><br><span class="line"></span><br><span class="line">    if (rwe) &#123;</span><br><span class="line">        for (auto&amp; meth : rwe-&gt;methods) &#123;</span><br><span class="line">            try_free(meth.types());</span><br><span class="line">        &#125;</span><br><span class="line">        rwe-&gt;methods.tryFree();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    const ivar_list_t *ivars = ro-&gt;ivars;</span><br><span class="line">    if (ivars) &#123;</span><br><span class="line">        for (auto&amp; ivar : *ivars) &#123;</span><br><span class="line">            try_free(ivar.offset);</span><br><span class="line">            try_free(ivar.name);</span><br><span class="line">            try_free(ivar.type);</span><br><span class="line">        &#125;</span><br><span class="line">        try_free(ivars);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (rwe) &#123;</span><br><span class="line">        for (auto&amp; prop : rwe-&gt;properties) &#123;</span><br><span class="line">            try_free(prop.name);</span><br><span class="line">            try_free(prop.attributes);</span><br><span class="line">        &#125;</span><br><span class="line">        rwe-&gt;properties.tryFree();</span><br><span class="line"></span><br><span class="line">        rwe-&gt;protocols.tryFree();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    try_free(ro-&gt;getIvarLayout());</span><br><span class="line">    try_free(ro-&gt;weakIvarLayout);</span><br><span class="line">    try_free(ro-&gt;getName());</span><br><span class="line">    try_free(ro);</span><br><span class="line">    objc::zfree(rwe);</span><br><span class="line">    objc::zfree(rw);</span><br><span class="line">    try_free(cls);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">void objc_disposeClassPair(Class cls)</span><br><span class="line">&#123;</span><br><span class="line">    mutex_locker_t lock(runtimeLock);</span><br><span class="line"></span><br><span class="line">    checkIsKnownClass(cls);</span><br><span class="line"></span><br><span class="line">    if (!(cls-&gt;data()-&gt;flags &amp; (RW_CONSTRUCTED|RW_CONSTRUCTING))  ||</span><br><span class="line">        !(cls-&gt;ISA()-&gt;data()-&gt;flags &amp; (RW_CONSTRUCTED|RW_CONSTRUCTING))) </span><br><span class="line">    &#123;</span><br><span class="line">        // class not allocated with objc_allocateClassPair</span><br><span class="line">        // disposing still-unregistered class is OK!</span><br><span class="line">        _objc_inform(&quot;objc_disposeClassPair: class &#x27;%s&#x27; was not &quot;</span><br><span class="line">                     &quot;allocated with objc_allocateClassPair!&quot;, </span><br><span class="line">                     cls-&gt;data()-&gt;ro()-&gt;getName());</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (cls-&gt;isMetaClass()) &#123;</span><br><span class="line">        _objc_inform(&quot;objc_disposeClassPair: class &#x27;%s&#x27; is a metaclass, &quot;</span><br><span class="line">                     &quot;not a class!&quot;, cls-&gt;data()-&gt;ro()-&gt;getName());</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Shouldn&#x27;t have any live subclasses.</span><br><span class="line">    if (cls-&gt;data()-&gt;firstSubclass) &#123;</span><br><span class="line">        _objc_inform(&quot;objc_disposeClassPair: class &#x27;%s&#x27; still has subclasses, &quot;</span><br><span class="line">                     &quot;including &#x27;%s&#x27;!&quot;, cls-&gt;data()-&gt;ro()-&gt;getName(),</span><br><span class="line">                     cls-&gt;data()-&gt;firstSubclass-&gt;nameForLogging());</span><br><span class="line">    &#125;</span><br><span class="line">    if (cls-&gt;ISA()-&gt;data()-&gt;firstSubclass) &#123;</span><br><span class="line">        _objc_inform(&quot;objc_disposeClassPair: class &#x27;%s&#x27; still has subclasses, &quot;</span><br><span class="line">                     &quot;including &#x27;%s&#x27;!&quot;, cls-&gt;data()-&gt;ro()-&gt;getName(),</span><br><span class="line">                     cls-&gt;ISA()-&gt;data()-&gt;firstSubclass-&gt;nameForLogging());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // don&#x27;t remove_class_from_loadable_list() </span><br><span class="line">    // - it&#x27;s not there and we don&#x27;t have the lock</span><br><span class="line">    detach_class(cls-&gt;ISA(), YES);</span><br><span class="line">    detach_class(cls, NO);</span><br><span class="line">    free_class(cls-&gt;ISA());</span><br><span class="line">    free_class(cls);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* objc_constructInstance</span><br><span class="line">* Creates an instance of `cls` at the location pointed to by `bytes`. </span><br><span class="line">* `bytes` must point to at least class_getInstanceSize(cls) bytes of </span><br><span class="line">*   well-aligned zero-filled memory.</span><br><span class="line">* The new object&#x27;s isa is set. Any C++ constructors are called.</span><br><span class="line">* Returns `bytes` if successful. Returns nil if `cls` or `bytes` is </span><br><span class="line">*   nil, or if C++ constructors fail.</span><br><span class="line">* Note: class_createInstance() and class_createInstances() preflight this.</span><br><span class="line">**********************************************************************/</span><br><span class="line">id </span><br><span class="line">objc_constructInstance(Class cls, void *bytes)</span><br><span class="line">&#123;</span><br><span class="line">    if (!cls  ||  !bytes) return nil;</span><br><span class="line"></span><br><span class="line">    id obj = (id)bytes;</span><br><span class="line"></span><br><span class="line">    // Read class&#x27;s info bits all at once for performance</span><br><span class="line">    bool hasCxxCtor = cls-&gt;hasCxxCtor();</span><br><span class="line">    bool hasCxxDtor = cls-&gt;hasCxxDtor();</span><br><span class="line">    bool fast = cls-&gt;canAllocNonpointer();</span><br><span class="line">    </span><br><span class="line">    if (fast) &#123;</span><br><span class="line">        obj-&gt;initInstanceIsa(cls, hasCxxDtor);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        obj-&gt;initIsa(cls);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (hasCxxCtor) &#123;</span><br><span class="line">        return object_cxxConstructFromClass(obj, cls, OBJECT_CONSTRUCT_NONE);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        return obj;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* class_createInstance</span><br><span class="line">* fixme</span><br><span class="line">* Locking: none</span><br><span class="line">*</span><br><span class="line">* Note: this function has been carefully written so that the fastpath</span><br><span class="line">* takes no branch.</span><br><span class="line">**********************************************************************/</span><br><span class="line">static ALWAYS_INLINE id</span><br><span class="line">_class_createInstanceFromZone(Class cls, size_t extraBytes, void *zone,</span><br><span class="line">                              int construct_flags = OBJECT_CONSTRUCT_NONE,</span><br><span class="line">                              bool cxxConstruct = true,</span><br><span class="line">                              size_t *outAllocatedSize = nil)</span><br><span class="line">&#123;</span><br><span class="line">    ASSERT(cls-&gt;isRealized());</span><br><span class="line"></span><br><span class="line">    // Read class&#x27;s info bits all at once for performance</span><br><span class="line">    bool hasCxxCtor = cxxConstruct &amp;&amp; cls-&gt;hasCxxCtor();</span><br><span class="line">    bool hasCxxDtor = cls-&gt;hasCxxDtor();</span><br><span class="line">    bool fast = cls-&gt;canAllocNonpointer();</span><br><span class="line">    size_t size;</span><br><span class="line"></span><br><span class="line">    size = cls-&gt;instanceSize(extraBytes);</span><br><span class="line">    if (outAllocatedSize) *outAllocatedSize = size;</span><br><span class="line"></span><br><span class="line">    id obj;</span><br><span class="line">    if (zone) &#123;</span><br><span class="line">        obj = (id)malloc_zone_calloc((malloc_zone_t *)zone, 1, size);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        obj = (id)calloc(1, size);</span><br><span class="line">    &#125;</span><br><span class="line">    if (slowpath(!obj)) &#123;</span><br><span class="line">        if (construct_flags &amp; OBJECT_CONSTRUCT_CALL_BADALLOC) &#123;</span><br><span class="line">            return _objc_callBadAllocHandler(cls);</span><br><span class="line">        &#125;</span><br><span class="line">        return nil;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (!zone &amp;&amp; fast) &#123;</span><br><span class="line">        obj-&gt;initInstanceIsa(cls, hasCxxDtor);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        // Use raw pointer isa on the assumption that they might be</span><br><span class="line">        // doing something weird with the zone or RR.</span><br><span class="line">        obj-&gt;initIsa(cls);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (fastpath(!hasCxxCtor)) &#123;</span><br><span class="line">        return obj;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    construct_flags |= OBJECT_CONSTRUCT_FREE_ONFAILURE;</span><br><span class="line">    return object_cxxConstructFromClass(obj, cls, construct_flags);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">id</span><br><span class="line">class_createInstance(Class cls, size_t extraBytes)</span><br><span class="line">&#123;</span><br><span class="line">    if (!cls) return nil;</span><br><span class="line">    return _class_createInstanceFromZone(cls, extraBytes, nil);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">NEVER_INLINE</span><br><span class="line">id</span><br><span class="line">_objc_rootAllocWithZone(Class cls, malloc_zone_t *zone __unused)</span><br><span class="line">&#123;</span><br><span class="line">    // allocWithZone under __OBJC2__ ignores the zone parameter</span><br><span class="line">    return _class_createInstanceFromZone(cls, 0, nil,</span><br><span class="line">                                         OBJECT_CONSTRUCT_CALL_BADALLOC);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* class_createInstances</span><br><span class="line">* fixme</span><br><span class="line">* Locking: none</span><br><span class="line">**********************************************************************/</span><br><span class="line">#if SUPPORT_NONPOINTER_ISA</span><br><span class="line">#warning fixme optimize class_createInstances</span><br><span class="line">#endif</span><br><span class="line">unsigned </span><br><span class="line">class_createInstances(Class cls, size_t extraBytes, </span><br><span class="line">                      id *results, unsigned num_requested)</span><br><span class="line">&#123;</span><br><span class="line">    return _class_createInstancesFromZone(cls, extraBytes, nil, </span><br><span class="line">                                          results, num_requested);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* object_copyFromZone</span><br><span class="line">* fixme</span><br><span class="line">* Locking: none</span><br><span class="line">**********************************************************************/</span><br><span class="line">static id </span><br><span class="line">_object_copyFromZone(id oldObj, size_t extraBytes, void *zone)</span><br><span class="line">&#123;</span><br><span class="line">    if (oldObj-&gt;isTaggedPointerOrNil()) return oldObj;</span><br><span class="line"></span><br><span class="line">    // fixme this doesn&#x27;t handle C++ ivars correctly (#4619414)</span><br><span class="line"></span><br><span class="line">    Class cls = oldObj-&gt;ISA(/*authenticated*/true);</span><br><span class="line">    size_t size;</span><br><span class="line">    id obj = _class_createInstanceFromZone(cls, extraBytes, zone,</span><br><span class="line">                                           OBJECT_CONSTRUCT_NONE, false, &amp;size);</span><br><span class="line">    if (!obj) return nil;</span><br><span class="line"></span><br><span class="line">    // Copy everything except the isa, which was already set above.</span><br><span class="line">    uint8_t *copyDst = (uint8_t *)obj + sizeof(Class);</span><br><span class="line">    uint8_t *copySrc = (uint8_t *)oldObj + sizeof(Class);</span><br><span class="line">    size_t copySize = size - sizeof(Class);</span><br><span class="line">    memmove(copyDst, copySrc, copySize);</span><br><span class="line"></span><br><span class="line">    fixupCopiedIvars(obj, oldObj);</span><br><span class="line"></span><br><span class="line">    return obj;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* object_copy</span><br><span class="line">* fixme</span><br><span class="line">* Locking: none</span><br><span class="line">**********************************************************************/</span><br><span class="line">id </span><br><span class="line">object_copy(id oldObj, size_t extraBytes)</span><br><span class="line">&#123;</span><br><span class="line">    return _object_copyFromZone(oldObj, extraBytes, malloc_default_zone());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#if SUPPORT_ZONES</span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* class_createInstanceFromZone</span><br><span class="line">* fixme</span><br><span class="line">* Locking: none</span><br><span class="line">**********************************************************************/</span><br><span class="line">id</span><br><span class="line">class_createInstanceFromZone(Class cls, size_t extraBytes, void *zone)</span><br><span class="line">&#123;</span><br><span class="line">    if (!cls) return nil;</span><br><span class="line">    return _class_createInstanceFromZone(cls, extraBytes, zone);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* object_copyFromZone</span><br><span class="line">* fixme</span><br><span class="line">* Locking: none</span><br><span class="line">**********************************************************************/</span><br><span class="line">id </span><br><span class="line">object_copyFromZone(id oldObj, size_t extraBytes, void *zone)</span><br><span class="line">&#123;</span><br><span class="line">    return _object_copyFromZone(oldObj, extraBytes, zone);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#endif</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* objc_destructInstance</span><br><span class="line">* Destroys an instance without freeing memory. </span><br><span class="line">* Calls C++ destructors.</span><br><span class="line">* Calls ARC ivar cleanup.</span><br><span class="line">* Removes associative references.</span><br><span class="line">* Returns `obj`. Does nothing if `obj` is nil.</span><br><span class="line">**********************************************************************/</span><br><span class="line">void *objc_destructInstance(id obj) </span><br><span class="line">&#123;</span><br><span class="line">    if (obj) &#123;</span><br><span class="line">        // Read all of the flags at once for performance.</span><br><span class="line">        bool cxx = obj-&gt;hasCxxDtor();</span><br><span class="line">        bool assoc = obj-&gt;hasAssociatedObjects();</span><br><span class="line"></span><br><span class="line">        // This order is important.</span><br><span class="line">        if (cxx) object_cxxDestruct(obj);</span><br><span class="line">        if (assoc) _object_remove_assocations(obj, /*deallocating*/true);</span><br><span class="line">        obj-&gt;clearDeallocating();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return obj;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* object_dispose</span><br><span class="line">* fixme</span><br><span class="line">* Locking: none</span><br><span class="line">**********************************************************************/</span><br><span class="line">id </span><br><span class="line">object_dispose(id obj)</span><br><span class="line">&#123;</span><br><span class="line">    if (!obj) return nil;</span><br><span class="line"></span><br><span class="line">    objc_destructInstance(obj);    </span><br><span class="line">    free(obj);</span><br><span class="line"></span><br><span class="line">    return nil;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* _objc_getFreedObjectClass</span><br><span class="line">* fixme</span><br><span class="line">* Locking: none</span><br><span class="line">**********************************************************************/</span><br><span class="line">Class _objc_getFreedObjectClass (void)</span><br><span class="line">&#123;</span><br><span class="line">    return nil;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* Tagged pointer objects.</span><br><span class="line">*</span><br><span class="line">* Tagged pointer objects store the class and the object value in the </span><br><span class="line">* object pointer; the &quot;pointer&quot; does not actually point to anything.</span><br><span class="line">* </span><br><span class="line">* Tagged pointer objects currently use this representation:</span><br><span class="line">* (LSB)</span><br><span class="line">*  1 bit   set if tagged, clear if ordinary object pointer</span><br><span class="line">*  3 bits  tag index</span><br><span class="line">* 60 bits  payload</span><br><span class="line">* (MSB)</span><br><span class="line">* The tag index defines the object&#x27;s class. </span><br><span class="line">* The payload format is defined by the object&#x27;s class.</span><br><span class="line">*</span><br><span class="line">* If the tag index is 0b111, the tagged pointer object uses an </span><br><span class="line">* &quot;extended&quot; representation, allowing more classes but with smaller payloads:</span><br><span class="line">* (LSB)</span><br><span class="line">*  1 bit   set if tagged, clear if ordinary object pointer</span><br><span class="line">*  3 bits  0b111</span><br><span class="line">*  8 bits  extended tag index</span><br><span class="line">* 52 bits  payload</span><br><span class="line">* (MSB)</span><br><span class="line">*</span><br><span class="line">* Some architectures reverse the MSB and LSB in these representations.</span><br><span class="line">*</span><br><span class="line">* This representation is subject to change. Representation-agnostic SPI is:</span><br><span class="line">* objc-internal.h for class implementers.</span><br><span class="line">* objc-gdb.h for debuggers.</span><br><span class="line">**********************************************************************/</span><br><span class="line">#if !SUPPORT_TAGGED_POINTERS</span><br><span class="line"></span><br><span class="line">// These variables are always provided for debuggers.</span><br><span class="line">uintptr_t objc_debug_taggedpointer_obfuscator = 0;</span><br><span class="line">uintptr_t objc_debug_taggedpointer_mask = 0;</span><br><span class="line">unsigned  objc_debug_taggedpointer_slot_shift = 0;</span><br><span class="line">uintptr_t objc_debug_taggedpointer_slot_mask = 0;</span><br><span class="line">unsigned  objc_debug_taggedpointer_payload_lshift = 0;</span><br><span class="line">unsigned  objc_debug_taggedpointer_payload_rshift = 0;</span><br><span class="line">Class objc_debug_taggedpointer_classes[1] = &#123; nil &#125;;</span><br><span class="line"></span><br><span class="line">uintptr_t objc_debug_taggedpointer_ext_mask = 0;</span><br><span class="line">unsigned  objc_debug_taggedpointer_ext_slot_shift = 0;</span><br><span class="line">uintptr_t objc_debug_taggedpointer_ext_slot_mask = 0;</span><br><span class="line">unsigned  objc_debug_taggedpointer_ext_payload_lshift = 0;</span><br><span class="line">unsigned  objc_debug_taggedpointer_ext_payload_rshift = 0;</span><br><span class="line">Class objc_debug_taggedpointer_ext_classes[1] = &#123; nil &#125;;</span><br><span class="line"></span><br><span class="line">uintptr_t objc_debug_constant_cfstring_tag_bits = 0;</span><br><span class="line"></span><br><span class="line">static void</span><br><span class="line">disableTaggedPointers() &#123; &#125;</span><br><span class="line"></span><br><span class="line">static void</span><br><span class="line">initializeTaggedPointerObfuscator(void) &#123; &#125;</span><br><span class="line"></span><br><span class="line">#else</span><br><span class="line"></span><br><span class="line">// The &quot;slot&quot; used in the class table and given to the debugger </span><br><span class="line">// includes the is-tagged bit. This makes objc_msgSend faster.</span><br><span class="line">// The &quot;ext&quot; representation doesn&#x27;t do that.</span><br><span class="line"></span><br><span class="line">uintptr_t objc_debug_taggedpointer_obfuscator;</span><br><span class="line">uintptr_t objc_debug_taggedpointer_mask = _OBJC_TAG_MASK;</span><br><span class="line">unsigned  objc_debug_taggedpointer_slot_shift = _OBJC_TAG_SLOT_SHIFT;</span><br><span class="line">uintptr_t objc_debug_taggedpointer_slot_mask = _OBJC_TAG_SLOT_MASK;</span><br><span class="line">unsigned  objc_debug_taggedpointer_payload_lshift = _OBJC_TAG_PAYLOAD_LSHIFT;</span><br><span class="line">unsigned  objc_debug_taggedpointer_payload_rshift = _OBJC_TAG_PAYLOAD_RSHIFT;</span><br><span class="line">// objc_debug_taggedpointer_classes is defined in objc-msg-*.s</span><br><span class="line"></span><br><span class="line">uintptr_t objc_debug_taggedpointer_ext_mask = _OBJC_TAG_EXT_MASK;</span><br><span class="line">unsigned  objc_debug_taggedpointer_ext_slot_shift = _OBJC_TAG_EXT_SLOT_SHIFT;</span><br><span class="line">uintptr_t objc_debug_taggedpointer_ext_slot_mask = _OBJC_TAG_EXT_SLOT_MASK;</span><br><span class="line">unsigned  objc_debug_taggedpointer_ext_payload_lshift = _OBJC_TAG_EXT_PAYLOAD_LSHIFT;</span><br><span class="line">unsigned  objc_debug_taggedpointer_ext_payload_rshift = _OBJC_TAG_EXT_PAYLOAD_RSHIFT;</span><br><span class="line">// objc_debug_taggedpointer_ext_classes is defined in objc-msg-*.s</span><br><span class="line"></span><br><span class="line">#if OBJC_SPLIT_TAGGED_POINTERS</span><br><span class="line">uint8_t objc_debug_tag60_permutations[8] = &#123; 0, 1, 2, 3, 4, 5, 6, 7 &#125;;</span><br><span class="line">uintptr_t objc_debug_constant_cfstring_tag_bits = _OBJC_TAG_EXT_MASK | ((uintptr_t)(OBJC_TAG_Constant_CFString - OBJC_TAG_First52BitPayload) &lt;&lt; _OBJC_TAG_EXT_SLOT_SHIFT);</span><br><span class="line">#else</span><br><span class="line">uintptr_t objc_debug_constant_cfstring_tag_bits = 0;</span><br><span class="line">#endif</span><br><span class="line"></span><br><span class="line">static void</span><br><span class="line">disableTaggedPointers()</span><br><span class="line">&#123;</span><br><span class="line">    objc_debug_taggedpointer_mask = 0;</span><br><span class="line">    objc_debug_taggedpointer_slot_shift = 0;</span><br><span class="line">    objc_debug_taggedpointer_slot_mask = 0;</span><br><span class="line">    objc_debug_taggedpointer_payload_lshift = 0;</span><br><span class="line">    objc_debug_taggedpointer_payload_rshift = 0;</span><br><span class="line"></span><br><span class="line">    objc_debug_taggedpointer_ext_mask = 0;</span><br><span class="line">    objc_debug_taggedpointer_ext_slot_shift = 0;</span><br><span class="line">    objc_debug_taggedpointer_ext_slot_mask = 0;</span><br><span class="line">    objc_debug_taggedpointer_ext_payload_lshift = 0;</span><br><span class="line">    objc_debug_taggedpointer_ext_payload_rshift = 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// Returns a pointer to the class&#x27;s storage in the tagged class arrays.</span><br><span class="line">// Assumes the tag is a valid basic tag.</span><br><span class="line">static Class *</span><br><span class="line">classSlotForBasicTagIndex(objc_tag_index_t tag)</span><br><span class="line">&#123;</span><br><span class="line">#if OBJC_SPLIT_TAGGED_POINTERS</span><br><span class="line">    uintptr_t obfuscatedTag = _objc_basicTagToObfuscatedTag(tag);</span><br><span class="line">    return &amp;objc_tag_classes[obfuscatedTag];</span><br><span class="line">#else</span><br><span class="line">    uintptr_t tagObfuscator = ((objc_debug_taggedpointer_obfuscator</span><br><span class="line">                                &gt;&gt; _OBJC_TAG_INDEX_SHIFT)</span><br><span class="line">                               &amp; _OBJC_TAG_INDEX_MASK);</span><br><span class="line">    uintptr_t obfuscatedTag = tag ^ tagObfuscator;</span><br><span class="line"></span><br><span class="line">    // Array index in objc_tag_classes includes the tagged bit itself</span><br><span class="line">#   if SUPPORT_MSB_TAGGED_POINTERS</span><br><span class="line">    return &amp;objc_tag_classes[0x8 | obfuscatedTag];</span><br><span class="line">#   else</span><br><span class="line">    return &amp;objc_tag_classes[(obfuscatedTag &lt;&lt; 1) | 1];</span><br><span class="line">#   endif</span><br><span class="line">#endif</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// Returns a pointer to the class&#x27;s storage in the tagged class arrays, </span><br><span class="line">// or nil if the tag is out of range.</span><br><span class="line">static Class *  </span><br><span class="line">classSlotForTagIndex(objc_tag_index_t tag)</span><br><span class="line">&#123;</span><br><span class="line">    if (tag &gt;= OBJC_TAG_First60BitPayload &amp;&amp; tag &lt;= OBJC_TAG_Last60BitPayload) &#123;</span><br><span class="line">        return classSlotForBasicTagIndex(tag);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (tag &gt;= OBJC_TAG_First52BitPayload &amp;&amp; tag &lt;= OBJC_TAG_Last52BitPayload) &#123;</span><br><span class="line">        int index = tag - OBJC_TAG_First52BitPayload;</span><br><span class="line">#if OBJC_SPLIT_TAGGED_POINTERS</span><br><span class="line">        if (tag &gt;= OBJC_TAG_FirstUnobfuscatedSplitTag)</span><br><span class="line">            return &amp;objc_tag_ext_classes[index];</span><br><span class="line">#endif</span><br><span class="line">        uintptr_t tagObfuscator = ((objc_debug_taggedpointer_obfuscator</span><br><span class="line">                                    &gt;&gt; _OBJC_TAG_EXT_INDEX_SHIFT)</span><br><span class="line">                                   &amp; _OBJC_TAG_EXT_INDEX_MASK);</span><br><span class="line">        return &amp;objc_tag_ext_classes[index ^ tagObfuscator];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return nil;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* initializeTaggedPointerObfuscator</span><br><span class="line">* Initialize objc_debug_taggedpointer_obfuscator with randomness.</span><br><span class="line">*</span><br><span class="line">* The tagged pointer obfuscator is intended to make it more difficult</span><br><span class="line">* for an attacker to construct a particular object as a tagged pointer,</span><br><span class="line">* in the presence of a buffer overflow or other write control over some</span><br><span class="line">* memory. The obfuscator is XORed with the tagged pointers when setting</span><br><span class="line">* or retrieving payload values. They are filled with randomness on first</span><br><span class="line">* use.</span><br><span class="line">**********************************************************************/</span><br><span class="line">static void</span><br><span class="line">initializeTaggedPointerObfuscator(void)</span><br><span class="line">&#123;</span><br><span class="line">//    if (!DisableTaggedPointerObfuscation &amp;&amp; dyld_program_sdk_at_least(dyld_fall_2018_os_versions)) &#123;</span><br><span class="line">//        // Pull random data into the variable, then shift away all non-payload bits.</span><br><span class="line">//        arc4random_buf(&amp;objc_debug_taggedpointer_obfuscator,</span><br><span class="line">//                       sizeof(objc_debug_taggedpointer_obfuscator));</span><br><span class="line">//        objc_debug_taggedpointer_obfuscator &amp;= ~_OBJC_TAG_MASK;</span><br><span class="line">//</span><br><span class="line">//#if OBJC_SPLIT_TAGGED_POINTERS</span><br><span class="line">//        // The obfuscator doesn&#x27;t apply to any of the extended tag mask or the no-obfuscation bit.</span><br><span class="line">//        objc_debug_taggedpointer_obfuscator &amp;= ~(_OBJC_TAG_EXT_MASK | _OBJC_TAG_NO_OBFUSCATION_MASK);</span><br><span class="line">//</span><br><span class="line">//        // Shuffle the first seven entries of the tag permutator.</span><br><span class="line">//        int max = 7;</span><br><span class="line">//        for (int i = max - 1; i &gt;= 0; i--) &#123;</span><br><span class="line">//            int target = arc4random_uniform(i + 1);</span><br><span class="line">//            swap(objc_debug_tag60_permutations[i],</span><br><span class="line">//                 objc_debug_tag60_permutations[target]);</span><br><span class="line">//        &#125;</span><br><span class="line">//#endif</span><br><span class="line">//    &#125; else &#123;</span><br><span class="line">//        // Set the obfuscator to zero for apps linked against older SDKs,</span><br><span class="line">//        // in case they&#x27;re relying on the tagged pointer representation.</span><br><span class="line">//        objc_debug_taggedpointer_obfuscator = 0;</span><br><span class="line">//    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* _objc_registerTaggedPointerClass</span><br><span class="line">* Set the class to use for the given tagged pointer index.</span><br><span class="line">* Aborts if the tag is out of range, or if the tag is already </span><br><span class="line">* used by some other class.</span><br><span class="line">**********************************************************************/</span><br><span class="line">void</span><br><span class="line">_objc_registerTaggedPointerClass(objc_tag_index_t tag, Class cls)</span><br><span class="line">&#123;</span><br><span class="line">    if (objc_debug_taggedpointer_mask == 0) &#123;</span><br><span class="line">        _objc_fatal(&quot;tagged pointers are disabled&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Class *slot = classSlotForTagIndex(tag);</span><br><span class="line">    if (!slot) &#123;</span><br><span class="line">        _objc_fatal(&quot;tag index %u is invalid&quot;, (unsigned int)tag);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Class oldCls = *slot;</span><br><span class="line">    </span><br><span class="line">    if (cls  &amp;&amp;  oldCls  &amp;&amp;  cls != oldCls) &#123;</span><br><span class="line">        _objc_fatal(&quot;tag index %u used for two different classes &quot;</span><br><span class="line">                    &quot;(was %p %s, now %p %s)&quot;, tag, </span><br><span class="line">                    oldCls, oldCls-&gt;nameForLogging(), </span><br><span class="line">                    cls, cls-&gt;nameForLogging());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    *slot = cls;</span><br><span class="line"></span><br><span class="line">    // Store a placeholder class in the basic tag slot that is </span><br><span class="line">    // reserved for the extended tag space, if it isn&#x27;t set already.</span><br><span class="line">    // Do this lazily when the first extended tag is registered so </span><br><span class="line">    // that old debuggers characterize bogus pointers correctly more often.</span><br><span class="line">    if (tag &lt; OBJC_TAG_First60BitPayload || tag &gt; OBJC_TAG_Last60BitPayload) &#123;</span><br><span class="line">        Class *extSlot = classSlotForBasicTagIndex(OBJC_TAG_RESERVED_7);</span><br><span class="line">        if (*extSlot == nil) &#123;</span><br><span class="line">            extern objc_class OBJC_CLASS_$___NSUnrecognizedTaggedPointer;</span><br><span class="line">            *extSlot = (Class)&amp;OBJC_CLASS_$___NSUnrecognizedTaggedPointer;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* _objc_getClassForTag</span><br><span class="line">* Returns the class that is using the given tagged pointer tag.</span><br><span class="line">* Returns nil if no class is using that tag or the tag is out of range.</span><br><span class="line">**********************************************************************/</span><br><span class="line">Class</span><br><span class="line">_objc_getClassForTag(objc_tag_index_t tag)</span><br><span class="line">&#123;</span><br><span class="line">    Class *slot = classSlotForTagIndex(tag);</span><br><span class="line">    if (slot) return *slot;</span><br><span class="line">    else return nil;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#endif</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#if SUPPORT_FIXUP</span><br><span class="line"></span><br><span class="line">OBJC_EXTERN void objc_msgSend_fixup(void);</span><br><span class="line">OBJC_EXTERN void objc_msgSendSuper2_fixup(void);</span><br><span class="line">OBJC_EXTERN void objc_msgSend_stret_fixup(void);</span><br><span class="line">OBJC_EXTERN void objc_msgSendSuper2_stret_fixup(void);</span><br><span class="line">#if defined(__i386__)  ||  defined(__x86_64__)</span><br><span class="line">OBJC_EXTERN void objc_msgSend_fpret_fixup(void);</span><br><span class="line">#endif</span><br><span class="line">#if defined(__x86_64__)</span><br><span class="line">OBJC_EXTERN void objc_msgSend_fp2ret_fixup(void);</span><br><span class="line">#endif</span><br><span class="line"></span><br><span class="line">OBJC_EXTERN void objc_msgSend_fixedup(void);</span><br><span class="line">OBJC_EXTERN void objc_msgSendSuper2_fixedup(void);</span><br><span class="line">OBJC_EXTERN void objc_msgSend_stret_fixedup(void);</span><br><span class="line">OBJC_EXTERN void objc_msgSendSuper2_stret_fixedup(void);</span><br><span class="line">#if defined(__i386__)  ||  defined(__x86_64__)</span><br><span class="line">OBJC_EXTERN void objc_msgSend_fpret_fixedup(void);</span><br><span class="line">#endif</span><br><span class="line">#if defined(__x86_64__)</span><br><span class="line">OBJC_EXTERN void objc_msgSend_fp2ret_fixedup(void);</span><br><span class="line">#endif</span><br><span class="line"></span><br><span class="line">/***********************************************************************</span><br><span class="line">* fixupMessageRef</span><br><span class="line">* Repairs an old vtable dispatch call site. </span><br><span class="line">* vtable dispatch itself is not supported.</span><br><span class="line">**********************************************************************/</span><br><span class="line">static void </span><br><span class="line">fixupMessageRef(message_ref_t *msg)</span><br><span class="line">&#123;    </span><br><span class="line">    msg-&gt;sel = sel_registerName((const char *)msg-&gt;sel);</span><br><span class="line"></span><br><span class="line">    if (msg-&gt;imp == &amp;objc_msgSend_fixup) &#123; </span><br><span class="line">        if (msg-&gt;sel == @selector(alloc)) &#123;</span><br><span class="line">            msg-&gt;imp = (IMP)&amp;objc_alloc;</span><br><span class="line">        &#125; else if (msg-&gt;sel == @selector(allocWithZone:)) &#123;</span><br><span class="line">            msg-&gt;imp = (IMP)&amp;objc_allocWithZone;</span><br><span class="line">        &#125; else if (msg-&gt;sel == @selector(retain)) &#123;</span><br><span class="line">            msg-&gt;imp = (IMP)&amp;objc_retain;</span><br><span class="line">        &#125; else if (msg-&gt;sel == @selector(release)) &#123;</span><br><span class="line">            msg-&gt;imp = (IMP)&amp;objc_release;</span><br><span class="line">        &#125; else if (msg-&gt;sel == @selector(autorelease)) &#123;</span><br><span class="line">            msg-&gt;imp = (IMP)&amp;objc_autorelease;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            msg-&gt;imp = &amp;objc_msgSend_fixedup;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; </span><br><span class="line">    else if (msg-&gt;imp == &amp;objc_msgSendSuper2_fixup) &#123; </span><br><span class="line">        msg-&gt;imp = &amp;objc_msgSendSuper2_fixedup;</span><br><span class="line">    &#125; </span><br><span class="line">    else if (msg-&gt;imp == &amp;objc_msgSend_stret_fixup) &#123; </span><br><span class="line">        msg-&gt;imp = &amp;objc_msgSend_stret_fixedup;</span><br><span class="line">    &#125; </span><br><span class="line">    else if (msg-&gt;imp == &amp;objc_msgSendSuper2_stret_fixup) &#123; </span><br><span class="line">        msg-&gt;imp = &amp;objc_msgSendSuper2_stret_fixedup;</span><br><span class="line">    &#125; </span><br><span class="line">#if defined(__i386__)  ||  defined(__x86_64__)</span><br><span class="line">    else if (msg-&gt;imp == &amp;objc_msgSend_fpret_fixup) &#123; </span><br><span class="line">        msg-&gt;imp = &amp;objc_msgSend_fpret_fixedup;</span><br><span class="line">    &#125; </span><br><span class="line">#endif</span><br><span class="line">#if defined(__x86_64__)</span><br><span class="line">    else if (msg-&gt;imp == &amp;objc_msgSend_fp2ret_fixup) &#123; </span><br><span class="line">        msg-&gt;imp = &amp;objc_msgSend_fp2ret_fixedup;</span><br><span class="line">    &#125; </span><br><span class="line">#endif</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// SUPPORT_FIXUP</span><br><span class="line">#endif</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// ProKit SPI</span><br><span class="line">static Class setSuperclass(Class cls, Class newSuper)</span><br><span class="line">&#123;</span><br><span class="line">    Class oldSuper;</span><br><span class="line"></span><br><span class="line">    runtimeLock.assertLocked();</span><br><span class="line"></span><br><span class="line">    ASSERT(cls-&gt;isRealized());</span><br><span class="line">    ASSERT(newSuper-&gt;isRealized());</span><br><span class="line"></span><br><span class="line">    oldSuper = cls-&gt;getSuperclass();</span><br><span class="line">    removeSubclass(oldSuper, cls);</span><br><span class="line">    removeSubclass(oldSuper-&gt;ISA(), cls-&gt;ISA());</span><br><span class="line"></span><br><span class="line">    cls-&gt;setSuperclass(newSuper);</span><br><span class="line">    cls-&gt;ISA()-&gt;setSuperclass(newSuper-&gt;ISA(/*authenticated*/true));</span><br><span class="line">    addSubclass(newSuper, cls);</span><br><span class="line">    addSubclass(newSuper-&gt;ISA(), cls-&gt;ISA());</span><br><span class="line"></span><br><span class="line">    // Flush subclass&#x27;s method caches.</span><br><span class="line">    flushCaches(cls, __func__, [](Class c)&#123; return true; &#125;);</span><br><span class="line">    flushCaches(cls-&gt;ISA(), __func__, [](Class c)&#123; return true; &#125;);</span><br><span class="line"></span><br><span class="line">    return oldSuper;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Class class_setSuperclass(Class cls, Class newSuper)</span><br><span class="line">&#123;</span><br><span class="line">    mutex_locker_t lock(runtimeLock);</span><br><span class="line">    return setSuperclass(cls, newSuper);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void runtime_init(void)</span><br><span class="line">&#123;</span><br><span class="line">    objc::unattachedCategories.init(32);</span><br><span class="line">    objc::allocatedClasses.init();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// __OBJC2__</span><br><span class="line">#endif</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> iOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iOS--长截图Demo测试</title>
      <link href="/2021/10/19/ios-chang-jie-tu-demo-ce-shi/"/>
      <url>/2021/10/19/ios-chang-jie-tu-demo-ce-shi/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> iOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iOS--浅谈消息转发机制</title>
      <link href="/2021/10/18/ios-qian-tan-xiao-xi-zhuan-fa-ji-zhi/"/>
      <url>/2021/10/18/ios-qian-tan-xiao-xi-zhuan-fa-ji-zhi/</url>
      
        <content type="html"><![CDATA[<h2 id="iOS–浅谈消息转发机制"><a href="#iOS–浅谈消息转发机制" class="headerlink" title="iOS–浅谈消息转发机制"></a>iOS–浅谈消息转发机制</h2><p>相信大家对这句话<code>unrecognized selector sent to instance 0x*********</code>一点都不陌生吧。</p><p>下面就来简单说一下 拯救即将崩溃代码–iOS的消息转发</p> <span id="more"></span><h3 id="动态绑定引发"><a href="#动态绑定引发" class="headerlink" title="动态绑定引发"></a>动态绑定引发</h3><p>因为OC是一个动态运行时语言，其中之一的特性就是动态绑定。</p><p>关于动态绑定，苹果官网的给的解释为：（determining the method to invoke at runtime）。</p><p>简单点来说就是：<strong>程序直到执行时才能确定实际要调用的方法。</strong></p><p>这样就会造成一个问题，我可以向一个实例发送一个消息，让它执行一个不属于自己的方法。这个时候就会出现<strong>unrecognized selector sent to instance</strong>。</p><p>如果发生这种情况，那么我们就可以应用消息转发来解决这个问题。<br>把这个不属于自己的方法变成属于自己的方法，或者找一个有这个方法的实例来执行这个方法。<br>在程序抛出这个错误之前我们有<strong>三次</strong>可以修正这个错误的机会。</p><h3 id="拯救即将崩溃代码"><a href="#拯救即将崩溃代码" class="headerlink" title="拯救即将崩溃代码"></a>拯救即将崩溃代码</h3><h4 id="第一步-方法解析处理阶段-动态方法决议"><a href="#第一步-方法解析处理阶段-动态方法决议" class="headerlink" title="第一步 方法解析处理阶段 | 动态方法决议"></a>第一步 方法解析处理阶段 | 动态方法决议</h4><p> 该方法内可为当前类动态添加方法。</p><p> 将sel的方法实现指向一个已存在的方法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">/**</span><br><span class="line"> 方法解析处理阶段 | 动态方法决议</span><br><span class="line"> 该方法内可为当前类动态添加方法。</span><br><span class="line"> 将sel的方法实现指向一个已存在的方法</span><br><span class="line"> */</span><br><span class="line">+ (BOOL)resolveInstanceMethod:(SEL)sel</span><br><span class="line">&#123;</span><br><span class="line">    NSString *selectorString = NSStringFromSelector(sel);</span><br><span class="line">    printf(&quot;%s %s\n&quot;, __func__, selectorString.UTF8String);</span><br><span class="line">    </span><br><span class="line">    // 根据 sel 得到 class 的实例方法</span><br><span class="line">    Method method = class_getInstanceMethod([self class], @selector(dynamic_method));</span><br><span class="line">    // 根据 sel 得到 class 的函数指针</span><br><span class="line">    IMP method_imp = class_getMethodImplementation([self class], @selector(dynamic_method));</span><br><span class="line">    // 给找不到实现的sel添加实现</span><br><span class="line">    BOOL ret = class_addMethod([self class], sel, method_imp, method_getTypeEncoding(method));</span><br><span class="line">    printf(&quot;%s\n&quot;, ret?&quot;交换添加成功&quot;:&quot;交换添加失败&quot;);</span><br><span class="line">    // 返回结果不影响流程</span><br><span class="line">    return YES;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>为什么说上面resolveInstanceMethod的返回结果不影响实际流程呢，看下面runtime的源码。<br>我们可以看到</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">/***********************************************************************</span><br><span class="line">* resolveInstanceMethod</span><br><span class="line">* Call +resolveInstanceMethod, looking for a method to be added to class cls.</span><br><span class="line">* cls may be a metaclass or a non-meta class.</span><br><span class="line">* Does not check if the method already exists.</span><br><span class="line">**********************************************************************/</span><br><span class="line">static void resolveInstanceMethod(id inst, SEL sel, Class cls)</span><br><span class="line">&#123;</span><br><span class="line">    runtimeLock.assertUnlocked();</span><br><span class="line">    ASSERT(cls-&gt;isRealized());</span><br><span class="line">    SEL resolve_sel = @selector(resolveInstanceMethod:);</span><br><span class="line"></span><br><span class="line">    if (!lookUpImpOrNilTryCache(cls, resolve_sel, cls-&gt;ISA(/*authenticated*/true))) &#123;</span><br><span class="line">        // Resolver not implemented.</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    BOOL (*msg)(Class, SEL, SEL) = (typeof(msg))objc_msgSend;</span><br><span class="line">    // 执行了resolveInstanceMethod方法，得到了一个结果resolved</span><br><span class="line">    bool resolved = msg(cls, resolve_sel, sel);</span><br><span class="line"></span><br><span class="line">    // Cache the result (good or bad) so the resolver doesn&#x27;t fire next time.</span><br><span class="line">    // +resolveInstanceMethod adds to self a.k.a. cls</span><br><span class="line">    IMP imp = lookUpImpOrNilTryCache(inst, sel, cls);</span><br><span class="line">    // resolved只影响了信息的输出</span><br><span class="line">    if (resolved  &amp;&amp;  PrintResolving) &#123;</span><br><span class="line">        if (imp) &#123;</span><br><span class="line">            _objc_inform(&quot;RESOLVE: method %c[%s %s] &quot;</span><br><span class="line">                         &quot;dynamically resolved to %p&quot;, </span><br><span class="line">                         cls-&gt;isMetaClass() ? &#x27;+&#x27; : &#x27;-&#x27;, </span><br><span class="line">                         cls-&gt;nameForLogging(), sel_getName(sel), imp);</span><br><span class="line">        &#125;</span><br><span class="line">        else &#123;</span><br><span class="line">            // Method resolver didn&#x27;t add anything?</span><br><span class="line">            _objc_inform(&quot;RESOLVE: +[%s resolveInstanceMethod:%s] returned YES&quot;</span><br><span class="line">                         &quot;, but no new implementation of %c[%s %s] was found&quot;,</span><br><span class="line">                         cls-&gt;nameForLogging(), sel_getName(sel), </span><br><span class="line">                         cls-&gt;isMetaClass() ? &#x27;+&#x27; : &#x27;-&#x27;, </span><br><span class="line">                         cls-&gt;nameForLogging(), sel_getName(sel));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="第二步-快速转发阶段-快速查找"><a href="#第二步-快速转发阶段-快速查找" class="headerlink" title="第二步 快速转发阶段 | 快速查找"></a>第二步 快速转发阶段 | 快速查找</h4><p> 上一步未解决问题时触发。</p><p> 返回一个能响应aSelector的实例，即将aSelector转发给另外的类。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> 快速转发阶段 | 快速查找</span><br><span class="line"> 上一步未解决问题时触发。</span><br><span class="line"> 返回一个能响应aSelector的实例，即将aSelector转发给另外的类。</span><br><span class="line"> */</span><br><span class="line">- (id)forwardingTargetForSelector:(SEL)aSelector</span><br><span class="line">&#123;</span><br><span class="line">    NSString *selectorString = NSStringFromSelector(aSelector);</span><br><span class="line">    printf(&quot;%s %s\n&quot;, __func__, selectorString.UTF8String);</span><br><span class="line">    </span><br><span class="line">    if ([selectorString isEqualToString:@&quot;no_imp_method&quot;]) &#123;</span><br><span class="line">        // 返回一个实现了aSelector函数的实例</span><br><span class="line">        // 如果该实例没有实现aSelector，则进入下一步methodSignatureForSelector</span><br><span class="line">        printf(&quot;%s 转发消息至BackUpClass\n&quot;,__func__);</span><br><span class="line">        return  [[BackUpClass alloc] init];</span><br><span class="line">    &#125;</span><br><span class="line">    // 返回self或者nil,则说明没有可以响应的目标,则进入下一步methodSignatureForSelector。</span><br><span class="line">    return nil;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="第三步-常规转发阶段-慢速查找"><a href="#第三步-常规转发阶段-慢速查找" class="headerlink" title="第三步 常规转发阶段 | 慢速查找"></a>第三步 常规转发阶段 | 慢速查找</h4><p> 获得一个方法签名。签名由一个能响应aSelector的实例生成。<br> 有签名则进入消息转发的最后一步forwardInvocation。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> 常规转发阶段 | 慢速查找</span><br><span class="line"> 返回一个方法签名。签名由一个能响应aSelector的实例生成。</span><br><span class="line"> </span><br><span class="line"> */</span><br><span class="line">- (NSMethodSignature *)methodSignatureForSelector:(SEL)aSelector</span><br><span class="line">&#123;</span><br><span class="line">    NSString *selectorString = NSStringFromSelector(aSelector);</span><br><span class="line">    printf(&quot;%s %s\n&quot;, __func__, selectorString.UTF8String);</span><br><span class="line">    </span><br><span class="line">    BackUpClass * backUp = [BackUpClass new];</span><br><span class="line">    NSMethodSignature * sign = [backUp methodSignatureForSelector:aSelector];</span><br><span class="line">    //有签名则进入消息转发的最后一步forwardInvocation</span><br><span class="line">    return sign;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>也可以什么都不处理，至此本次消息转发结束，程序也不会crash。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> 将sel转发给一个真正实现了sel的对象</span><br><span class="line"> 也可以什么都不处理，至此本次消息转发结束，也不会crash。</span><br><span class="line"> */</span><br><span class="line">- (void)forwardInvocation:(NSInvocation *)anInvocation</span><br><span class="line">&#123;</span><br><span class="line">    printf(&quot;%s %s\n&quot;,__func__ , anInvocation.description.UTF8String);</span><br><span class="line">    </span><br><span class="line">    // 创建备用消息接收对象</span><br><span class="line">    BackUpClass * backUp = [[BackUpClass alloc] init];</span><br><span class="line">    printf(&quot;%s 转发消息至BackUpClass\n&quot;,__func__);</span><br><span class="line">    [anInvocation invokeWithTarget:backUp];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="写在后面"><a href="#写在后面" class="headerlink" title="写在后面"></a>写在后面</h3><p>浅谈。可以交流。</p>]]></content>
      
      
      <categories>
          
          <category> iOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows--远程桌面账号密码输入正确却显示凭据失败</title>
      <link href="/2021/10/11/windows-remotedestopone/"/>
      <url>/2021/10/11/windows-remotedestopone/</url>
      
        <content type="html"><![CDATA[<h2 id="Windows–远程桌面账号密码都输入正确缺显示凭据失败的解决方法"><a href="#Windows–远程桌面账号密码都输入正确缺显示凭据失败的解决方法" class="headerlink" title="Windows–远程桌面账号密码都输入正确缺显示凭据失败的解决方法"></a>Windows–远程桌面账号密码都输入正确缺显示凭据失败的解决方法</h2><p>Windows A电脑 通过自带的远程桌面连接 Windows B电脑</p><p>A电脑：<strong>客户端</strong></p><p>B电脑：<strong>服务器</strong></p><p>一般来说客户端不需要什么操作</p><p>下面来说一下服务器端</p> <span id="more"></span><ul><li><p>第一步：Win+R</p></li><li><p>第二步：输入gpedit.msc 然后回车 </p></li><li><p>进入计算机策略配置</p></li><li><p>依次点开“计算机配置”→“Window设置”→“安全设置”→“本地策略”→“安全选项”<br><img src="https://img-blog.csdnimg.cn/img_convert/1db8c0035db8d4cdce8095e60181c256.png" alt="104A9D02-9443-4FB2-81BC-C38D573C5B40.png"></p></li><li><p>找到“网络访问：本地账户的共享和安全模型” 按下图更改为“经典-对本地用户进行身份验证，不改变其本来身份”</p></li></ul><p><img src="https://img-blog.csdnimg.cn/img_convert/ed809f83957a53bf790f6a95b2852824.png" alt="WX20211011-102024@2x.png"></p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iOS--AES加密</title>
      <link href="/2021/07/29/ios-aes-encrypt/"/>
      <url>/2021/07/29/ios-aes-encrypt/</url>
      
        <content type="html"><![CDATA[<p>密码学中的高级加密标准（Advanced Encryption Standard，AES），又称Rijndael加密法，是美国联邦政府采用的一种区块加密标准。<br>加密代码都在这里</p> <span id="more"></span><p>AES加密方法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * AES加密</span><br><span class="line"> * aesKey 加密Key</span><br><span class="line"> */</span><br><span class="line">+(NSData *)AESParmEncryptWithKey:(NSString *)AES_Key andEncryptData:(NSData *)encryptData  //加密</span><br><span class="line">&#123;</span><br><span class="line">    NSString * kInitVector = [AES_Key copy]; //16位偏移，CBC模式才有</span><br><span class="line">    NSData *initVector = [kInitVector dataUsingEncoding:NSUTF8StringEncoding];</span><br><span class="line">    //公钥</span><br><span class="line">    char keyPtr[kCCKeySizeAES128+1];</span><br><span class="line">    memset(keyPtr, 0, sizeof(keyPtr));</span><br><span class="line">    [AES_Key getCString:keyPtr maxLength:sizeof(keyPtr) encoding:NSUTF8StringEncoding];</span><br><span class="line">    //数据长度</span><br><span class="line">    NSUInteger dataLength = encryptData.length;</span><br><span class="line">    //加密输出缓冲区大小</span><br><span class="line">    size_t bufferSize = dataLength + kCCBlockSizeAES128;</span><br><span class="line">    //加密输出缓冲区</span><br><span class="line">    void *buffer = malloc(bufferSize);</span><br><span class="line">    //实际输出大小</span><br><span class="line">    size_t numBytesEncrypted = 0;</span><br><span class="line">    CCCryptorStatus cryptStatus = CCCrypt(kCCEncrypt,//kCCEncrypt 代表加密 kCCDecrypt代表解密</span><br><span class="line">                                          kCCAlgorithmAES,//加密算法</span><br><span class="line">                                          kCCOptionPKCS7Padding,//CBC -&gt; PKCS7Padding，ECB -&gt; kCCOptionPKCS7Padding|kCCOptionECBMode</span><br><span class="line">                                          keyPtr,</span><br><span class="line">                                          kCCBlockSizeAES128,//密钥长度128</span><br><span class="line">                                          initVector.bytes,//偏移字符串, ECB模式传NULL</span><br><span class="line">                                          encryptData.bytes,//编码内容</span><br><span class="line">                                          dataLength,</span><br><span class="line">                                          buffer,</span><br><span class="line">                                          bufferSize,</span><br><span class="line">                                          &amp;numBytesEncrypted);</span><br><span class="line">    if (cryptStatus == kCCSuccess) &#123;</span><br><span class="line">        return [NSData dataWithBytesNoCopy:buffer length:numBytesEncrypted];</span><br><span class="line">    &#125;</span><br><span class="line">    free(buffer);</span><br><span class="line">    return nil;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * AES加密</span><br><span class="line"> * aesKey 加密Key</span><br><span class="line"> */</span><br><span class="line">+ (NSString *)AES_EncryptWithKey:(NSString *)AES_Key andEncryptText:(NSString *)encryptText</span><br><span class="line">&#123;</span><br><span class="line">    AES_Key = [AESUtils checkAESKey:AES_Key];</span><br><span class="line">    const char *cstr = [encryptText cStringUsingEncoding:NSUTF8StringEncoding];</span><br><span class="line">    NSData *data = [NSData dataWithBytes:cstr length:encryptText.length];</span><br><span class="line">    //对数据进行加密</span><br><span class="line">    NSData *result = [AESUtils AESParmEncryptWithKey:AES_Key andEncryptData:data];</span><br><span class="line">    //转换为2进制字符串</span><br><span class="line">    if (result &amp;&amp; result.length &gt; 0) &#123;</span><br><span class="line">        Byte *datas = (Byte*)[result bytes];</span><br><span class="line">        NSMutableString *output = [NSMutableString stringWithCapacity:result.length * 2];</span><br><span class="line">        for(int i = 0; i &lt; result.length; i++)&#123;</span><br><span class="line">            [output appendFormat:@&quot;%02x&quot;, datas[i]];</span><br><span class="line">        &#125;</span><br><span class="line">        return output;</span><br><span class="line">    &#125;</span><br><span class="line">    return nil;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>AES解密方法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * AES解密</span><br><span class="line"> * aesKey 加密Key</span><br><span class="line"> */</span><br><span class="line">+ (NSData *)AESParmDecryptWithKey:(NSString *)AES_Key andDecryptData:(NSData *)decryptData  //解密</span><br><span class="line">&#123;</span><br><span class="line">    NSString * kInitVector = [AES_Key copy]; //16位偏移，CBC模式才有</span><br><span class="line">    NSData *initVector = [kInitVector dataUsingEncoding:NSUTF8StringEncoding];</span><br><span class="line">    //公钥</span><br><span class="line">    char keyPtr[kCCKeySizeAES128+1];</span><br><span class="line">    memset(keyPtr, 0, sizeof(keyPtr));</span><br><span class="line">    [AES_Key getCString:keyPtr maxLength:sizeof(keyPtr) encoding:NSUTF8StringEncoding];</span><br><span class="line">    //数据长度</span><br><span class="line">    NSUInteger dataLength = decryptData.length;</span><br><span class="line">    //加密输出缓冲区大小</span><br><span class="line">    size_t bufferSize = dataLength + kCCBlockSizeAES128;</span><br><span class="line">    //加密输出缓冲区</span><br><span class="line">    void *buffer = malloc(bufferSize);</span><br><span class="line">    //实际输出大小</span><br><span class="line">    size_t numBytesDecrypted = 0;</span><br><span class="line">    CCCryptorStatus cryptStatus = CCCrypt(kCCDecrypt,//kCCEncrypt 代表加密 kCCDecrypt代表解密</span><br><span class="line">                                          kCCAlgorithmAES,//加密算法</span><br><span class="line">                                          kCCOptionPKCS7Padding,//CBC -&gt; PKCS7Padding，ECB -&gt; kCCOptionPKCS7Padding|kCCOptionECBMode</span><br><span class="line">                                          keyPtr,</span><br><span class="line">                                          kCCBlockSizeAES128,//密钥长度128</span><br><span class="line">                                          initVector.bytes,//偏移字符串,, ECB模式传NULL</span><br><span class="line">                                          decryptData.bytes,//编码内容</span><br><span class="line">                                          dataLength,</span><br><span class="line">                                          buffer,</span><br><span class="line">                                          bufferSize,</span><br><span class="line">                                          &amp;numBytesDecrypted);</span><br><span class="line">    if (cryptStatus == kCCSuccess) &#123;</span><br><span class="line">        return [NSData dataWithBytesNoCopy:buffer length:numBytesDecrypted];</span><br><span class="line">    &#125;</span><br><span class="line">    free(buffer);</span><br><span class="line">    return nil;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * AES解密</span><br><span class="line"> * aesKey 加密Key</span><br><span class="line"> */</span><br><span class="line">+ (NSString *)AES_DecryptWithKey:(NSString *)AES_Key andDecryptText:(NSString *)decryptText</span><br><span class="line">&#123;</span><br><span class="line">    AES_Key = [AESUtils checkAESKey:AES_Key];    </span><br><span class="line">    //转换为2进制Data</span><br><span class="line">    NSMutableData *data = [NSMutableData dataWithCapacity:decryptText.length / 2];</span><br><span class="line">    unsigned char whole_byte;</span><br><span class="line">    char byte_chars[3] = &#123;&#x27;\0&#x27;,&#x27;\0&#x27;,&#x27;\0&#x27;&#125;;</span><br><span class="line">    int i;</span><br><span class="line">    for (i=0; i &lt; [decryptText length] / 2; i++) &#123;</span><br><span class="line">        byte_chars[0] = [decryptText characterAtIndex:i*2];</span><br><span class="line">        byte_chars[1] = [decryptText characterAtIndex:i*2+1];</span><br><span class="line">        whole_byte = strtol(byte_chars, NULL, 16);</span><br><span class="line">        [data appendBytes:&amp;whole_byte length:1];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    //对数据进行解密</span><br><span class="line">    NSData* result = [AESUtils AESParmDecryptWithKey:AES_Key andDecryptData:data];</span><br><span class="line">    if (result &amp;&amp; result.length &gt; 0) &#123;</span><br><span class="line">        return [[NSString alloc] initWithData:result encoding:NSUTF8StringEncoding];</span><br><span class="line">    &#125;</span><br><span class="line">    return nil;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 加密key检查</span><br><span class="line"> * aesKey 加密Key</span><br><span class="line"> */</span><br><span class="line">+ (NSString *)checkAESKey:(NSString *)AES_Key</span><br><span class="line">&#123;</span><br><span class="line">    if (AES_Key.length &lt; 16) &#123;</span><br><span class="line">        NSMutableArray *array = [NSMutableArray arrayWithArray:@[AES_Key]];</span><br><span class="line">        while (array.count &lt;= 16 - AES_Key.length) &#123;</span><br><span class="line">            [array insertObject:@&quot;0&quot; atIndex:0];</span><br><span class="line">        &#125;</span><br><span class="line">        AES_Key = [array componentsJoinedByString:@&quot;&quot;];</span><br><span class="line">    &#125;</span><br><span class="line">    return AES_Key;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Demo地址<a href="https://gitee.com/LiynXu/aesutils/tree/master/AESUtilsDemo">Demo</a><br>如有错误请指出。</p>]]></content>
      
      
      <categories>
          
          <category> iOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iOS--引用子类对象作为属性</title>
      <link href="/2021/04/22/ios-yin-yong-zi-lei-dui-xiang-zuo-wei-shu-xing/"/>
      <url>/2021/04/22/ios-yin-yong-zi-lei-dui-xiang-zuo-wei-shu-xing/</url>
      
        <content type="html"><![CDATA[<p>某位同事编码。一个类引用一个子类对象作为属性。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#import &lt;Foundation/Foundation.h&gt;</span><br><span class="line">#import &quot;CycleFindTestClas.h&quot;</span><br><span class="line"></span><br><span class="line">@interface TestObjectClass : NSObject</span><br><span class="line">@property (nonatomic, strong) CycleFindTestClas *cycle;</span><br><span class="line">@end</span><br></pre></td></tr></table></figure> <span id="more"></span><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#import &quot;TestObjectClass.h&quot;</span><br><span class="line"></span><br><span class="line">// 此声明CycleFindTestClas类的代码会被编译器报错</span><br><span class="line"></span><br><span class="line">//（Cannot find interface declaration for &#x27;TestObjectClass&#x27;, superclass of &#x27;CycleFindTestClas&#x27;）</span><br><span class="line"></span><br><span class="line">@interface CycleFindTestClas : TestObjectClass</span><br><span class="line"></span><br><span class="line">@end</span><br></pre></td></tr></table></figure><p>以下为本人猜测，如果纰漏请多多指教。</p><p>究其原因，其实很简单。编译器查找某个类无非是两种。</p><ul><li>通过文件查找 #import “ClassName.h”</li><li>通过前置声明 @class name;</li></ul><p>上述代码没有前置声明，那么查找TestObjectClass类必然要通过文件，于是开始了下面的流程</p><ul><li>编译器查到了TestObjectClass.h文件</li><li>然后开始从上到下遍历TestObjectClass.h代码</li><li>发现Foundation.h内没有，于是查找下一行CycleFindTestClas.h</li><li>发现CycleFindTestClas.h有TestObjectClass，但是这个TestObjectClass是个父类，那么继续开始查找TestObjectClass的声明</li><li>编译器查到了TestObjectClass.h文件</li><li>然后开始从上到下遍历TestObjectClass.h代码</li><li>······························ 是不是循环了</li></ul><p>所以根本就查找不到 TestObjectClass的声明@interface TestObjectClass : NSObject。<br>所以我们在日常编码中 .h 内尽量不再引用其他自定义类的 .h 文件，尽量使用前置声明某个类.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@class CycleFindTestClas;</span><br><span class="line">#import &lt;Foundation/Foundation.h&gt;</span><br><span class="line">@interface TestObjectClass : NSObject</span><br><span class="line">@property (nonatomic, strong) CycleFindTestClas *cycle;</span><br><span class="line">@end </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> iOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iOS--浅谈生成一个单例</title>
      <link href="/2021/04/22/ios-qian-tan-sheng-cheng-yi-ge-dan-li/"/>
      <url>/2021/04/22/ios-qian-tan-sheng-cheng-yi-ge-dan-li/</url>
      
        <content type="html"><![CDATA[<h2 id="浅谈生成一个单例"><a href="#浅谈生成一个单例" class="headerlink" title="浅谈生成一个单例"></a>浅谈生成一个单例</h2><p>单例作为非常常用的一个设计模式来说，是每个Coder必备的技能之一，但是还有很多人可能写了个假单例，就是我换种实例化方法可能就生成了一个新的对象。</p><h3 id="1、为什么要生成一个单例对象"><a href="#1、为什么要生成一个单例对象" class="headerlink" title="1、为什么要生成一个单例对象"></a>1、为什么要生成一个单例对象</h3><ul><li>为了确保在整个应用期间只有一个实例，以达到用户的特定的使用目的。</li><li>对于频繁使用的对象，可以把多次创建对象所花费的时间节省下来，提高运行效率。</li><li>如果对象所占用的空间大，那么就可以节省大量不必要的空间，降了内存压力。   <span id="more"></span><h3 id="2、生成单例需要注意的问题"><a href="#2、生成单例需要注意的问题" class="headerlink" title="2、生成单例需要注意的问题"></a>2、生成单例需要注意的问题</h3></li><li>不同实例化方法可能返回不同的对象</li></ul><h3 id="3、如何生成一个单例"><a href="#3、如何生成一个单例" class="headerlink" title="3、如何生成一个单例"></a>3、如何生成一个单例</h3><p>首先在当前类文件中声明一个全局静态对象</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@implementation TestObjectClass</span><br><span class="line">static  TestObjectClass *_testClass = nil;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>写一个类方法，初始化全局静态对象</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">+ (instancetype)shareObject&#123;</span><br><span class="line">    if (_testClass == nil) &#123;</span><br><span class="line">        _testClass = [[super alloc]init];</span><br><span class="line">    &#125;</span><br><span class="line">    return _testClass;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重写allocWithZone方法，拦截alloc方法，防止生成新对象（使用synchronized，并优化同步锁）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">+ (instancetype)allocWithZone:(struct _NSZone *)zone &#123;</span><br><span class="line">    if (_testClass == nil) &#123;</span><br><span class="line">        @synchronized (self) &#123;</span><br><span class="line">            if (_testClass == nil) &#123;</span><br><span class="line">                _testClass = [super allocWithZone:zone];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return _testClass;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重写allocWithZone方法，拦截alloc方法，防止生成新对象（使用dispatch_once）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">+ (instancetype)allocWithZone:(struct _NSZone *)zone &#123;</span><br><span class="line">    static dispatch_once_t onceToken;</span><br><span class="line">    dispatch_once(&amp;onceToken, ^&#123;</span><br><span class="line">        if (_testClass == nil) &#123;</span><br><span class="line">            _testClass = [super allocWithZone:zone];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    return _testClass;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>重写copyWithZone方法，拦截copy方法，防止生成新对象</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- (id)copyWithZone:(nullable NSZone *)zone &#123;</span><br><span class="line">    return _testClass;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重写mutableCopyWithZone方法，拦截mutableCopy方法，防止生成新对象</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- (id)mutableCopyWithZone:(nullable NSZone *)zone &#123;</span><br><span class="line">    return _testClass;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如有纰漏请多多指教。</p><p><a href="https://www.jianshu.com/p/03eb4f2203bd">简书：https://www.jianshu.com/p/03eb4f2203bd</a><br><a href="https://blog.csdn.net/ZuoWeiXiaoDuZuoZuo/article/details/116001644">CSDN：https://blog.csdn.net/ZuoWeiXiaoDuZuoZuo/article/details/116001644</a></p>]]></content>
      
      
      <categories>
          
          <category> iOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>macOS--cocoapodsPackager编译动态库</title>
      <link href="/2020/09/28/macos-cocoapodspackager-bian-yi-dong-tai-ku/"/>
      <url>/2020/09/28/macos-cocoapodspackager-bian-yi-dong-tai-ku/</url>
      
        <content type="html"><![CDATA[<h2 id="cocoapods-packager编译动态库失败的解决"><a href="#cocoapods-packager编译动态库失败的解决" class="headerlink" title="cocoapods-packager编译动态库失败的解决"></a>cocoapods-packager编译动态库失败的解决</h2><p>由于近期在研究私有库打包，发现此问题。</p><h3 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h3><p>一开始运行此段代码<code>pod package *******.podspec --force --no-mangle</code>毫无问题。<br>然后就开始尝试生成一个动态库，于是加上了<code>--dynamic</code>，此时出现了下面一大串代码。</p> <span id="more"></span><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">   CocoaPods : 1.9.3</span><br><span class="line">        Ruby : ruby 2.6.3p62 (2019-04-16 revision 67580) [universal.x86_64-darwin19]</span><br><span class="line">    RubyGems : 3.0.3</span><br><span class="line">        Host : Mac OS X 10.15 (19A582a)</span><br><span class="line">       Xcode : 11.3.1 (11C504)</span><br><span class="line">         Git : git version 2.21.1 (Apple Git-122.3)</span><br><span class="line">Ruby lib dir : /System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/lib</span><br><span class="line">Repositories : ARSpecRepo - git - git@gitlab.allride-ai.cn:infra/ios-common.git @ b1f3805d2a766c9509bde74f4574270917dce669</span><br><span class="line"></span><br><span class="line">               cocoa-local - file system</span><br><span class="line">               master - git - https://github.com/CocoaPods/Specs.git @ 163b8a8c3e6980b42c623bc76f6b136f8c68d19c</span><br><span class="line"></span><br><span class="line">               trunk - CDN - https://cdn.cocoapods.org/</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cocoapods-art         : 1.0.4</span><br><span class="line">cocoapods-deintegrate : 1.0.4</span><br><span class="line">cocoapods-packager    : 1.5.0</span><br><span class="line">cocoapods-plugins     : 1.0.0</span><br><span class="line">cocoapods-search      : 1.0.0</span><br><span class="line">cocoapods-stats       : 1.1.0</span><br><span class="line">cocoapods-trunk       : 1.4.1</span><br><span class="line">cocoapods-try         : 1.1.0</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">ArgumentError - wrong number of arguments (given 3, expected 7..10)</span><br><span class="line">/usr/local/lib/ruby/gems/2.6.0/gems/cocoapods-1.9.3/lib/cocoapods/target/pod_target.rb:137:in `initialize&#x27;</span><br><span class="line">/usr/local/lib/ruby/gems/2.6.0/gems/cocoapods-packager-1.5.0/lib/cocoapods-packager/pod_utils.rb:161:in `new&#x27;</span><br><span class="line">/usr/local/lib/ruby/gems/2.6.0/gems/cocoapods-packager-1.5.0/lib/cocoapods-packager/pod_utils.rb:161:in `build_dynamic_target&#x27;</span><br><span class="line">/usr/local/lib/ruby/gems/2.6.0/gems/cocoapods-packager-1.5.0/lib/cocoapods-packager/pod_utils.rb:131:in `install_dynamic_pod&#x27;</span><br><span class="line">/usr/local/lib/ruby/gems/2.6.0/gems/cocoapods-packager-1.5.0/lib/pod/command/package.rb:83:in `build_in_sandbox&#x27;</span><br><span class="line">/usr/local/lib/ruby/gems/2.6.0/gems/cocoapods-packager-1.5.0/lib/pod/command/package.rb:100:in `block in build_package&#x27;</span><br><span class="line">/usr/local/lib/ruby/gems/2.6.0/gems/cocoapods-packager-1.5.0/lib/pod/command/package.rb:99:in `each&#x27;</span><br><span class="line">/usr/local/lib/ruby/gems/2.6.0/gems/cocoapods-packager-1.5.0/lib/pod/command/package.rb:99:in `build_package&#x27;</span><br><span class="line">/usr/local/lib/ruby/gems/2.6.0/gems/cocoapods-packager-1.5.0/lib/pod/command/package.rb:66:in `run&#x27;</span><br><span class="line">/usr/local/lib/ruby/gems/2.6.0/gems/claide-1.0.3/lib/claide/command.rb:334:in `run&#x27;</span><br><span class="line">/usr/local/lib/ruby/gems/2.6.0/gems/cocoapods-1.9.3/lib/cocoapods/command.rb:52:in `run&#x27;</span><br><span class="line">/usr/local/lib/ruby/gems/2.6.0/gems/cocoapods-1.9.3/bin/pod:55:in `&lt;top (required)&gt;&#x27;</span><br><span class="line">/usr/local/lib/ruby/gems/2.6.0/bin/pod:24:in `load&#x27;</span><br><span class="line">/usr/local/lib/ruby/gems/2.6.0/bin/pod:24:in `&lt;main&gt;&#x27;</span><br></pre></td></tr></table></figure><p>然后同事的电脑可以正常打包，我查看了他的电脑环境，发现ruby是2.3.7，我以为是此处发生问题，于是开始了降级Ruby，然而。。。。。。事情并没有这么简单。</p><h3 id="我以为降级就会成功"><a href="#我以为降级就会成功" class="headerlink" title="我以为降级就会成功"></a>我以为降级就会成功</h3><p>因为我的系统已经更新到了10.15 Catalina，默认的Ruby版本就是2.6.3。</p><p>降级Ruby就得降级系统，但是降级系统到10.14总是不成功，总是提示</p><p><code>更新固件时发生错误。退出安装器以重新启动电脑，然后再次尝试。</code></p><p>然后我想起来这可能是联网验证的结果，于是我关闭wifi，调整时间到15年，然而。。。。。。。。。。还是会出现</p><p><code>更新固件时发生错误。退出安装器以重新启动电脑，然后再次尝试。</code></p><p>看来断了wifi还是没有用，最后发现安装过程中会重启几次，重启的时候wifi会自动开启然后连上我的路由器，于是我就把路由器的网线拔了，wifi让你连有网算我输！</p><p>然后。。。。。。。。居然成功了。哎。我太难了。</p><p>进入系统后一顿初始化，</p><pre><code>* 下载Xcode* 安装cocoapods* 安装cocoapods-packager* 拉代码</code></pre><p>等啊等，个把小时搞定这些事。</p><figure class="highlight plaintext"><figcaption><span>package *******.podspec --force --dynamic --no-mangle```打包ing</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">然后。。。。。。啊。。。。。。。还是报错啊！！！！！！！！！！！</span><br><span class="line"></span><br><span class="line">和之前除了工具版本不一致。其他基本一模一样。</span><br><span class="line"></span><br><span class="line">看来不是Ruby版本的问题。</span><br><span class="line"></span><br><span class="line">### 刚才方向不对，再来</span><br><span class="line"></span><br><span class="line">于是我就想是不是cocoapods-packager自己的锅。</span><br><span class="line"></span><br><span class="line">迅速去Github上的cocoapods-packager项目看issues。</span><br><span class="line"></span><br><span class="line">发现了一个问题： [**issues#257** Fail to build a pod into dynamic framework](https://github.com/CocoaPods/cocoapods-packager/issues/257)</span><br><span class="line"></span><br><span class="line">细心的我发现了一句话</span><br><span class="line">```Look at the master branch, the calling to Pod::PodTarget.new has changed.```</span><br><span class="line"></span><br><span class="line">我马不停蹄的查看了cocoapods-packager本机的代码，目录在这</span><br><span class="line">```cocoapods-packager/lib/cocoapods-packager/pod_utils.rb```</span><br><span class="line"></span><br></pre></td></tr></table></figure><pre><code>    file_accessors = create_file_accessors(static_target, dynamic_sandbox)    archs = []    dynamic_target = Pod::PodTarget.new(dynamic_sandbox, true, static_target.user_build_configurations, archs, platform, static_target.specs, static_target.target_definitions, file_accessors)    dynamic_target      end</code></pre><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Githu上现存的master分支</span><br><span class="line"></span><br></pre></td></tr></table></figure><pre><code>    dynamic_target = Pod::PodTarget.new(static_target.specs, static_target.target_definitions, dynamic_sandbox)    dynamic_target.host_requires_frameworks = true    dynamic_target.user_build_configurations = static_target.user_build_configurations    dynamic_target      end</code></pre><pre><code>对比发现这一段代码不一样，虽然我看不懂、、、、、、我是真的不会ruby。问题到这里差不多就解决了一大半，因为我已经找到了原因。### 发现解决方法这个时候我```sudo gem uninstall cocoapods-packager```，卸载掉cocoapods-packager。开始源码安装cocoapods-packager。首先拉取源代码```git clone https://github.com/CocoaPods/cocoapods-packager.git```完毕之后进入目录 ```cocoapods-packager```* 查看bundler是否安装```gem list bundler ```(没有出现bundler的话就```gem install bundler```)* 安装依赖项```bundler install```* 执行```sudo gem build cocoapods-packager.gemspec ```语句后会生成cocoapods-packager-1.5.0.gem文件* 将生成的cocoapods-packager-1.5.0.gem 文件执行本地安装```sudo gem install cocoapods-packager-1.5.0.gem -l```为了更稳我重启了终端。接着 ```pod package *******.podspec --force --dynamic --no-mangle```打包ing出现了```Building dynamic framework **** (****) with configuration Release```成功了。。。。。。太难了。此时我的编译环境是    * macOS 10.14.6    * Xcode 11.3下面就想，新系统上行不行的通，现在验证之前又不能升级。。。。emmmm。。。。。我还有个blackApple。### 最新编译环境验证另外一个设备的编译环境是    * macOS 10.15.7    * Xcode 12.0.1都是最新的。卸载掉gem安装的cocoapods-packager。源码安装cocoapods-packager。接着 ```pod package *******.podspec --force --dynamic --no-mangle```打包ing出现了```Building dynamic framework **** (****) with configuration Release```哎。又成功了。Happy。。。。马上把我笔记本的东西都升级了。美滋滋。。。特此记录。。。。。。。。。。。### 完</code></pre>]]></content>
      
      
      <categories>
          
          <category> macOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>macOS--制作Mac引导盘</title>
      <link href="/2018/04/07/macos-make-boot-usb-disk-for-mac/"/>
      <url>/2018/04/07/macos-make-boot-usb-disk-for-mac/</url>
      
        <content type="html"><![CDATA[<h2 id="如何制作Mac引导盘"><a href="#如何制作Mac引导盘" class="headerlink" title="如何制作Mac引导盘"></a>如何制作Mac引导盘</h2><p>制作mac的引导盘方法不止这一种，请严格按照要求来操作，出毛病我是不负责的哦。</p> <span id="more"></span><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><ul><li>8GB U盘一个（这个是容量下限，最低8GB，最好是USB3.0或者以上）</li><li>一个正常使用的macOS</li></ul><h3 id="下载原版系统-已下载可以忽略"><a href="#下载原版系统-已下载可以忽略" class="headerlink" title="下载原版系统 (已下载可以忽略)"></a>下载原版系统 (已下载可以忽略)</h3><ul><li>打开AppStore</li><li>看AppStore窗口右侧</li><li>macOS ······ 点击</li><li>下载</li><li>等（这个看网速的）</li></ul><h3 id="制作引导盘"><a href="#制作引导盘" class="headerlink" title="制作引导盘"></a>制作引导盘</h3><p>【注意】每个输入都和之前的一句隔着一个 <strong>空格</strong></p><ul><li>打开终端（terminal）</li><li>输入 <strong>“sudo”</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo</span><br></pre></td></tr></table></figure><ul><li>打开Finder（新版系统叫<strong>访达</strong>）</li><li>进入应用程序</li><li>点击刚刚下载的系统</li><li>右键–显示包内容 找到路径**”Contents/Resources/createinstallmedia”**，直接拖至终端,然后代码应该是下面这种 </li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">sudo /Applications/Install\ macOS\ High\ Sierra.app/Contents/Resources/createinstallmedia</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>注意 sudo 后有 <strong>空格</strong> </p><ul><li>接着输入以下代码</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">--volume</span><br></pre></td></tr></table></figure><ul><li><strong>语句现在是这样的</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">sudo /Applications/Install\ macOS\ High\ Sierra.app/Contents/Resources/createinstallmedia --volume</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>然后输入你的U盘盘符</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">/Volumes/macOS</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><strong>语句现在是这样的</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">sudo /Applications/Install\ macOS\ High\ Sierra.app/Contents/Resources/createinstallmedia --volume /Volumes/macOS</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>下一步</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">--applicationpath</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><strong>语句现在是这样的</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">sudo /Applications/Install\ macOS\ High\ Sierra.app/Contents/Resources/createinstallmedia --volume /Volumes/macOS --applicationpath</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>下一步</li></ul><p>直接把应用程序内的“安装macOS High Sierra.app”拖进终端</p><ul><li><strong>语句现在是这样的</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">sudo /Applications/Install\ macOS\ High\ Sierra.app/Contents/Resources/createinstallmedia --volume /Volumes/macOS --applicationpath /Applications/Install\ macOS\ High\ Sierra.app</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>下一步</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">--nointeraction</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><strong>语句现在是这样的</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">sudo /Applications/Install\ macOS\ High\ Sierra.app/Contents/Resources/createinstallmedia --volume /Volumes/macOS --applicationpath /Applications/Install\ macOS\ High\ Sierra.app --nointeraction</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>回车 （提示输入密码）</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Password:</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>输入管理员密码</strong> <strong>回车</strong></p><ul><li><strong>正在格式化磁盘</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Erasing Disk: 0%... 10%... 20%... 30%...100%...</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><strong>正在拷贝安装器文件</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Copying installer files to disk...</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这个时候你就可以看到你的U盘名称变了，而且里面多了一个系统，不过这个时候并没有完成</p><p>大概需要等待5-10分钟，这个时间长短主要取决于你U盘的写入速率</p><ul><li><strong>当显示下面信息是就代表制作完成</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Copy complete.</span><br><span class="line">Making disk bootable...</span><br><span class="line">Copying boot files...</span><br><span class="line">Copy complete.</span><br><span class="line">Done.</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> macOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Computer--U盘引导盘制作工具集合</title>
      <link href="/2018/04/05/computer-pe-boot-usb-disk-tools-set/"/>
      <url>/2018/04/05/computer-pe-boot-usb-disk-tools-set/</url>
      
        <content type="html"><![CDATA[<h3 id="写作目的"><a href="#写作目的" class="headerlink" title="写作目的"></a>写作目的</h3><p>为了向电脑小白科普目前，使用人数较多的PE引导盘的制作工具软件，这玩意的用处真的是很大很大了。</p><p>千万不要说PE只能重装系统。</p><ul><li>新硬盘无操作系统无分区，<strong>需要PE</strong>。</li><li>系统忘记登录密码不想重装，<strong>需要PE</strong>。</li><li>系统崩溃还有资料在桌面或者C盘，<strong>需要PE</strong>。</li><li>全盘数据恢复，<strong>需要PE</strong>。</li><li>重建主引导记录（MBR），重建分区表（修复分区表）、修复Windows系统引导，<strong>需要PE</strong>。</li></ul><p>这么有用的东西到底有多少呢，我也不是很清楚，看看下面就知道了。（排名不分先后，想到哪个写哪个）</p> <span id="more"></span><h4 id="电脑店"><a href="#电脑店" class="headerlink" title="电脑店"></a>电脑店</h4><p>这个是我第一次用的制作工具，不知道怎么就给找到了。<br>使用电脑店制作U盘PE系统比较的简单，基本上一键即可轻松制作，支持多种启动模式选择，支持个性化设置，别小看这个个性化设置，里边还隐藏着一些奥妙，为了测试的需要，我们采用默认设置进行PE系统的制作。</p><p>电脑店U盘启动盘制作工具，也是常称为的U盘启动制作工具的功能升格版，能更方便电脑技术人员装机、维护电脑使用的超强工具。此作品制作简单，支持所有U盘一键制作成启动盘；兼容多种机型；支持GHO、ISO系统文件，更支持原版系统安装，集成更全面工具，完全可以应对电脑技术人员常见的电脑故障维护工作。</p><ul><li>主页：<a href="http://u.diannaodian.com/">电脑店</a> - - &gt; <a href="http://u.diannaodian.com/">http://u.diannaodian.com/</a></li></ul><h4 id="U深度"><a href="#U深度" class="headerlink" title="U深度"></a>U深度</h4><p>这个是我比较喜欢里面的<strong>傲梅分区助手</strong></p><ul><li>主页：<a href="http://www.ushendu.info/">U深度</a> - - &gt; <a href="http://www.ushendu.info/">http://www.ushendu.info/</a></li></ul><h4 id="大白菜"><a href="#大白菜" class="headerlink" title="大白菜"></a>大白菜</h4><p>基本和电脑店差不多，大白菜制作U盘PE系统同样简单，还是一键即可搞定，也支持多种启动模式选择，支持个性化设置，个性化设置里同样隐藏着一些东西，可以自己去研究。</p><p>老牌经典PE之一，同时集成服务器版的server 2003和win8PE，支持BIOS/UEFI双启，对古董机器兼容非常好。内置工具比微PE多。集成一键装机，硬盘数据恢复，密码破解，等等实用的程序。 但是个人觉得部分工具重复，工具版本偏老旧、且略为臃肿。另！大白菜PE制作时要事先取消360赞助，否则安装系统后将装上360，不介意用户请忽略。 我觉得大白菜亮点是支持读写苹果分区格式（注意是读写，不是读取！），非常适合黑苹果用户。我也是个黑苹果用户。</p><ul><li>主页：<a href="http://www.dabaicaipe.cn/dbcpe/">大白菜</a> - - &gt; <a href="http://www.dabaicaipe.cn/dbcpe/">http://www.dabaicaipe.cn/dbcpe/</a></li></ul><h4 id="老毛桃"><a href="#老毛桃" class="headerlink" title="老毛桃"></a>老毛桃</h4><p>基本和电脑店差不多</p><ul><li>主页：<a href="http://www.laomaotao.org/">老毛桃</a> - - &gt; <a href="http://www.laomaotao.org/">http://www.laomaotao.org/</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 原创 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows--验证SHA1 MD5值</title>
      <link href="/2018/04/01/windows-how-to-verify-the-sha1-md5-value/"/>
      <url>/2018/04/01/windows-how-to-verify-the-sha1-md5-value/</url>
      
        <content type="html"><![CDATA[<p> 日常使用电脑过程中，难免会下载很多文件，比如游戏，软件等等，很多人在下载一个耗时长而又速度不稳定的文件之后，都可能遇见打开文件的时候显示文件被损坏的情况，这时候我们就需要在下载完成之后对文件就行数据完整性校验了。</p> <span id="more"></span><p>举个例子，以验证系统的记事本程序的Hash值为例，程序文件的路径为C:\Windows\notepad.exe。如果我们想要校验它的MD5值，<br>Win7 可运行：</p><p><strong>MD5</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">certutil -hashfile C:\Windows\notepad.exe MD5</span><br></pre></td></tr></table></figure><p><strong>SHA1</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">certutil -hashfile C:\Windows\notepad.exe SHA1</span><br></pre></td></tr></table></figure><p><strong>SHA256</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">certutil -hashfile C:\Windows\notepad.exe SHA256</span><br></pre></td></tr></table></figure><p>上面MD5 SHA1 SHA256请不要小写，除了文件路径，其他的要和上面一模一样</p><p>Win10 可运行如下命令：</p><pre><code>Get-FileHash C:\Windows\notepad.exe -Algorithm MD5| Format-List</code></pre><p>如果想要校验它的SHA1值，则运行如下命令：</p><pre><code>Get-FileHash C:\Windows\notepad.exe -Algorithm SHA1| Format-List</code></pre><p>如果想要校验SHA256值，则不需要带-Algorithm参数即可，命令如下：</p><pre><code>Get-FileHash C:\Windows\notepad.exe | Format-List</code></pre><p>  上面这个文件的路径是可以直接由鼠标拖进去的</p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows--如何下载系统</title>
      <link href="/2018/04/01/windows-download-windows-image/"/>
      <url>/2018/04/01/windows-download-windows-image/</url>
      
        <content type="html"><![CDATA[<p>本文主要讲述如何下载原版系统，所谓的原版系统就是微软服务器上的系统镜像，而不是国内各大论坛的GHOST版本，个人并不推荐GHOST以及其他任何第三方封装过的系统。<br>以下载win10  1511中文简体64位为例子<br> <span id="more"></span></p><p><strong>第1步</strong> 进入<strong>MSDN</strong></p><ul><li>网址为<a href="http://msdn.itellyou.cn/">http://msdn.itellyou.cn/</a></li></ul><p><img src="http://upload-images.jianshu.io/upload_images/1519926-a8a950fc88c8b14c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/500" alt="QQ20170820-084457.png"></p><p><strong>第2步</strong> 选择<strong>操作系统</strong></p><p><img src="http://upload-images.jianshu.io/upload_images/1519926-c75ae3ea5755dd96.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/500" alt="QQ20170820-084519.png"></p><p><strong>第3步</strong> 选择你需要的<strong>系统版本</strong></p><ul><li>windows 10，Version 1511</li><li>中文-简体</li><li>64位 （X64）</li></ul><p><img src="http://upload-images.jianshu.io/upload_images/1519926-3a09ffff5c824f04.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/500" alt="QQ20170820-084625.png"></p><p><strong>第4步</strong> 复制<strong>ed2k</strong>链接</p><p><img src="http://upload-images.jianshu.io/upload_images/1519926-9f97278160d47baa.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/500" alt="QQ20170820-085441.png"></p><p><strong>第5步</strong> 打开<strong>下载工具</strong>，<strong>新建</strong>一个下载任务，链接就是用刚才复制的<strong>链接</strong></p><ul><li>下载中最好不要暂停</li><li>下载完了之后记得<a href="http://ilongge.cn/2018/04/01/%E9%AA%8C%E8%AF%81SHA1%20MD5%E5%80%BC/">验证SHA1值</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>多站点配置SSH-Key</title>
      <link href="/2018/03/14/multwwwconfigssh-key/"/>
      <url>/2018/03/14/multwwwconfigssh-key/</url>
      
        <content type="html"><![CDATA[<h2 id="多站点配置SSH-Key"><a href="#多站点配置SSH-Key" class="headerlink" title="多站点配置SSH-Key"></a>多站点配置SSH-Key</h2><p>相信很多用mac在开发的同学都会遇见一个问题：会根据业务不同往不同的git服务器上提交代码。这些库有私有的有公有的，这时候就需要配置SSH_Key了。</p><span id="more"></span><h3 id="生成SSH-Key"><a href="#生成SSH-Key" class="headerlink" title="生成SSH-Key"></a>生成SSH-Key</h3><h4 id="打开终端-（terminal）"><a href="#打开终端-（terminal）" class="headerlink" title="打开终端 （terminal）"></a>打开终端 （terminal）</h4><ul><li>gitee(码云) · 秘钥对<br>使用以下命令生成gitee的秘钥对<br>【注意】emailaddress 填写自己的邮件地址</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;emailaddress&quot; -f ~/.ssh/gitee_id_rsa</span><br></pre></td></tr></table></figure><ul><li>github · 秘钥对<br>使用以下命令生成github的秘钥对<br>【注意】emailaddress 填写自己的邮件地址</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;emailaddress&quot; -f ~/.ssh/github_id_rsa</span><br></pre></td></tr></table></figure><h3 id="添加私钥"><a href="#添加私钥" class="headerlink" title="添加私钥"></a>添加私钥</h3><p>这个步骤是把私钥添加到当前设备，本地的不需要网络</p><p>添加 gitee 私钥</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-add ~/.ssh/gitee_id_rsa</span><br></pre></td></tr></table></figure><p>添加 github 私钥</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-add ~/.ssh/github_id_rsa</span><br></pre></td></tr></table></figure><p>添加公钥</p><p>和私钥不一样的是公钥是添加到git服务器的，所以这操作主要是在网页上进行的</p><p>添加 gitee 公钥<br>显示出gitee的公钥</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat ~/.ssh/gitee_id_rsa.pub</span><br></pre></td></tr></table></figure><p>将展示出的以ssh-rsa开头，然后以刚才你输入的emailaddress结尾的内容全部复制</p><p>添加至gitee的SSHKey公钥</p><p>添加 github 公钥<br>显示出github的公钥</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat ~/.ssh/github_id_rsa.pub</span><br></pre></td></tr></table></figure><p>将展示出的以ssh-rsa开头，然后以刚才你输入的emailaddress结尾的内容全部复制</p><p>添加至github的SSHKey公钥</p><p>创建Config<br>在 ~/.ssh/目录下创建一个配置文件，来为秘钥使用做配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd ~/.ssh/</span><br></pre></td></tr></table></figure><p>使用vim命令进行config文件的创建和编辑</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim config</span><br></pre></td></tr></table></figure><p>然后文件写入以下内容</p><h3 id="添加以下内容"><a href="#添加以下内容" class="headerlink" title="添加以下内容"></a>添加以下内容</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># gitee</span><br><span class="line">Host gitee.com</span><br><span class="line">    HostName gitee.com</span><br><span class="line">    PreferredAuthentications publickey</span><br><span class="line">    IdentityFile ~/.ssh/gitee_id_rsa</span><br><span class="line"># github</span><br><span class="line">Host github.com</span><br><span class="line">    HostName github.com</span><br><span class="line">    PreferredAuthentications publickey</span><br><span class="line">    IdentityFile ~/.ssh/github_id_rsa</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="然后配对秘钥"><a href="#然后配对秘钥" class="headerlink" title="然后配对秘钥"></a>然后配对秘钥</h3><p>主要测试当前秘钥是否可用</p><h4 id="配对gitee秘钥"><a href="#配对gitee秘钥" class="headerlink" title="配对gitee秘钥"></a>配对gitee秘钥</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@gitee.com</span><br></pre></td></tr></table></figure><p>gitee的测试会让输入 yes</p><p>连接gitee成功之后会显示以下信息</p><p>Welcome to Gitee.com, yourName!</p><h4 id="配对github秘钥"><a href="#配对github秘钥" class="headerlink" title="配对github秘钥"></a>配对github秘钥</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>连接github成功之后会显示以下信息</p><p>Hi yourName! You’ve successfully authenticated, but GitHub does not provide shell access.</p>]]></content>
      
      
      
        <tags>
            
            <tag> 原创 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>macOS--苹果笔记本安装Win</title>
      <link href="/2018/03/11/macos-ping-guo-bi-ji-ben-an-zhuang-win/"/>
      <url>/2018/03/11/macos-ping-guo-bi-ji-ben-an-zhuang-win/</url>
      
        <content type="html"><![CDATA[<h2 id="Mac–苹果笔记本安装Win-价值200块"><a href="#Mac–苹果笔记本安装Win-价值200块" class="headerlink" title="Mac–苹果笔记本安装Win(价值200块)"></a>Mac–苹果笔记本安装Win(价值200块)</h2><h3 id="为什么说是价值200块呢？"><a href="#为什么说是价值200块呢？" class="headerlink" title="为什么说是价值200块呢？"></a>为什么说是价值200块呢？</h3><p>  是因为你拿着你的mac去任何一个电脑店让老板给您装Windows系统，应该会找你要200。</p><p>  <strong>另外本文主要讲述的Windows系统为最新版的Win10 1709版本。</strong><br>    <span id="more"></span></p><p>  1、因为他们都觉得买得起mac的不差这200块钱。</p><p>  2、还有一个原因就是因为mac贵，所以我提供的服务也贵。</p><p>  3、以上两条都是为了坑点钱，其实给mac装Win系统很简单。</p><p>  比我给windows装mac简单多了。</p><h3 id="首先下载一个Windows的ISO镜像文件"><a href="#首先下载一个Windows的ISO镜像文件" class="headerlink" title="首先下载一个Windows的ISO镜像文件"></a>首先下载一个Windows的ISO镜像文件</h3><p>如果不会参看<a href="http://ilongge.cn/2017/08/20/%E5%A6%82%E4%BD%95%E4%B8%8B%E8%BD%BDWindows%E7%B3%BB%E7%BB%9F/">如何下载Windows系统</a></p><h3 id="使用bootcamp把系统写入到U盘"><a href="#使用bootcamp把系统写入到U盘" class="headerlink" title="使用bootcamp把系统写入到U盘"></a>使用bootcamp把系统写入到U盘</h3><ul><li>请注意，下载好的系统最好放在mac上</li><li>这里你需要一个最小8GB的U盘，里面要是空的，因为要格式化，有数据的注意备份。</li><li>然后插U盘到MAC上。</li><li>打开bootcamp(新版系统叫 <strong>启动转换助理</strong> )</li><li>继续</li><li>勾选三个钩（win7第一个可以不钩）</li><li>继续</li><li>选择你刚才下载好的ISO系统文件</li><li>继续 </li><li>等</li><li>分区，大小可以用鼠标挪动</li><li>重启就开始安装了</li></ul><h3 id="安装Windows"><a href="#安装Windows" class="headerlink" title="安装Windows"></a>安装Windows</h3><p>具体步骤参看【<a href="http://ilongge.cn/2018/02/03/Windows--UEFI%E5%BC%95%E5%AF%BC%E5%AE%89%E8%A3%85Win10/">UEFI引导安装Win10</a>】</p><p><strong>注意</strong></p><p>选择安装盘的这一步具体操作如下：</p><ul><li><p>选择带有bootcamp的分区，应该是第三个 或者 第四个（选择完成之后下方会有警告提示：不能安装到当前分区。。。。。。）</p></li><li><p>然后点击下方格式化（请确认上一步硬盘是否选错）</p></li><li><p>格式化之后，第一步的警告提示就应该消失了</p></li><li><p>下一步 其他步骤基本无异</p></li><li><p>再次重启进入Windows之后，打开U盘中的bootcamp.exe安装上去。这个文件是苹果电脑的驱动支持软件，不装的话估计你连网都没有哦。</p></li></ul><h3 id="是不是很简单"><a href="#是不是很简单" class="headerlink" title="是不是很简单"></a>是不是很简单</h3><h2 id="完！"><a href="#完！" class="headerlink" title="完！"></a>完！</h2>]]></content>
      
      
      <categories>
          
          <category> macOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows--如何将硬盘分区表转换为GUID(GPT)分区表</title>
      <link href="/2018/02/26/windows-the-hard-disk-partition-table-type-changge-to-guid-gpt/"/>
      <url>/2018/02/26/windows-the-hard-disk-partition-table-type-changge-to-guid-gpt/</url>
      
        <content type="html"><![CDATA[<h2 id="如何将硬盘分区表转换为GUID-GPT-分区表"><a href="#如何将硬盘分区表转换为GUID-GPT-分区表" class="headerlink" title="如何将硬盘分区表转换为GUID(GPT)分区表"></a>如何将硬盘分区表转换为GUID(GPT)分区表</h2><p>如果不知道自己的硬盘分区表类型可以参看 <a href="http://ilongge.cn/2018/02/24/Windows--%E5%A6%82%E4%BD%95%E6%9F%A5%E7%9C%8B%E7%A1%AC%E7%9B%98%E5%88%86%E5%8C%BA%E8%A1%A8%E7%B1%BB%E5%9E%8B/">Windows–如何查看硬盘分区表类型</a></p><span id="more"></span><h3 id="1、使用PE"><a href="#1、使用PE" class="headerlink" title="1、使用PE"></a>1、使用PE</h3><ul><li>制作U盘PE启动盘</li><li>进入PE</li><li>在PE里打开磁盘精灵 （DG）</li><li>右键磁盘 菜单中有转换为GUID分区表</li></ul><h3 id="2、在安装Win的时候"><a href="#2、在安装Win的时候" class="headerlink" title="2、在安装Win的时候"></a>2、在安装Win的时候</h3><ul><li>制作UEFI启动盘</li><li>进入UEFI安装的界面</li><li>shift + F10 （打开终端）</li><li>输入diskpart 回车 （进入diskpart）</li><li>list disk (显示磁盘列表，注意这里你只能用大小来区分你的硬盘了)</li><li>sel disk 0 (这个编号你自己看着你的来)</li><li>clean （清除数据）（可选）</li><li>convert gpt (转换为GPT分区表，好像是会清除磁盘上数据的)</li></ul><p><strong>同理，GPT转换至MBR上述方法同样适用</strong></p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows--如何查看硬盘分区表类型</title>
      <link href="/2018/02/24/windows-view-the-hard-disk-partition-table-type/"/>
      <url>/2018/02/24/windows-view-the-hard-disk-partition-table-type/</url>
      
        <content type="html"><![CDATA[<h2 id="如何查看硬盘分区表类型"><a href="#如何查看硬盘分区表类型" class="headerlink" title="如何查看硬盘分区表类型"></a>如何查看硬盘分区表类型</h2><h3 id="1、什么是硬盘分区表"><a href="#1、什么是硬盘分区表" class="headerlink" title="1、什么是硬盘分区表"></a>1、什么是硬盘分区表</h3><p>人们在使用电脑时，有时由于异常操作，有时由于病毒侵袭，会导致某个分区消失或硬盘无法启动。究其原因，就是硬盘分区表受损。硬盘分区表可以说是支持硬盘正常工作的骨架。操作系统正是通过它把硬盘划分为若干个分区，然后再在每个分区里面创建文件系统，写入数据文件。本文主要讲述的是分区表的位置，结构以及各个分区表是如何链接起来的。当掌握了这些知识后，即使分区表受到破坏，一样也可以根据残存的数据手工修复分区表，从而修复分区。</p><span id="more"></span><h3 id="2、都有什么类型"><a href="#2、都有什么类型" class="headerlink" title="2、都有什么类型"></a>2、都有什么类型</h3><p>目前在用的 <a href="https://baike.baidu.com/item/%E7%A1%AC%E7%9B%98%E5%88%86%E5%8C%BA%E8%A1%A8/108750?fr=aladdin"><strong>分区表</strong></a><br>类型主要有了两个：</p><h4 id="GUID-（也叫-GPT）"><a href="#GUID-（也叫-GPT）" class="headerlink" title="GUID （也叫 GPT）"></a>GUID （也叫 GPT）</h4><p>一种由基于 Itanium 计算机中的可扩展固件接口 (EFI) 使用的磁盘分区架构。与主启动记录(MBR) 分区方法相比，GPT 具有更多的优点，因为它允许每个磁盘有多达 128 个分区，支持高达 18 千兆兆字节的卷大小，允许将主磁盘分区表和备份磁盘分区表用于冗余，还支持唯一的磁盘和分区 ID (GUID）。与支持最大卷为 2 TB (terabytes) 并且每个磁盘最多有 4 个主分区（或 3 个主分区，1 个扩展分区和无限制的逻辑驱动器）的主启动记录(MBR)磁盘分区的样式相比，GUID分区表 (GPT) 磁盘分区样式支持最大卷为 18 EB (exabytes) 并且每磁盘最多有 128 个分区。与MBR分区的磁盘不同，至关重要的平台操作数据位于分区，而不是位于非分区或隐藏扇区。另外，GPT 分区磁盘有多余的主要及备份分区表来提高分区数据结构的完整性。</p><h4 id="MBR"><a href="#MBR" class="headerlink" title="MBR"></a>MBR</h4><p>传统的分区方案（称为MBR分区方案）是将分区信息保存到磁盘的第一个扇区（MBR扇区）中的64个字节中，每个分区项占用16个字节，这16个字节中存有活动状态标志、文件系统标识、起止柱面号、磁头号、扇区号、隐含扇区数目（4个字节）、分区总扇区数目（4个字节）等内容。由于MBR扇区只有64个字节用于分区表，所以只能记录4个分区的信息。这就是硬盘主分区数目不能超过4个的原因。后来为了支持更多的分区，引入了扩展分区及逻辑分区的概念。但每个分区项仍用16个字节存储。<br>MBR分区方案不是用得好好的吗？为什么要提出新的方案呢？那就让我们看看MBR分区方案有什么问题。前面已经提到了主分区数目不能超过4个的限制，这是其一，很多时候，4个主分区并不能满足需要。另外最关键的是MBR分区方案无法支持超过2TB容量的磁盘。因为这一方案用4个字节存储分区的总扇区数，最大能表示2的32次方的扇区个数，按每扇区512字节计算，每个分区最大不能超过2TB。磁盘容量超过2TB以后，分区的起始位置也就无法表示了。在硬盘容量突飞猛进的今天，2TB的限制将很快被突破。由此可见，MBR分区方案已经无法满足需要了。</p><h3 id="3、怎么查看自己的硬盘分区表"><a href="#3、怎么查看自己的硬盘分区表" class="headerlink" title="3、怎么查看自己的硬盘分区表"></a>3、怎么查看自己的硬盘分区表</h3><p>桌面–&gt;计算机图标–&gt;右键–&gt;管理–&gt;磁盘管理–&gt;选择一个磁盘（注意是磁盘不是分区）<br>–&gt;右键–&gt;属性–&gt;鼠标左键点击“卷”–&gt;查看“磁盘分区形式”</p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows--UEFI引导安装Win10</title>
      <link href="/2018/02/03/windows-uefi-boot-installation-win10/"/>
      <url>/2018/02/03/windows-uefi-boot-installation-win10/</url>
      
        <content type="html"><![CDATA[<h2 id="Windows–UEFI引导安装Win10"><a href="#Windows–UEFI引导安装Win10" class="headerlink" title="Windows–UEFI引导安装Win10"></a>Windows–UEFI引导安装Win10</h2><p>本文主要讲述如何使用普通U盘<strong>UEFI引导</strong>启动盘安装Windows系统</p><p>注意此方法只能安装于**GPT(GUID)**分区表的硬盘</p><span id="more"></span><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><ul><li>找一个8GB或更大的U盘 USB3.0更好 这样更快</li><li><a href="http://ilongge.cn/2017/08/20/%E5%A6%82%E4%BD%95%E4%B8%8B%E8%BD%BDWindows%E7%B3%BB%E7%BB%9F/">下载官方ISO系统文件镜像</a>（随便找一个不是C盘的目录放着就行，建议直接扔在D盘根目录）</li><li>然后新建一个文件夹叫 WindowsImage</li><li>解压这个ISO文件到 WindowsImage文件夹</li></ul><h3 id="首先制作UEFI启动盘"><a href="#首先制作UEFI启动盘" class="headerlink" title="首先制作UEFI启动盘"></a>首先制作UEFI启动盘</h3><ul><li>U盘格式化为Fat32文件系统（有些主板也支持NTFS，比如我的华硕Z170AR）</li><li>将解压好的 WindowsImage文件夹下面的所有文件放入U盘跟目录</li><li>注意现在的U盘打开之后应该有好几个文件夹，如下图</li></ul><p><img src="http://upload-images.jianshu.io/upload_images/1519926-50ee80a9cdf29b95.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/640" alt="QQ20180205-133057.png"></p><h4 id="选择U盘启动"><a href="#选择U盘启动" class="headerlink" title="选择U盘启动"></a>选择U盘启动</h4><ul><li>U盘插在需要装系统的电脑上，然后开机 </li><li>笔记本：自己去百度你的这个型号如何从U盘启动</li><li>台式机：去百度你这个电脑主板的U盘启动方法</li></ul><h3 id="看图了"><a href="#看图了" class="headerlink" title="看图了"></a>看图了</h3><h4 id="正式安装系统"><a href="#正式安装系统" class="headerlink" title="正式安装系统"></a>正式安装系统</h4><h5 id="下一步"><a href="#下一步" class="headerlink" title="下一步"></a>下一步</h5><p><img src="http://upload-images.jianshu.io/upload_images/1519926-df73a1c95daafda4.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/640" alt="IMG_20180203_112202.jpg"></p><h5 id="现在安装"><a href="#现在安装" class="headerlink" title="现在安装"></a>现在安装</h5><p><img src="http://upload-images.jianshu.io/upload_images/1519926-6cbe0c983b4ea833.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/640" alt="IMG_20180203_112214.jpg"></p><h5 id="随便选一个版本"><a href="#随便选一个版本" class="headerlink" title="随便选一个版本"></a>随便选一个版本</h5><p><img src="http://upload-images.jianshu.io/upload_images/1519926-3253178c160c2fb4.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/640" alt="IMG_20180203_112232.jpg"></p><h5 id="接受-（不然你还想怎样）"><a href="#接受-（不然你还想怎样）" class="headerlink" title="接受 （不然你还想怎样）"></a>接受 （不然你还想怎样）</h5><p><img src="http://upload-images.jianshu.io/upload_images/1519926-0e44d0ebeaa59c32.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/640" alt="IMG_20180203_112244.jpg"></p><h5 id="自定义-："><a href="#自定义-：" class="headerlink" title="自定义 ："></a>自定义 ：</h5><p><img src="http://upload-images.jianshu.io/upload_images/1519926-761ddc5387d86d2a.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/640" alt="IMG_20180203_112257.jpg"></p><h5 id="分区自己看着选"><a href="#分区自己看着选" class="headerlink" title="分区自己看着选"></a>分区自己看着选</h5><p>这一步建议大家把电脑上除了需要装系统的硬盘 其他的都拆下来</p><p>没区分的自己分区</p><p><img src="http://upload-images.jianshu.io/upload_images/1519926-490488f84b242b5e.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/640" alt="IMG_20180203_16406.jpg"></p><h5 id="没有引导分区会额外自动创建-点击确定"><a href="#没有引导分区会额外自动创建-点击确定" class="headerlink" title="没有引导分区会额外自动创建 点击确定"></a>没有引导分区会额外自动创建 点击确定</h5><p><img src="http://upload-images.jianshu.io/upload_images/1519926-9b7941d3be5faff6.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/640" alt="IMG_20180203_112413.jpg"></p><h5 id="选择系统安装的盘符-基本就是第一个主分区"><a href="#选择系统安装的盘符-基本就是第一个主分区" class="headerlink" title="选择系统安装的盘符 基本就是第一个主分区"></a>选择系统安装的盘符 基本就是第一个主分区</h5><p><img src="http://upload-images.jianshu.io/upload_images/1519926-11483dd11811e8bb.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/640" alt="IMG_20180203_112428.jpg"></p><h5 id="下一步-1"><a href="#下一步-1" class="headerlink" title="下一步"></a>下一步</h5><p><img src="http://upload-images.jianshu.io/upload_images/1519926-5dec817c93c4135b.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/640" alt="IMG_20180203_112440.jpg"></p><h5 id="等"><a href="#等" class="headerlink" title="等"></a>等</h5><p><img src="http://upload-images.jianshu.io/upload_images/1519926-809d444083bd03cb.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/640" alt="IMG_20180203_112843.jpg"></p><h5 id="还是等"><a href="#还是等" class="headerlink" title="还是等"></a>还是等</h5><p> 重启的时候就可以把U盘拔下来了，因为U盘的作用已经完了</p><p><img src="http://upload-images.jianshu.io/upload_images/1519926-100db07a62cabf6e.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/640" alt="IMG_20180203_112905.jpg"></p><h5 id="重启"><a href="#重启" class="headerlink" title="重启"></a>重启</h5><p><img src="http://upload-images.jianshu.io/upload_images/1519926-2d76f4d21d900de5.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/640" alt="IMG_20180203_113011.jpg"></p><h4 id="系统设置"><a href="#系统设置" class="headerlink" title="系统设置"></a>系统设置</h4><h5 id="中国"><a href="#中国" class="headerlink" title="中国"></a>中国</h5><p><img src="http://upload-images.jianshu.io/upload_images/1519926-1377d45d7d02a5c8.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/640" alt="IMG_20180203_113102.jpg"></p><h5 id="随便选-我选拼音"><a href="#随便选-我选拼音" class="headerlink" title="随便选 我选拼音"></a>随便选 我选拼音</h5><p><img src="http://upload-images.jianshu.io/upload_images/1519926-8b933fcd769e977a.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/640" alt="IMG_20180203_113153.jpg"></p><h5 id="随便-我选跳过"><a href="#随便-我选跳过" class="headerlink" title="随便 我选跳过"></a>随便 我选跳过</h5><p><img src="http://upload-images.jianshu.io/upload_images/1519926-ed2709e3041421e8.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/640" alt="IMG_20180203_113203_BURST005.jpg"></p><h5 id="等-1"><a href="#等-1" class="headerlink" title="等"></a>等</h5><p><img src="http://upload-images.jianshu.io/upload_images/1519926-6ff692925e3a7308.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/640" alt="IMG_20180203_113220.jpg"></p><h5 id="针对个人使用-下一步"><a href="#针对个人使用-下一步" class="headerlink" title="针对个人使用  下一步"></a>针对个人使用  下一步</h5><p><img src="http://upload-images.jianshu.io/upload_images/1519926-be18be147e001882.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/640" alt="IMG_20180203_113251.jpg"></p><h5 id="如果不使用微软账号-就找到左下角-脱机账户"><a href="#如果不使用微软账号-就找到左下角-脱机账户" class="headerlink" title="如果不使用微软账号 就找到左下角 脱机账户"></a>如果不使用微软账号 就找到左下角 脱机账户</h5><p><img src="http://upload-images.jianshu.io/upload_images/1519926-23bb1ec0fda800e1.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/640" alt="IMG_20180203_113301.jpg"></p><h5 id="否"><a href="#否" class="headerlink" title="否"></a>否</h5><p><img src="http://upload-images.jianshu.io/upload_images/1519926-9bc64cb87a861d3a.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/640" alt="IMG_20180203_113314.jpg"></p><h5 id="名字自己起"><a href="#名字自己起" class="headerlink" title="名字自己起"></a>名字自己起</h5><p><img src="http://upload-images.jianshu.io/upload_images/1519926-3948d6f069e84164.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/640" alt="IMG_20180203_113342.jpg"></p><h5 id="密码-填不填都可以"><a href="#密码-填不填都可以" class="headerlink" title="密码 填不填都可以"></a>密码 填不填都可以</h5><p><img src="http://upload-images.jianshu.io/upload_images/1519926-0ad3e686d2d15d58.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/640" alt="IMG_20180203_113358.jpg"></p><h5 id="我不喜欢-我选否"><a href="#我不喜欢-我选否" class="headerlink" title="我不喜欢 我选否"></a>我不喜欢 我选否</h5><p><img src="http://upload-images.jianshu.io/upload_images/1519926-e751c3c57661a1a9.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/640" alt="IMG_20180203_113422.jpg"></p><h5 id="我就这样配置"><a href="#我就这样配置" class="headerlink" title="我就这样配置"></a>我就这样配置</h5><p><img src="http://upload-images.jianshu.io/upload_images/1519926-28dd8b864ca74386.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/640" alt="IMG_20180203_113510.jpg"></p><h5 id="等咯"><a href="#等咯" class="headerlink" title="等咯"></a>等咯</h5><p><img src="http://upload-images.jianshu.io/upload_images/1519926-e384c48d4c1588c0.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/640" alt="IMG_20180203_113521.jpg"></p><h5 id="接着等"><a href="#接着等" class="headerlink" title="接着等"></a>接着等</h5><p><img src="http://upload-images.jianshu.io/upload_images/1519926-c4b00ebeb0eed2df.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/640" alt="IMG_20180203_113539.jpg"></p><h5 id="这不就OK了"><a href="#这不就OK了" class="headerlink" title="这不就OK了"></a>这不就OK了</h5><p><img src="http://upload-images.jianshu.io/upload_images/1519926-84d15ff9175016be.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/640" alt="IMG_20180203_113800.jpg"></p><h2 id="完"><a href="#完" class="headerlink" title="完"></a>完</h2>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos7配置yum源</title>
      <link href="/2018/01/12/centos7-pei-zhi-yum-yuan/"/>
      <url>/2018/01/12/centos7-pei-zhi-yum-yuan/</url>
      
        <content type="html"><![CDATA[<h2 id="Centos7配置yum源"><a href="#Centos7配置yum源" class="headerlink" title="Centos7配置yum源"></a>Centos7配置yum源</h2><p>我们安装完成CentOS系统，默认都是系统自带的yum源，因为你懂得原因会导致国内用户用yum安装软件的时候比较慢，为了提高效率，一般我们会配置国内的yum源。</p><span id="more"></span><p>目前国内比较好的yum源有网易yum源、搜狐yum源等，现在介绍下怎么配置网易163yum源：</p><h3 id="1、首先备份-etc-yum-repos-d-CentOS-Base-repo"><a href="#1、首先备份-etc-yum-repos-d-CentOS-Base-repo" class="headerlink" title="1、首先备份/etc/yum.repos.d/CentOS-Base.repo"></a>1、首先备份/etc/yum.repos.d/CentOS-Base.repo</h3><p>(不一定是这个名称 你可以看一下 具体叫啥)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv /etc/yum.repos.d/CentOS-Base.repo  /etc/yum.repos.d/CentOS-Base.repo.backup</span><br></pre></td></tr></table></figure><h3 id="2、根据CentOS不同版本选择下载对应的repo文件，放到-etc-yum-repos-d-目录"><a href="#2、根据CentOS不同版本选择下载对应的repo文件，放到-etc-yum-repos-d-目录" class="headerlink" title="2、根据CentOS不同版本选择下载对应的repo文件，放到/etc/yum.repos.d/ 目录"></a>2、根据CentOS不同版本选择下载对应的repo文件，放到/etc/yum.repos.d/ 目录</h3><h4 id="首先进入yum-repos-d目录"><a href="#首先进入yum-repos-d目录" class="headerlink" title="首先进入yum.repos.d目录"></a>首先进入yum.repos.d目录</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/yum.repos.d/</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="CentOS-5-x"><a href="#CentOS-5-x" class="headerlink" title="CentOS 5.x"></a>CentOS 5.x</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget http://mirrors.163.com/.help/CentOS5-Base-163.repo</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="CentOS-6-x"><a href="#CentOS-6-x" class="headerlink" title="CentOS 6.x"></a>CentOS 6.x</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget http://mirrors.163.com/.help/CentOS6-Base-163.repo</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="CentOS-7-x"><a href="#CentOS-7-x" class="headerlink" title="CentOS 7.x"></a>CentOS 7.x</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget http://mirrors.163.com/.help/CentOS7-Base-163.repo</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3、最后，执行yum-makecache生成缓存"><a href="#3、最后，执行yum-makecache生成缓存" class="headerlink" title="3、最后，执行yum makecache生成缓存"></a>3、最后，执行yum makecache生成缓存</h3><h4 id="清除缓存"><a href="#清除缓存" class="headerlink" title="清除缓存"></a>清除缓存</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum clean all</span><br></pre></td></tr></table></figure><h4 id="生成新缓存"><a href="#生成新缓存" class="headerlink" title="生成新缓存"></a>生成新缓存</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum makecache</span><br></pre></td></tr></table></figure><h3 id="OK-简单3步操作即可配置完成。"><a href="#OK-简单3步操作即可配置完成。" class="headerlink" title="OK, 简单3步操作即可配置完成。"></a>OK, 简单3步操作即可配置完成。</h3>]]></content>
      
      
      
        <tags>
            
            <tag> 转载 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows--如何修改IP地址</title>
      <link href="/2018/01/11/windows-how-to-change-ip-address/"/>
      <url>/2018/01/11/windows-how-to-change-ip-address/</url>
      
        <content type="html"><![CDATA[<h2 id="Windows–如何修改IP地址"><a href="#Windows–如何修改IP地址" class="headerlink" title="Windows–如何修改IP地址"></a>Windows–如何修改IP地址</h2><p>本文主要讲述windows 7如何修改电脑的**<a href="https://baike.baidu.com/item/IP%E5%9C%B0%E5%9D%80">IP地址</a>**。<br>其他的例如win8  win8.1，win10 基本都一样，如果找不到那么就去搜索控制面板，然后进入网络与Internet</p><span id="more"></span><h3 id="进入网络与共享中心"><a href="#进入网络与共享中心" class="headerlink" title="进入网络与共享中心"></a>进入网络与共享中心</h3><p><img src="http://upload-images.jianshu.io/upload_images/1519926-c458a540e41c463c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/640" alt="QQ20180111-103722.png"></p><p><img src="http://upload-images.jianshu.io/upload_images/1519926-46b4de214a0061b2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/640" alt="QQ20180111-103818.png"></p><h3 id="进入网络适配器页面"><a href="#进入网络适配器页面" class="headerlink" title="进入网络适配器页面"></a>进入网络适配器页面</h3><p><img src="http://upload-images.jianshu.io/upload_images/1519926-128f1111350fb6f8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="QQ20180111-103853.png"></p><h3 id="进入连接属性"><a href="#进入连接属性" class="headerlink" title="进入连接属性"></a>进入连接属性</h3><p><img src="http://upload-images.jianshu.io/upload_images/1519926-bf88202bfb264a10.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="QQ20180111-103930.png"></p><h3 id="进入ipv4协议属性"><a href="#进入ipv4协议属性" class="headerlink" title="进入ipv4协议属性"></a>进入ipv4协议属性</h3><p><img src="http://upload-images.jianshu.io/upload_images/1519926-8a87072d2c962ce1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="QQ20180111-103950.png"></p><h3 id="手动填写IP地址"><a href="#手动填写IP地址" class="headerlink" title="手动填写IP地址"></a>手动填写IP地址</h3><ul><li>这里面的东西如何填写需要根据你的路由器来决定的，基本上家里的设置都是192.168.1.* (* 号填写100-254)</li><li>子网掩码 基本都是255.255.255.0</li><li>网关也是根据路由器来 192.168.1.1</li><li>DNS 第一行也可以根据路由器来：192.168.1.1 或者 指定固定的DNS，比如114.114.114.114</li><li>第二行随意</li></ul><p><img src="http://upload-images.jianshu.io/upload_images/1519926-5060e67482d09ead.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="QQ20180111-103950.png"></p><h3 id="保存"><a href="#保存" class="headerlink" title="保存"></a>保存</h3><p><img src="http://upload-images.jianshu.io/upload_images/1519926-dc1f84313fbcfe82.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="QQ20180111-104009.png"></p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>台式组装机简单故障的排查与清除</title>
      <link href="/2018/01/10/computer-normal-problem-check-and-fix/"/>
      <url>/2018/01/10/computer-normal-problem-check-and-fix/</url>
      
        <content type="html"><![CDATA[<h2 id="台式组装机简单故障的排查与清除"><a href="#台式组装机简单故障的排查与清除" class="headerlink" title="台式组装机简单故障的排查与清除"></a>台式组装机简单故障的排查与清除</h2><p>本文主要讲述台式机部分简单故障的排查与清除。</p><span id="more"></span><h3 id="故障一：不能正常开机"><a href="#故障一：不能正常开机" class="headerlink" title="故障一：不能正常开机"></a>故障一：不能正常开机</h3><p>此故障在电脑使用中最为常见，原因也是五花八门，下面我给大家梳理一些常见的故障以及清除方法：</p><h4 id="电脑开机，反复重启"><a href="#电脑开机，反复重启" class="headerlink" title="电脑开机，反复重启"></a>电脑开机，反复重启</h4><p>这种问题十有八九就是**<a href="https://baike.baidu.com/item/%E5%86%85%E5%AD%98">内存</a>**的问题，下图就是内存：目前主流内存有DDR3和DDR4</p><p><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1515576804599&di=46abba220da8ec2bb1ddb92cd274221b&imgtype=0&src=http://image.koolshare.cn/attachment/forum/201609/12/091124dco07lrr03nr2do1.jpg" alt="内存：带马甲的是DDR4另外一个是DDR3"></p><ul><li>如果有空闲的内存插槽，请尝试调整内存安装位置；如不能解决下一条。</li><li>如果无法调整位置，请尝试使用橡皮擦蘸酒精擦拭内存金手指位置；如不能解决下一条。</li><li>如果无法调整位置，请尝试交换内存安装位置；如不能解决下一条。</li><li>如果无法调整位置，请尝试选择拆卸内存，然后每装一根开机一次看看问题是否得到解决，如果确定问题内存建议联系卖家；如不能解决下一条。</li><li>实在无法解决请更换内存；</li><li>此问题目前我多见于威刚内存</li></ul><h4 id="电脑开机主机启动正常，但显示器无反应"><a href="#电脑开机主机启动正常，但显示器无反应" class="headerlink" title="电脑开机主机启动正常，但显示器无反应"></a>电脑开机主机启动正常，但显示器无反应</h4><p> 这种问题可能是内存的问题，也可能是**<a href="https://baike.baidu.com/item/%E6%98%BE%E5%8D%A1">显卡</a><strong>问题，下图就是显卡：目前主流显卡很多，</strong><a href="https://baike.baidu.com/item/amd/5905">AMD</a><strong>的 RX 400、RX 500系列，</strong><a href="https://baike.baidu.com/item/NVIDIA">Nvidia</a>**的 GTX 9 、GTX 10系列；</p><p> <img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1515576981498&di=3cf8957e2472e59dc0faf49ac562102c&imgtype=0&src=http://cms-bucket.nosdn.127.net/catchpic/a/a5/a55f2694355a0bc74206fefab1ac6689.jpg?imageView&thumbnail=550x0" alt="GTX 1080Ti"></p><ul><li>如果是NVIDIA的10系显卡，请不要使用不带芯片的VGA转接头，尽量使用HDMI线连接显示器；</li><li>按照上个故障来排查；如不能解决下一条。</li><li>使用核显，将独立显卡从主板中拆除，将原先插在独立显卡上的视频线接到主板上，如果无相应插头建议自行寻找转换接口，如能正常开机则问题出在显卡上，建议联系卖家；</li></ul><h4 id="电脑开机自动进入-BIOS"><a href="#电脑开机自动进入-BIOS" class="headerlink" title="电脑开机自动进入**BIOS**"></a>电脑开机自动进入**<a href="https://baike.baidu.com/item/bios">BIOS</a>**</h4><p>这种问题基本就是电脑的启动项设置不对造成的。</p><ul><li>进入电脑主板BIOS，进入启动设置：（没错的话叫 BOOT），选择自己系统所在的硬盘作为首选启动项，保存并退出。如不能解决下一条。</li><li>如出系统盘外还有其他硬盘请拆除后开机，看看是否正常。</li><li></li></ul><h4 id="电脑开机显示下面几张图："><a href="#电脑开机显示下面几张图：" class="headerlink" title="电脑开机显示下面几张图："></a>电脑开机显示下面几张图：</h4><h5 id="CPU-Fan-Error"><a href="#CPU-Fan-Error" class="headerlink" title="CPU Fan Error"></a>CPU Fan Error</h5><p>请尝试检查CPU散热风扇的接线柱，是否正确安装到了CPU_FAN位置，CPU_OPT安装的应该是副风扇（一体水冷的时候基本是水泵）</p><p><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1515576479967&di=b42187a73d3b1c0f31208fb41aabc14b&imgtype=0&src=http://www.udaxia.com/uploads/allimg/140813/6-140Q3092UbP.png" alt="CPU Fan Error"></p><h5 id="Please-enter-Setup-to-recover-BIOS-setting"><a href="#Please-enter-Setup-to-recover-BIOS-setting" class="headerlink" title="Please enter Setup to recover BIOS setting"></a>Please enter Setup to recover BIOS setting</h5><p>这个问题基本出现在上了年纪的电脑上，也就是是两年以上的电脑，原因就是主板电池没电了，造成了主板的设置不能正常保存，去附近的电脑店里面一个就OK了，5块钱吧。</p><p><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1515580205230&di=6d24f65914e8f61629558fa687e5dbf5&imgtype=0&src=http://b.hiphotos.baidu.com/zhidao/pic/item/4ec2d5628535e5ddf67ce19770c6a7efce1b6221.jpg"></p><h3 id="故障二：无法上网"><a href="#故障二：无法上网" class="headerlink" title="故障二：无法上网"></a>故障二：无法上网</h3><h4 id="网络标志显示红叉或者根本没有网络标志"><a href="#网络标志显示红叉或者根本没有网络标志" class="headerlink" title="网络标志显示红叉或者根本没有网络标志"></a>网络标志显示红叉或者根本没有网络标志</h4><p>这种问题基本就是**<a href="https://baike.baidu.com/item/%E7%BD%91%E5%8D%A1">网卡</a>**没有启动导致的可能的原因就是驱动没装好</p><ul><li>去下载主板网卡在当前系统版本下的驱动，系统版本有32位（X86）和64位（X64）之分，请看清楚</li></ul><h4 id="能用部分聊天软件，就是不能打开网页"><a href="#能用部分聊天软件，就是不能打开网页" class="headerlink" title="能用部分聊天软件，就是不能打开网页"></a>能用部分聊天软件，就是不能打开网页</h4><p>基本**<a href="https://baike.baidu.com/item/DNS%E6%9C%8D%E5%8A%A1%E5%99%A8/8079460">DNS</a><strong>的问题没的跑了,需要修改</strong><a href="https://baike.baidu.com/item/IP%E5%9C%B0%E5%9D%80">IP地址</a>**</p><ul><li>修改本机当前ip配置。如何修改这个就要看系统版本了，不一样的版本入口不一样</li><li>对于win7可以点击小电脑图标-&gt;打开网络与共享设置-&gt;然后左侧边栏更改适配器设置-&gt;找到目前在用的链接(本地连接或者是无线网络)-&gt;右键属性-&gt;选择ipV4-&gt;属性-&gt;勾选手动设置</li><li>其他的例如win8  win8.1，win10 基本都一样，如果找不到那么就去搜索控制面板，然后进入网络与Internet</li></ul><h5 id="进入网络与共享中心"><a href="#进入网络与共享中心" class="headerlink" title="进入网络与共享中心"></a>进入网络与共享中心</h5><p><img src="http://upload-images.jianshu.io/upload_images/1519926-c458a540e41c463c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/640" alt="QQ20180111-103722.png"></p><p><img src="http://upload-images.jianshu.io/upload_images/1519926-46b4de214a0061b2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/640" alt="QQ20180111-103818.png"></p><h5 id="进入网络适配器页面"><a href="#进入网络适配器页面" class="headerlink" title="进入网络适配器页面"></a>进入网络适配器页面</h5><p><img src="http://upload-images.jianshu.io/upload_images/1519926-128f1111350fb6f8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="QQ20180111-103853.png"></p><h5 id="进入连接属性"><a href="#进入连接属性" class="headerlink" title="进入连接属性"></a>进入连接属性</h5><p><img src="http://upload-images.jianshu.io/upload_images/1519926-bf88202bfb264a10.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="QQ20180111-103930.png"></p><h5 id="进入ipv4协议属性"><a href="#进入ipv4协议属性" class="headerlink" title="进入ipv4协议属性"></a>进入ipv4协议属性</h5><p><img src="http://upload-images.jianshu.io/upload_images/1519926-8a87072d2c962ce1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="QQ20180111-103950.png"></p><h5 id="手动填写IP地址"><a href="#手动填写IP地址" class="headerlink" title="手动填写IP地址"></a>手动填写IP地址</h5><ul><li>这里面的东西如何填写需要根据你的路由器来决定的，基本上家里的设置都是192.168.1.* (* 号填写100-254)</li><li>子网掩码 基本都是255.255.255.0</li><li>网关也是根据路由器来 192.168.1.1</li><li>DNS 第一行也可以根据路由器来：192.168.1.1 或者 指定固定的DNS，比如114.114.114.114</li><li>第二行随意</li></ul><p><img src="http://upload-images.jianshu.io/upload_images/1519926-5060e67482d09ead.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="QQ20180111-103950.png"></p><h5 id="保存"><a href="#保存" class="headerlink" title="保存"></a>保存</h5><p><img src="http://upload-images.jianshu.io/upload_images/1519926-dc1f84313fbcfe82.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="QQ20180111-104009.png"></p><p>如果上述方法不能解决建议重置网络服务</p><h4 id="重置网络服务"><a href="#重置网络服务" class="headerlink" title="重置网络服务"></a>重置网络服务</h4><h5 id="进入命令行工具（管理员模式）"><a href="#进入命令行工具（管理员模式）" class="headerlink" title="*  进入命令行工具（管理员模式）"></a>*  进入命令行工具（管理员模式）</h5><h5 id="输入-netsh-winsock-reset-然后回车"><a href="#输入-netsh-winsock-reset-然后回车" class="headerlink" title="*  输入 netsh winsock reset 然后回车"></a>*  输入 netsh winsock reset 然后回车</h5><h5 id="完成之后重启"><a href="#完成之后重启" class="headerlink" title="*  完成之后重启"></a>*  完成之后重启</h5>]]></content>
      
      
      
        <tags>
            
            <tag> 原创 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows--如何使用PE安装官方ISO镜像</title>
      <link href="/2018/01/03/windows-use-pe-installation-windwos-iso-image/"/>
      <url>/2018/01/03/windows-use-pe-installation-windwos-iso-image/</url>
      
        <content type="html"><![CDATA[<h2 id="Windows–如何使用PE安装官方ISO镜像"><a href="#Windows–如何使用PE安装官方ISO镜像" class="headerlink" title="Windows–如何使用PE安装官方ISO镜像"></a>Windows–如何使用PE安装官方ISO镜像</h2><p>本文主要讲述如何使用普通U盘启动盘安装Windows重装系统,<br>注意此方法只能安装于<strong>MBR</strong>分区表的硬盘</p><span id="more"></span><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><ul><li>制作U盘启动盘–普通PE类</li><li>下载官方ISO系统文件镜像（随便找一个不是C盘的目录放着就行，建议直接扔在D盘根目录）</li><li>然后新建一个文件夹叫 WindowsImage</li><li>解压这个ISO文件到 WindowsImage文件夹</li></ul><h3 id="首先"><a href="#首先" class="headerlink" title="首先"></a>首先</h3><ul><li>将制作好的U盘插入电脑的usb接口，然后开机</li></ul><h4 id="选择U盘启动"><a href="#选择U盘启动" class="headerlink" title="选择U盘启动"></a>选择U盘启动</h4><ul><li>笔记本：自己去百度你的这个型号如何从U盘启动</li><li>台式机：去百度你这个电脑主板的U盘启动方法</li></ul><h4 id="进入PE"><a href="#进入PE" class="headerlink" title="进入PE"></a>进入PE</h4><ul><li><p>出现如下图所示的界面<br><img src="http://upload-images.jianshu.io/upload_images/1519926-2f57f6d183983e65.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/620" alt="PE"></p></li><li><p>选择带有运行******x86 或者 *******x64 或者 windwos2003等字样的任何一个启动</p></li><li><p>进入PE 开始启动了<br><img src="http://upload-images.jianshu.io/upload_images/1519926-01b00e19278c2ee9.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/620" alt="PE"></p></li><li><p>PE启动完成，现在可以操作了<br><img src="http://upload-images.jianshu.io/upload_images/1519926-8c2e3f3450970f59.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/620" alt="PE"></p></li></ul><h4 id="安装windows系统"><a href="#安装windows系统" class="headerlink" title="安装windows系统"></a>安装windows系统</h4><ul><li>打开桌面上的windows安装器 </li><li>点击<strong>install.wim文件的位置</strong>一项的选择</li><li>找到刚才解压的那个文件夹WindowsImage下的sources文件夹里面的install.wim文件（按大小排序按后最大的那个）</li><li>引导磁盘的位置—-选择C（最好自己去看看自己电脑现在在PE下的盘符，看一下你那个系统盘分区的盘符叫什么这里就选什么）</li><li>安装磁盘的位置—-选择C（最好自己去看看自己电脑现在在PE下的盘符，看一下你那个系统盘分区的盘符叫什么这里就选什么）</li><li>然后点击<strong>开始安装</strong></li><li>如有对话框，则选择<strong>自动重新启动</strong>（对win10版本好像没用，需要手动重启）。<strong>不选保留原来的windows版本</strong></li><li>确定</li><li>等待进度条完成<br><img src="http://upload-images.jianshu.io/upload_images/1519926-fd7c469584c62768.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/620" alt="windows安装器 "></li></ul><p>简书：<a href="http://www.jianshu.com/p/163b64432e97">http://www.jianshu.com/p/163b64432e97</a><br>CSDN：<a href="http://blog.csdn.net/ZuoWeiXiaoDuZuoZuo/article/details/78958115">http://blog.csdn.net/ZuoWeiXiaoDuZuoZuo/article/details/78958115</a></p><h4 id="完"><a href="#完" class="headerlink" title="完"></a>完</h4>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS7.2配置LNMP环境记录</title>
      <link href="/2017/12/31/centos7-pei-zhi-lnmp-huan-jing-ji-lu/"/>
      <url>/2017/12/31/centos7-pei-zhi-lnmp-huan-jing-ji-lu/</url>
      
        <content type="html"><![CDATA[<h2 id="CentOS7-2配置LNMP环境记录"><a href="#CentOS7-2配置LNMP环境记录" class="headerlink" title="CentOS7.2配置LNMP环境记录"></a>CentOS7.2配置LNMP环境记录</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php 7.0+ nginx 1.10+ mysql 5.5+</span><br></pre></td></tr></table></figure><p>LNMP是Linux、Nginx、MySQL(MariaDB)和PHP的缩写，这个组合是最常见的WEB服务器的运行环境之一。本文将带领大家在CentOS 7操作系统上搭建一套LNMP环境。</p><p>本教程适用于<strong>CentOS 7.x</strong>版本。</p><span id="more"></span><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><h4 id="更新-yum-源-自带的源没有-PHP7"><a href="#更新-yum-源-自带的源没有-PHP7" class="headerlink" title="更新 yum 源,自带的源没有 PHP7:"></a>更新 yum 源,自带的源没有 PHP7:</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm</span><br></pre></td></tr></table></figure><h4 id="安装-epel"><a href="#安装-epel" class="headerlink" title="安装 epel:"></a>安装 epel:</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install epel-release</span><br></pre></td></tr></table></figure><h4 id="升级系统"><a href="#升级系统" class="headerlink" title="升级系统"></a>升级系统</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum update</span><br></pre></td></tr></table></figure><p><strong>准备工作完成,开始安装!</strong></p><h3 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h3><p>CentOS系统模板中配置了内网源，下载速度较快，推荐使用yum安装Nginx：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install nginx</span><br></pre></td></tr></table></figure><p>按照提示，输入yes后开始安装。安装完毕后，Nginx的配置文件在/etc/nginx目录下。使用以下命令启动Nginx：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start nginx</span><br></pre></td></tr></table></figure><p>检查系统中firewalld防火墙服务是否开启，如果已<strong>开启</strong>，我们需要<strong>修改</strong>防火墙配置，开启Nginx外网端口访问。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl status firewalld</span><br></pre></td></tr></table></figure><p>如果显示**active (running)**，则需要调整防火墙规则的配置。</p><p>修改/etc/firewalld/zones/public.xml文件，在zone一节中增加：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;zone&gt;</span><br><span class="line">    ...</span><br><span class="line">    &lt;service name=&quot;nginx&quot;/&gt;</span><br><span class="line">&lt;zone&gt;</span><br></pre></td></tr></table></figure><p>保存后重新加载firewalld服务：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart firewalld</span><br></pre></td></tr></table></figure><p>您可以通过浏览器访问 <strong>http://外网IP地址</strong> 来确定Nginx是否已经启动。</p><h4 id="【注意：很重要！！！】"><a href="#【注意：很重要！！！】" class="headerlink" title="【注意：很重要！！！】"></a>【<strong>注意：很重要！！！</strong>】</h4><p>部分童鞋发现按照教程操作最后无法访问，这是云服务器默认关闭了80端口。这个请移步云服务里控制台打开80端口的外网访问，如需步骤，请自行百度！</p><p>最后将Nginx设置为开机启动：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl enable nginx.service</span><br></pre></td></tr></table></figure><p>这么Nginx就安装成功了！</p><h3 id="安装MySQL-MariaDB"><a href="#安装MySQL-MariaDB" class="headerlink" title="安装MySQL(MariaDB)"></a>安装MySQL(MariaDB)</h3><p>MariaDB是MySQL的一个分支，主要由开源社区进行维护和升级，而MySQL被Oracle收购以后，发展较慢。在CentOS 7的软件仓库中，将MySQL更替为了MariaDB。</p><p>我们可以使用yum直接安装MariaDB：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install mariadb-server</span><br></pre></td></tr></table></figure><p>安装完成之后，执行以下命令重启MariaDB服务：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart mariadb</span><br></pre></td></tr></table></figure><p>MariaDB默认root密码为空，我们需要设置一下，执行脚本：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /usr/bin/mysql_secure_installation</span><br></pre></td></tr></table></figure><p><strong>这个脚本会经过一些列的交互问答来进行MariaDB的安全设置。</strong></p><p>首先提示输入当前的root密码：</p><ul><li>Enter current password for root (enter for none):</li><li><em>初始root密码为空，我们直接敲回车进行下一步。</em>*</li><li>Set root password? [Y/n]</li><li><em>设置root密码，默认选项为Yes，我们直接回车，提示输入密码，在这里设置您的MariaDB的root账户密码。</em>*</li><li>Remove anonymous users? [Y/n] <strong>是否移除匿名用户，默认选项为Yes，建议按默认设置，回车继续。</strong></li><li>Disallow root login remotely? [Y/n] </li><li><em>是否禁止root用户远程登录？如果您只在本机内访问MariaDB，建议按默认设置，回车继续。 如果您还有其他云主机需要使用root账号访问该数据库，则需要选择n。</em>*</li><li>Remove test database and access to it? [Y/n] <strong>是否删除测试用的数据库和权限？<br>建议按照默认设置，回车继续。</strong></li><li>Reload privilege tables now? [Y/n]</li><li><em>是否重新加载权限表？因为我们上面更新了root的密码，这里需要重新加载，回车。</em>*</li></ul><p>完成后你会看到Success!的提示，MariaDB的安全设置已经完成。我们可以使用以下命令登录MariaDB：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p</span><br></pre></td></tr></table></figure><p>按提示输入root密码，就会进入MariaDB的交互界面，说明已经安装成功。</p><p>最后我们将MariaDB设置为开机启动。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl enable mariadb</span><br></pre></td></tr></table></figure><p>php70w</p><h3 id="安装PHP"><a href="#安装PHP" class="headerlink" title="安装PHP"></a>安装PHP</h3><p>我们可以直接使用yum安装PHP：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install php70w-fpm php70w-mysql php70w-mysqli php70w php70w-opcache php70w-gd php70w-intl php70w-mbstring php70w-exif php70w-mcrypt php70w-openssl</span><br><span class="line"></span><br><span class="line">//把该安装的一次性装到位</span><br></pre></td></tr></table></figure><p>安装完成后我们将php-fpm启动：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start php-fpm</span><br></pre></td></tr></table></figure><p>将php-fpm设置为开机启动：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl enable php-fpm</span><br></pre></td></tr></table></figure><h2 id="接下来需要注意了！配置Nginx–多个站点"><a href="#接下来需要注意了！配置Nginx–多个站点" class="headerlink" title="接下来需要注意了！配置Nginx–多个站点"></a>接下来需要注意了！配置Nginx–多个站点</h2><p>我给大家提供一个范本作为参考：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nginx.conf</span><br><span class="line">//里面我会详细的给予中文注释</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/nginx/nginx.conf</span><br><span class="line">//编辑nginx.conf的命令</span><br></pre></td></tr></table></figure><p>以下为conf文件内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"># For more information on configuration, see:</span><br><span class="line">#   * Official English Documentation: http://nginx.org/en/docs/</span><br><span class="line">#   * Official Russian Documentation: http://nginx.org/ru/docs/</span><br><span class="line"></span><br><span class="line">user nginx;</span><br><span class="line">worker_processes auto;</span><br><span class="line">error_log /var/log/nginx/error.log; #错误日志记录的位置</span><br><span class="line">pid /run/nginx.pid; #nginx.pid为记录nginx主进程pid文件；切勿修改、移动</span><br><span class="line"># Load dynamic modules. See /usr/share/nginx/README.dynamic.</span><br><span class="line">include /usr/share/nginx/modules/*.conf;</span><br><span class="line">#引入/usr/share/nginx/modules/ 目录下的所有以.conf结尾的文件</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections 1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    log_format  main  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span><br><span class="line">                      &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span><br><span class="line">                      &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;</span><br><span class="line"></span><br><span class="line">    access_log  /var/log/nginx/access.log  main;</span><br><span class="line"></span><br><span class="line">    sendfile            on;</span><br><span class="line">    tcp_nopush          on;</span><br><span class="line">    tcp_nodelay         on;</span><br><span class="line">    keepalive_timeout   65;</span><br><span class="line">    types_hash_max_size 2048;</span><br><span class="line"></span><br><span class="line">    include             /etc/nginx/mime.types;</span><br><span class="line">    default_type        application/octet-stream;</span><br><span class="line"></span><br><span class="line">    # Load modular configuration files from the /etc/nginx/conf.d directory.</span><br><span class="line">    # See http://nginx.org/en/docs/ngx_core_module.html#include</span><br><span class="line">    # for more information.</span><br><span class="line">    include /etc/nginx/conf.d/*.conf;</span><br><span class="line">    #这句很重要，引入所有etc/nginx/conf.d/目录下的.conf文件</span><br><span class="line">    </span><br><span class="line">    #***etc/nginx/conf.d/目录存放的就是分站点的文件（下面会给出实例代码）***</span><br><span class="line">    </span><br><span class="line">    server &#123;</span><br><span class="line">        #由于我们的nginx需要配置多站点，所以在此就需要注释一些东西</span><br><span class="line">        </span><br><span class="line">         listen       80 default_server;</span><br><span class="line">         listen       [::]:80 default_server;</span><br><span class="line">        #保留监听的端口  </span><br><span class="line">        # server_name  _;</span><br><span class="line">        # root         /usr/share/nginx/php;</span><br><span class="line"></span><br><span class="line">        # Load configuration files for the default server block.</span><br><span class="line">        # include /etc/nginx/default.d/*.conf;</span><br><span class="line"></span><br><span class="line">        # location / &#123;</span><br><span class="line">        # &#125;</span><br><span class="line"></span><br><span class="line">        # error_page 404 /404.html;</span><br><span class="line">            location = /40x.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        error_page 500 502 503 504 /50x.html;</span><br><span class="line">            location = /50x.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line">        # location ~ \.php$ &#123;</span><br><span class="line">        # root           /usr/share/php;</span><br><span class="line">        # fastcgi_pass   127.0.0.1:9000;</span><br><span class="line">        # fastcgi_index  index.php;</span><br><span class="line">        # fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;</span><br><span class="line">        # include        fastcgi_params;</span><br><span class="line">        # &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"># Settings for a TLS enabled server.</span><br><span class="line">#</span><br><span class="line">#    server &#123;</span><br><span class="line">#        listen       443 ssl http2 default_server;</span><br><span class="line">#        listen       [::]:443 ssl http2 default_server;</span><br><span class="line">#        server_name  _;</span><br><span class="line">#        root         /usr/share/nginx/html;</span><br><span class="line">#</span><br><span class="line">#        ssl_certificate &quot;/etc/pki/nginx/server.crt&quot;;</span><br><span class="line">#        ssl_certificate_key &quot;/etc/pki/nginx/private/server.key&quot;;</span><br><span class="line">#        ssl_session_cache shared:SSL:1m;</span><br><span class="line">#        ssl_session_timeout  10m;</span><br><span class="line">#        ssl_ciphers HIGH:!aNULL:!MD5;</span><br><span class="line">#        ssl_prefer_server_ciphers on;</span><br><span class="line">#</span><br><span class="line">#        # Load configuration files for the default server block.</span><br><span class="line">#        include /etc/nginx/default.d/*.conf;</span><br><span class="line">#</span><br><span class="line">#        location / &#123;</span><br><span class="line">#        &#125;</span><br><span class="line">#</span><br><span class="line">#        error_page 404 /404.html;</span><br><span class="line">#            location = /40x.html &#123;</span><br><span class="line">#        &#125;</span><br><span class="line">#</span><br><span class="line">#        error_page 500 502 503 504 /50x.html;</span><br><span class="line">#            location = /50x.html &#123;</span><br><span class="line">#        &#125;</span><br><span class="line">#    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#注意：此份nginx.conf可以直接复制了去使用！~好用了就给博主打个赏钱！谢谢！</span><br></pre></td></tr></table></figure><p>配置完nginx之后我们该干啥、？当然是重启nginx呗</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart nginx     #重启nginx</span><br></pre></td></tr></table></figure><p>重启完毕，继续打开 <strong>http://外网IP地址</strong> 来确定Nginx是否已经启动。</p><p>此时，服务器启动的是nginx和apache。</p><p>而且php-fpm默认发送到apache。</p><p>所以咱们还得继续修改一下php-fpm。</p><h3 id="配置-php-fpm"><a href="#配置-php-fpm" class="headerlink" title="配置 php-fpm"></a>配置 php-fpm</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/php-fpm.d/www.conf    </span><br><span class="line"></span><br><span class="line">#编辑php-fpm配置文件</span><br></pre></td></tr></table></figure><p>修改user和group （源代码为：user = apache group = apache）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">user = nginx    </span><br><span class="line">group = nginx</span><br></pre></td></tr></table></figure><p>修改完了之后，还是老样子，重启php-fpm服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart php-fpm    #重启php-fpm</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="最后，咱们需要为nginx添加站点了"><a href="#最后，咱们需要为nginx添加站点了" class="headerlink" title="最后，咱们需要为nginx添加站点了"></a>最后，咱们需要为nginx添加站点了</h3><p>添加站点这我先给大家一个截图，以帮助大家迅速的了解是怎么回事</p><p><img src="http://upload-images.jianshu.io/upload_images/1519926-b88cdd9942a123e7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/640" alt="image1.png"></p><p>大家应该看的很清楚了，猜都可以猜到，博主这一共配置了三个站点，这三个站点是怎么被nginx引入的呢？</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">我给大家贴出nginx的配置文件的里面应该有这么一句(注意图中的红框，上面的是地址)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">include /etc/nginx/conf.d/*.conf;</span><br><span class="line">#这句很重要，引入所有etc/nginx/conf.d/目录下的.conf文件</span><br><span class="line">#***etc/nginx/conf.d/目录存放的就是分站点的文件（下面会给出实例代码）***</span><br></pre></td></tr></table></figure><p>好的，大家应该能准确理解了，如果还是理解不了的话只能缺你回去喝点<strong>三鹿</strong>了！</p><h4 id="下面我给大家贴出nginx站点配置文件的代码，修改修改就可以用"><a href="#下面我给大家贴出nginx站点配置文件的代码，修改修改就可以用" class="headerlink" title="下面我给大家贴出nginx站点配置文件的代码，修改修改就可以用"></a><strong>下面我给大家贴出nginx站点配置文件的代码，修改修改就可以用</strong></h4><p><strong>看代码的时候请注意看里面的路径，当然我也还是会给一定的中文注释</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">#这个文件是上面的qopmall.com.conf</span><br><span class="line">server &#123;</span><br><span class="line"></span><br><span class="line">    server_name  qopmall.com www.qopmall.com;#这里就是你要绑定的域名了，空格分开</span><br><span class="line">    location / &#123;</span><br><span class="line">            root   /usr/share/php/weixin; #这里是你站点存放的文件夹名称（也就是说，你当前这个站点的文件全部都丢在这个路径的weixin文件夹里面）</span><br><span class="line">            index  index.php index.html index.htm; #这里照抄即可</span><br><span class="line">        &#125;</span><br><span class="line">    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span><br><span class="line">    #</span><br><span class="line">    location ~ \.php$ &#123;</span><br><span class="line">        root           /usr/share/php/weixin; #这里的配置等同于上面的那个root配置</span><br><span class="line">        fastcgi_pass   127.0.0.1:9000;</span><br><span class="line">        fastcgi_index  index.php;</span><br><span class="line">        fastcgi_param  SCRIPT_FILENAME  /usr/share/php/weixin/$fastcgi_script_name; #这里的配置也是和上面的root配置一样</span><br><span class="line">        include        fastcgi_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码非常简单，我没注释到的不用修改就行。</p><p>上面的路径，比如/usr/share/php/weixin 这就是你站点的根目录，我给大家截图参考：<br><img src="http://upload-images.jianshu.io/upload_images/1519926-a90417f1d70827b6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/640" alt="image2.png"></p><p>各位童鞋，创建好站点了，先写个简单的php程序测试一下是否正常，比如info。</p><h3 id="完"><a href="#完" class="headerlink" title="完"></a>完</h3>]]></content>
      
      
      
        <tags>
            
            <tag> 转载 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iOS 如何加载本地html文件</title>
      <link href="/2017/12/18/ios-ru-he-jia-zai-ben-di-html-wen-jian/"/>
      <url>/2017/12/18/ios-ru-he-jia-zai-ben-di-html-wen-jian/</url>
      
        <content type="html"><![CDATA[<p>iOS 如何加载本地html文件???? 其实很简单</p> <span id="more"></span><p>如下图所示</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-(void)loadLocalHtml&#123;</span><br><span class="line">    NSURL *url = [[NSBundle mainBundle] URLForResource:@&quot;/sfa/html/index.html&quot; withExtension:nil];</span><br><span class="line">    [self.webView loadRequest:[NSURLRequest requestWithURL:url]];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@&quot;/sfa/html/index.html&quot;  </span><br></pre></td></tr></table></figure><p>部分是你的html文件相对于整个工程的路径<br>例如下面这个工程构成图：</p><p><img src="http://upload-images.jianshu.io/upload_images/1519926-262d457e31fc08dc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/640" alt="项目路径图"></p><p><img src="http://upload-images.jianshu.io/upload_images/1519926-9914662d64428579.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/640" alt="工程结构图"></p><p>相关文件最好以文件方式导入而不是group</p><p><img src="http://upload-images.jianshu.io/upload_images/1519926-e0654629032caa43.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/640" alt="导入文件夹方式"></p><p>CSDN: <a href="http://blog.csdn.net/zuoweixiaoduzuozuo/article/details/78834282">iOS 如何加载本地html文件</a></p><p>简书: <a href="http://www.jianshu.com/p/c82a8955a632">iOS 如何加载本地html文件</a></p>]]></content>
      
      
      <categories>
          
          <category> iOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>通过assetURL获取到视频</title>
      <link href="/2017/12/14/ios-use-asseturl-get-vedio/"/>
      <url>/2017/12/14/ios-use-asseturl-get-vedio/</url>
      
        <content type="html"><![CDATA[<p>首先导入头文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#import &lt;Photos/Photos.h&gt;</span><br></pre></td></tr></table></figure><p>iOS中assetURL样式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">assets-library://asset/asset.mov?id=F2E6E143-4343-4B57-87F9-346936E0EDB3&amp;ext=mov</span><br></pre></td></tr></table></figure><span id="more"></span><p>使用当前的URL过滤到我们想要的数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">PHFetchResult *result = [PHAsset fetchAssetsWithALAssetURLs:@[assetUrl] options:nil];</span><br><span class="line"></span><br><span class="line">   PHAsset * PHAsset = result.firstObject;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   /// 包含该视频的基础信息</span><br><span class="line">   PHAssetResource * resource = [[PHAssetResource assetResourcesForAsset: PHAsset] firstObject];</span><br><span class="line"></span><br><span class="line">   NSLog(@&quot;%@&quot;,resource);</span><br><span class="line">   /*</span><br><span class="line">    type:</span><br><span class="line">    originalFilename:</span><br><span class="line">    */</span><br><span class="line"></span><br><span class="line">   PHImageRequestOptions * options = [[PHImageRequestOptions alloc] init];</span><br><span class="line"></span><br><span class="line">   options.version = PHImageRequestOptionsVersionCurrent;</span><br><span class="line"></span><br><span class="line">   options.deliveryMode = PHImageRequestOptionsDeliveryModeHighQualityFormat;</span><br><span class="line"></span><br><span class="line">   options.synchronous = YES;</span><br><span class="line"></span><br><span class="line">   __block NSData *videoData = nil;</span><br><span class="line"></span><br><span class="line">   [[PHImageManager defaultManager] requestImageDataForAsset: PHAsset</span><br><span class="line">                                                     options: options</span><br><span class="line">                                               resultHandler: ^(NSData * imageData, NSString * dataUTI, UIImageOrientation orientation, NSDictionary * info) &#123;</span><br><span class="line">                                                   NSLog(@&quot;%@&quot;,imageData);</span><br><span class="line">                                                       //这里的imageData就是视频数据;</span><br><span class="line">   &#125;];</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> iOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iOS--如何计算出今天是周几</title>
      <link href="/2017/08/23/ios-ru-he-ji-suan-chu-jin-tian-shi-zhou-ji/"/>
      <url>/2017/08/23/ios-ru-he-ji-suan-chu-jin-tian-shi-zhou-ji/</url>
      
        <content type="html"><![CDATA[<p>iOS–如何计算出今天是周几？？ 很简单：</p> <span id="more"></span><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">NSCalendar *cal = [[NSCalendar alloc] initWithCalendarIdentifier:NSCalendarIdentifierRepublicOfChina];</span><br><span class="line"></span><br><span class="line">NSInteger comp = [cal component:NSCalendarUnitWeekday fromDate:[NSDate date]];</span><br><span class="line"></span><br><span class="line">NSLog(@&quot;%ld&quot;,comp);</span><br><span class="line"></span><br><span class="line">NSDateComponents *comps = [cal components:NSCalendarUnitWeekday fromDate:[NSDate date]];</span><br><span class="line"></span><br><span class="line">NSLog(@&quot;%@&quot;,comps);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> iOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows--电脑U盘启动盘制作</title>
      <link href="/2017/08/19/windows-make-pe-boot-usb-disk/"/>
      <url>/2017/08/19/windows-make-pe-boot-usb-disk/</url>
      
        <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>本文是博主鉴于当前任然后很大一部分电脑玩家经常为不会给爱机装系统而创作，本博主是一个精通电脑硬件性能以及软件使用的IT人士。</p><p>Windows的启动盘分为两类:(随便选择<strong>一种</strong>方法制作就OK了)</p> <span id="more"></span><ul><li><strong>普通BIOS启动的PE类</strong></li><li><strong>UEFI启动的EFI类</strong></li></ul><p>无论是哪一类大家都不用担心，都有相对应的傻瓜式软件来帮我们完成，我们需要做的就是一下：</p><ul><li>找一个U盘，最好是空的（因为无论是哪一种制作方式都可能会格式化这个U盘）</li><li>U盘的大小最好是8GB左右的（第一种的方式大小无所谓，主要是第二种的方式会占用大量空间）</li><li>一台能联网的电脑（这个么有难度吧）</li></ul><h3 id="普通BIOS启动的PE类"><a href="#普通BIOS启动的PE类" class="headerlink" title="普通BIOS启动的PE类"></a>普通BIOS启动的PE类</h3><p>以下将简单介绍如何给Windows电脑制作一个<strong>普通BIOS启动的PE类</strong>U盘启动盘</p><h4 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h4><p><strong>下载U盘启动盘制作工具</strong><br>可以选的种类有很多个：老毛桃，U深度，大白菜，电脑店。。。。下面介绍的是<strong>电脑店</strong>。</p><p>下载地址：<strong><a href="http://u.diannaodian.com/down">http://u.diannaodian.com/down</a></strong></p><p>进入如图页面：</p><p><img src="http://upload-images.jianshu.io/upload_images/1519926-71b4b684156f678d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/500" alt="QQ截图20170819233452.png"></p><p>点击<strong>下载</strong>：</p><p><img src="http://upload-images.jianshu.io/upload_images/1519926-9691074f0f79ca5b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/500" alt="QQ截图20170819231746.png"></p><p>推荐点击<strong>本地下载</strong>：</p><p><img src="http://upload-images.jianshu.io/upload_images/1519926-27efd7a6db8359e7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/500" alt="QQ截图20170819231817.png"></p><p>然后就是等待下载完毕。。。。。。</p><p>在这个时候我们就可以开始对U盘做一些操作了(如果你的U盘不是空的话，如果里面没有东西，这一步可以跳过)，把U盘里面的所有东西都挪到电脑上（除了C盘的任何位置，只要你找的到就行）。</p><p>OK下载完了，开始安装：<br>这个软件的安装很简单，就是单纯的吧这个下载的ZIP文件解压而已：我解压到了我的软件盘，盘符为D，如下图：</p><p><img src="http://upload-images.jianshu.io/upload_images/1519926-fd38b862f7230552.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/500" alt="QQ截图20170819232452.png"></p><p>然后就是插上U盘，这时软件上面的U盘选择项就会出现你的U盘名称：</p><p>然后选择启动模式：（个人建议不要动保持<strong>USB-HDD</strong>模式）</p><p>然后选择U盘格式：（个人建议<strong>NTFS</strong>，因为<strong>Fat32</strong>有着文件大小的限制，单个文件的大小不得超过<strong>4GB</strong>）</p><p><img src="http://upload-images.jianshu.io/upload_images/1519926-06fbdf583167f922.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/500" alt="QQ截图20170819232534.png"></p><p>都选择完了之后，那就点一下鼠标，点击<strong>全新制作</strong>：<br>接下来就是等了。。。等。。。<br>应该会很快<br>完成之后：点击<strong>模拟启动</strong>，选择<strong>BIOS</strong></p><p><img src="http://upload-images.jianshu.io/upload_images/1519926-6075ee1c3335548a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/500" alt="QQ图片20170819233059.png"></p><p>至此，U盘启动盘已经制作完成。</p><h3 id="UEFI启动的EFI类"><a href="#UEFI启动的EFI类" class="headerlink" title="UEFI启动的EFI类"></a>UEFI启动的EFI类</h3><h4 id="准备工作-1"><a href="#准备工作-1" class="headerlink" title="准备工作"></a>准备工作</h4><p>下载<strong>软碟通</strong></p><p>百度就有：</p><p><img src="http://upload-images.jianshu.io/upload_images/1519926-8154c6f201b5b365.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/500" alt="QQ截图20170819234217.png"></p><p>安装：</p><p><img src="http://upload-images.jianshu.io/upload_images/1519926-0c502c9d714f8a0a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/500" alt="QQ截图20170819234300.png"></p><ul><li>接受协议，下一步。。。</li><li>注意改一下安装路径：（建议不要装在C盘，我的是在D盘）</li><li>一直下一步，知道结束</li></ul><p> 启动 选择<strong>继续试用</strong>：</p><p> <img src="http://upload-images.jianshu.io/upload_images/1519926-b1e53763dbca94b9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/500" alt="QQ截图20170819234411.png"></p><p> 选择上方工具栏的<strong>文件</strong>–<strong>打开</strong>：（选择你的系统镜像）</p><p><img src="http://upload-images.jianshu.io/upload_images/1519926-f40716ebcc930545.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/500" alt="Uploading QQ截图20170819234614_259660.png."></p><p><img src="http://upload-images.jianshu.io/upload_images/1519926-994c67f773e5413b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/500" alt="QQ截图20170819234614.png"></p><p> 然后如图：</p><p><img src="http://upload-images.jianshu.io/upload_images/1519926-a605ae6618f9c97a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/500" alt="QQ截图20170819234634.png"></p><p> 选择<strong>工具</strong>–<strong>写入磁盘镜像</strong>，插入U盘</p><p><img src="http://upload-images.jianshu.io/upload_images/1519926-59fb248b266fce9c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/500" alt="QQ截图20170819234654.png"></p><p> 点击<strong>写入</strong>：（没有合适的U盘 所以我这里是不能点的）</p><p><img src="http://upload-images.jianshu.io/upload_images/1519926-23dd964d7170ab3e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/500" alt="QQ截图20170819234711.png"></p><h5 id="注意本类U盘启动盘只能以UEFI模式启动"><a href="#注意本类U盘启动盘只能以UEFI模式启动" class="headerlink" title="注意本类U盘启动盘只能以UEFI模式启动"></a><strong>注意本类U盘启动盘只能以UEFI模式启动</strong></h5><p> 请设置自己电脑的相关BIOS设置</p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>斐讯K2刷华硕固件</title>
      <link href="/2017/08/18/fei-xun-k2-shua-hua-shuo-gu-jian/"/>
      <url>/2017/08/18/fei-xun-k2-shua-hua-shuo-gu-jian/</url>
      
        <content type="html"><![CDATA[<h3 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a><strong>写在前面</strong></h3><p>斐讯K2是一款处于1200Mbps(300+867Mbps)无线速率段的双频802.11ac路由器，2.4G+5G双频并发，PA+LNA强强组合，智能管理轻松控制，斐讯K2完美诠释了“家再大，隔墙再多，WiFi信号不受阻隔”的上网体验。斐讯K2路由器可以在京东免费撸，很多朋友撸回家发现固件太垃圾，各种不好用，因此想把斐讯K2刷成华硕固件。 </p>  <span id="more"></span><p> <a href="http://detail.zol.com.cn/wireless_router/index1140233.shtml">中关村斐讯K2</a>  </p><h4 id="重要说明"><a href="#重要说明" class="headerlink" title="重要说明"></a><strong>重要说明</strong></h4><p> 据说，这种方法支持斐讯K2的固件版本为：<br> 22.3.15.128<br> 22.3.15.232<br> 22.3.17.148<br> 22.4.2.8<br> 22.4.2.9<br> 如果目前你的斐讯K2路由器的固件版本高于或者低于这几个版本，可以进行升级或者降级操作，然后按照。下面我会提供相关文件的下载地址，方便大家下载后进行升级和降级操作。<br>点击 <a href="https://pan.baidu.com/s/1gfssXUz">百度网盘</a><br>或者复制链接: <a href="https://pan.baidu.com/s/1gfssXUz">https://pan.baidu.com/s/1gfssXUz</a> 密码: qdke </p><h4 id="第一步：——自带固件降级—–"><a href="#第一步：——自带固件降级—–" class="headerlink" title="第一步：——自带固件降级—–"></a><strong>第一步：——自带固件降级—–</strong></h4><p>降级分为两个版本，一个是老版本22.5.9，另外一个是22.5.11，因为在.11版本降级会出现提示，非法固件而不允许刷机，那么我们就是用另外一种方法来进行刷机</p><h5 id="首先22-5-9版本降级"><a href="#首先22-5-9版本降级" class="headerlink" title="首先22.5.9版本降级"></a><strong>首先22.5.9版本降级</strong></h5><h6 id="第1步"><a href="#第1步" class="headerlink" title="第1步"></a><strong>第1步</strong></h6><p>a、进入系统设置，找到手动升级，选择k2_163_v11_breed.bin ，然后升级</p><h6 id="第2步"><a href="#第2步" class="headerlink" title="第2步"></a><strong>第2步</strong></h6><p>a、升级完成后，断开路由器电源。<br> b、按住复位键，插上电源，等待7秒钟后松开复位键。<br> <img src="http://upload-images.jianshu.io/upload_images/1519926-adcaac92e341f4d5?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=" "> </p><h6 id="第3步"><a href="#第3步" class="headerlink" title="第3步"></a><strong>第3步</strong></h6><p> a、进入breed  web设置页面<br> <img src="http://upload-images.jianshu.io/upload_images/1519926-c8700e58b3691f38?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=" "> </p><h5 id="22-5-11版本降级"><a href="#22-5-11版本降级" class="headerlink" title="22.5.11版本降级"></a><strong>22.5.11版本降级</strong></h5><h6 id="第1步-1"><a href="#第1步-1" class="headerlink" title="第1步"></a>第1步</h6><p>1、安装Firefox浏览器。</p><p>2、用网线连接电脑和路由器的Lan口（WAN口无所谓，联不联网无所谓），K1、K2默认登录密码修改为admin。</p><h6 id="第2步、开启telnet工作"><a href="#第2步、开启telnet工作" class="headerlink" title="第2步、开启telnet工作"></a>第2步、开启telnet工作</h6><p>1、打开Firefox浏览器登陆斐讯路由器，选择右上角的“定时重启路由器”，如图。<br><img src="http://img.blog.csdn.net/20170529234357673?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvWnVvV2VpWGlhb0R1WnVvWnVv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast"></p><p>2、点击指定重启时间，将鼠标箭头放到05上，右键选择“查看元素”。注意一定要放在05上；</p><p><img src="http://upload-images.jianshu.io/upload_images/1519926-f5ca30c7d63b9711.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="201701121108234370.png"></p><p>3、在查看器中将鼠标移到”05”上（找不到05的话刷新一下网页），点击鼠标右键，选择“编程HTML”。</p><p><img src="http://upload-images.jianshu.io/upload_images/1519926-428f46a0f8cc1247.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="201701121108442103.png"><br>4、将”05”改成”01:00 | telnetd -l /bin/login.sh”（复制粘贴即可），然后鼠标移动到黑框之外的空白处点击鼠标左键，就可以完成编辑了。</p><p><img src="http://upload-images.jianshu.io/upload_images/1519926-57ad3cd930ff5ed5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="201701121109202138.png"><br>5、在定时重启路由器页面上选择05之后（注意现在回变成1：00…..），点击“保存”。</p><p><img src="http://upload-images.jianshu.io/upload_images/1519926-7ccb2dbe0e4e54f1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="201701121109271335.png"><br>那么现在就完成了开启K2路由器telnet服务的工作。<br>6、下载目录内breed Web助手（3.4版本）–&gt;关闭防火墙，退出杀毒软件–&gt;找到这个文件“路由器刷breed Web助手通用版v3.0”–&gt;右键以管理员身份运行</p><p>7、如图刷机方案选择：”通用方案[需要开启路由器telnet或ssh]”，然后点击开始刷机；</p><p><img src="http://upload-images.jianshu.io/upload_images/1519926-fb631c4b473eebaf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="201701121109327806.png"></p><p>8、完成后这样就完成了斐讯路由器刷入不死Breed。</p><h4 id="第二步："><a href="#第二步：" class="headerlink" title="第二步："></a><strong>第二步：</strong></h4><p> a、进入breed界面<br> b、在菜单固件更新中，选择文件哪一行，选择SW_K2_703004657_V22.4.2.8.bin  固件<br> c、等待上传完成<br>  <img src="http://upload-images.jianshu.io/upload_images/1519926-c15336ce2d618569?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=" "><br> <img src="http://upload-images.jianshu.io/upload_images/1519926-6ab7f4e6b5d591f6?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=" "><br> e、请等待升级完成，自动重启后。然后按住复位键7秒，等待重启后。 到此你的路由器固件成功降级到了22.4.2.8<br>  <img src="http://upload-images.jianshu.io/upload_images/1519926-1c39571d88b56311?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=" "><br> f、注意右下角的固件版本号<br> <img src="http://upload-images.jianshu.io/upload_images/1519926-f7133a856faec4c6?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=" "></p><h4 id="——刷入华硕固件—–"><a href="#——刷入华硕固件—–" class="headerlink" title="——刷入华硕固件—–"></a><strong>——刷入华硕固件—–</strong></h4><h6 id="第1步–刷入breed和ssh"><a href="#第1步–刷入breed和ssh" class="headerlink" title="第1步–刷入breed和ssh"></a><strong>第1步–刷入breed和ssh</strong></h6><p> a、点击“高级设置”——&gt;“备份恢复”——&gt;“浏览”找到刚才下载的：tianbaoha_breed_ssh.dat文件——&gt;“恢复备份”。<br> <img src="http://upload-images.jianshu.io/upload_images/1519926-d7b6ef7fdb6ccbaa?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=" "><br> b、路由器会自动重启，等待重启完成<br> <img src="http://upload-images.jianshu.io/upload_images/1519926-198ca9095384795a?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="给斐讯K2刷入breed和ssh"><br><img src="http://upload-images.jianshu.io/upload_images/1519926-4e3e8fc7625106d8?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=" "><br>c、验证 斐讯K2重启完成后，重新在浏览器中输入p.to或者192.168.2.1，打开登录界面，<strong>管理密码用：tianbaoha</strong> 。如果可以登录到设置界面，说明breed和ssh已经刷入成功。</p><h6 id="第2步-1"><a href="#第2步-1" class="headerlink" title="第2步"></a><strong>第2步</strong></h6><p>a、<strong>管理密码用：tianbaoha</strong> 登录到K2的设置界面后，点击“高级设置”——&gt;“系统设置”——&gt;“手动升级”——&gt;点击 下载备份EEPROM，如下图所示。<br><img src="http://upload-images.jianshu.io/upload_images/1519926-e3ceda4f07d50ffe?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=" "></p><h6 id="第3步–刷写华硕固件"><a href="#第3步–刷写华硕固件" class="headerlink" title="第3步–刷写华硕固件"></a><strong>第3步–刷写华硕固件</strong></h6><p>**登录地址：192.168.123.1 **<br>**管理账号：admin/admin **<br>默认wifi密码：1234567890<br> a、点击“高级设置”——&gt;“系统设置”——&gt;“手动升级”——&gt;点击“浏览”，找到刚才下载的华硕固件:RT-AC54U-GPIO-1-PSG1208-64M_3.4.3.9-099.trx<br> <img src="http://upload-images.jianshu.io/upload_images/1519926-98e30139ff355132?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=" "><br> b、点击“升级”。<br> <img src="http://upload-images.jianshu.io/upload_images/1519926-9a6a9e5a20785f19?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=" "></p><h6 id="第4步"><a href="#第4步" class="headerlink" title="第4步"></a><strong>第4步</strong></h6><p> a、等待路由器重启。<br> b、在浏览器中输入：<strong>192.168.123.1 <strong>打开登录界面——&gt;用户名和密码用：</strong>admin/admin</strong>，登录到界面了<br> <img src="http://upload-images.jianshu.io/upload_images/1519926-b17e987be3d80386?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=" "> <img src="http://upload-images.jianshu.io/upload_images/1519926-47c4cd81cb6ea35e?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=" ">  </p><h5 id="结束"><a href="#结束" class="headerlink" title="结束"></a><strong>结束</strong></h5>]]></content>
      
      
      
        <tags>
            
            <tag> 原创 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iOS自定义相机的实现</title>
      <link href="/2017/08/18/ios-zi-ding-yi-xiang-ji-de-shi-xian/"/>
      <url>/2017/08/18/ios-zi-ding-yi-xiang-ji-de-shi-xian/</url>
      
        <content type="html"><![CDATA[<h3 id="iOS自定义相机的实现"><a href="#iOS自定义相机的实现" class="headerlink" title="iOS自定义相机的实现"></a>iOS自定义相机的实现</h3><p>本文主要介绍iOS系统上的自定义相机的实现，其实并不难主要包含了，拍摄设备，输入端，输出端，以及抓取图像，保存图像的操作。</p> <span id="more"></span><p>###简单介绍组要控件</p><ul><li>上方功能区<ul><li>取消按钮</li><li>闪光灯按钮</li><li>相机切换按钮</li></ul></li><li>下方功能区<ul><li>拍照按钮</li><li>重新拍照按钮</li><li>选择照片按钮</li></ul></li><li>图像展示视图</li></ul><h4 id="主要代码展示"><a href="#主要代码展示" class="headerlink" title="主要代码展示"></a>主要代码展示</h4><h5 id="头文件内容展示"><a href="#头文件内容展示" class="headerlink" title="头文件内容展示"></a>头文件内容展示</h5><ul><li>定了一个block，用于传输照片信息</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#import &lt;UIKit/UIKit.h&gt;</span><br><span class="line">typedef void(^ImageBlock)(NSDictionary *imageDictionary);</span><br><span class="line">@interface CameraViewController : UIViewController</span><br><span class="line">@property (nonatomic, copy) ImageBlock imageblock;</span><br><span class="line">-(void)setImageblock:(void(^)(NSDictionary *imageDictionary))imageblock;</span><br><span class="line">@end</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="视图控件代码，逻辑代码展示"><a href="#视图控件代码，逻辑代码展示" class="headerlink" title="视图控件代码，逻辑代码展示"></a>视图控件代码，逻辑代码展示</h5><ul><li>当前视图需要的主要空控件，为了方便操作全部定义为属性</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">@interface CameraViewController ()&lt;AVCaptureMetadataOutputObjectsDelegate,UIAlertViewDelegate,CAAnimationDelegate&gt;</span><br><span class="line">//捕获设备，通常是前置摄像头，后置摄像头，麦克风（音频输入）</span><br><span class="line">@property(nonatomic)AVCaptureDevice *device;</span><br><span class="line">//AVCaptureDeviceInput 代表输入设备，他使用AVCaptureDevice 来初始化</span><br><span class="line">@property(nonatomic)AVCaptureDeviceInput *input;</span><br><span class="line">//当启动摄像头开始捕获输入</span><br><span class="line">@property(nonatomic)AVCaptureMetadataOutput *output;</span><br><span class="line">//输出</span><br><span class="line">@property (nonatomic)AVCaptureStillImageOutput *ImageOutPut;</span><br><span class="line">//session：由他把输入输出结合在一起，并开始启动捕获设备（摄像头）</span><br><span class="line">@property(nonatomic)AVCaptureSession *session;</span><br><span class="line">//图像预览层，实时显示捕获的图像</span><br><span class="line">@property(nonatomic)AVCaptureVideoPreviewLayer *previewLayer;</span><br><span class="line">//设备</span><br><span class="line">@property (nonatomic, strong)AVCaptureDevice *deveice;</span><br><span class="line">//拍照</span><br><span class="line">@property (nonatomic, strong) UIButton *PhotoButton;</span><br><span class="line">//闪光灯</span><br><span class="line">@property (nonatomic, strong) UIButton *flashButton;</span><br><span class="line">//取消</span><br><span class="line">@property (nonatomic, strong) UIButton *cancleButton;</span><br><span class="line">//切换摄像头</span><br><span class="line">@property (nonatomic, strong) UIButton *changeButton;</span><br><span class="line">//确定选择当前照片</span><br><span class="line">@property (nonatomic, strong) UIButton *selectButton;</span><br><span class="line">//重新拍照</span><br><span class="line">@property (nonatomic, strong) UIButton *reCamButton;</span><br><span class="line">//照片加载视图</span><br><span class="line">@property (nonatomic, strong) UIImageView *imageView;</span><br><span class="line">//对焦区域</span><br><span class="line">@property (nonatomic, strong) UIImageView *focusView;</span><br><span class="line">//上方功能区</span><br><span class="line">@property (nonatomic, strong) UIView *topView;</span><br><span class="line">//下方功能区</span><br><span class="line">@property (nonatomic, strong) UIView *bottomView;</span><br><span class="line">//闪光灯状态</span><br><span class="line">@property (nonatomic, assign) BOOL isflashOn;</span><br><span class="line">//拍到的照片</span><br><span class="line">@property (nonatomic, strong) UIImage *image;</span><br><span class="line">//照片的信息</span><br><span class="line">@property (nonatomic, strong) NSDictionary *imageDict;</span><br><span class="line">//是否可以拍照</span><br><span class="line">@property (nonatomic, assign) BOOL canCa;</span><br><span class="line">//闪光灯模式</span><br><span class="line">@property (nonatomic, assign) AVCaptureFlashMode flahMode;</span><br><span class="line">//前后摄像头</span><br><span class="line">@property (nonatomic, assign) AVCaptureDevicePosition cameraPosition;</span><br><span class="line">//模糊视图</span><br><span class="line">@property (nonatomic, strong) UIVisualEffectView *effectView;</span><br><span class="line">@end</span><br></pre></td></tr></table></figure><ul><li>使用懒加载，减少主要函数中的代码，看起来更为清爽。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br></pre></td><td class="code"><pre><span class="line">@implementation CameraViewController</span><br><span class="line">#pragma mark - 更改摄像头</span><br><span class="line"></span><br><span class="line">-(UIVisualEffectView *)effectView&#123;</span><br><span class="line">    if (_effectView == nil) &#123;</span><br><span class="line">        UIBlurEffect *effect = [UIBlurEffect effectWithStyle:UIBlurEffectStyleLight];</span><br><span class="line">        _effectView = [[UIVisualEffectView alloc] initWithEffect:effect];</span><br><span class="line">        _effectView.frame = CGRectMake(0, 0, ScreenWidth(), ScreenHieght());</span><br><span class="line">        _effectView.alpha = 1;</span><br><span class="line">    &#125;</span><br><span class="line">    return _effectView;</span><br><span class="line">&#125;</span><br><span class="line"> #pragma mark - 更改闪光灯状态</span><br><span class="line">-(void)setIsflashOn:(BOOL)isflashOn&#123;</span><br><span class="line">    _isflashOn = isflashOn;</span><br><span class="line">    [[NSUserDefaults standardUserDefaults] setObject:@(_isflashOn) forKey:@&quot;flashMode&quot;];</span><br><span class="line">    if (_isflashOn) &#123;</span><br><span class="line">        [self.flashButton setBackgroundImage:[UIImage imageNamed:@&quot;flash_on&quot;] forState:UIControlStateNormal];</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        [self.flashButton setBackgroundImage:[UIImage imageNamed:@&quot;flash_off&quot;] forState:UIControlStateNormal];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">#pragma mark - 上方功能区</span><br><span class="line">-(UIView *)topView&#123;</span><br><span class="line">    if (!_topView ) &#123;</span><br><span class="line">        _topView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, ScreenWidth(), 50)];</span><br><span class="line">        _topView.backgroundColor = [UIColor colorWithRed:1 green:1 blue:1 alpha:0.2];</span><br><span class="line">        [_topView addSubview:self.cancleButton];</span><br><span class="line">        [_topView addSubview:self.flashButton];</span><br><span class="line">        [_topView addSubview:self.changeButton];</span><br><span class="line">    &#125;</span><br><span class="line">    return _topView;</span><br><span class="line">&#125;</span><br><span class="line">#pragma mark - 取消</span><br><span class="line">-(UIButton *)cancleButton&#123;</span><br><span class="line">    if (_cancleButton == nil) &#123;</span><br><span class="line">        _cancleButton = [UIButton buttonWithType:UIButtonTypeCustom];</span><br><span class="line">        _cancleButton.frame = CGRectMake(20, 10, 60, 30);</span><br><span class="line">        [_cancleButton setTitle:@&quot;取消&quot; forState:UIControlStateNormal];</span><br><span class="line">        [_cancleButton addTarget:self action:@selector(cancle) forControlEvents:UIControlEventTouchUpInside];</span><br><span class="line">    &#125;</span><br><span class="line">    return  _cancleButton ;</span><br><span class="line">&#125;</span><br><span class="line">#pragma mark - 闪光灯</span><br><span class="line">-(UIButton *)flashButton&#123;</span><br><span class="line">    if (_flashButton == nil) &#123;</span><br><span class="line">        _flashButton = [UIButton buttonWithType:UIButtonTypeCustom];</span><br><span class="line">        _flashButton.frame = CGRectMake((ScreenWidth()-30)/2.0, 10, 30, 30);</span><br><span class="line">        [_flashButton addTarget:self action:@selector(FlashOn) forControlEvents:UIControlEventTouchUpInside];</span><br><span class="line">    &#125;</span><br><span class="line">    return  _flashButton;</span><br><span class="line">&#125;</span><br><span class="line">#pragma mark - 切换摄像头</span><br><span class="line">-(UIButton *)changeButton&#123;</span><br><span class="line">    if (_changeButton == nil) &#123;</span><br><span class="line">        _changeButton = [UIButton buttonWithType:UIButtonTypeCustom];</span><br><span class="line">        _changeButton.frame = CGRectMake(ScreenWidth()-40, 10, 30, 30);</span><br><span class="line">        [_changeButton setBackgroundImage:[UIImage imageNamed:@&quot;cam&quot;] forState:UIControlStateNormal];</span><br><span class="line">        [_changeButton addTarget:self action:@selector(changeCamera) forControlEvents:UIControlEventTouchUpInside];</span><br><span class="line">    &#125;</span><br><span class="line">    return  _changeButton;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#pragma mark - 下方功能区</span><br><span class="line"></span><br><span class="line">-(UIView *)bottomView&#123;</span><br><span class="line">    if (!_bottomView) &#123;</span><br><span class="line">        _bottomView = [[UIView alloc] initWithFrame:CGRectMake(0, ScreenHieght()-80, ScreenWidth(), 80)];</span><br><span class="line">        _bottomView.backgroundColor = [UIColor colorWithRed:1 green:1 blue:1 alpha:0.4];</span><br><span class="line">        [_bottomView addSubview:self.reCamButton];</span><br><span class="line">        [_bottomView addSubview:self.PhotoButton];</span><br><span class="line">        [_bottomView addSubview:self.selectButton];</span><br><span class="line">    &#125;</span><br><span class="line">    return _bottomView;</span><br><span class="line">&#125;</span><br><span class="line">-(UIButton *)reCamButton&#123;</span><br><span class="line">    if (_reCamButton == nil) &#123;</span><br><span class="line">        _reCamButton = [UIButton buttonWithType:UIButtonTypeCustom];</span><br><span class="line">        _reCamButton.frame = CGRectMake(40, 25, 80, 30);</span><br><span class="line">        [_reCamButton addTarget:self action:@selector(reCam) forControlEvents:UIControlEventTouchUpInside];</span><br><span class="line">        [_reCamButton setTitle:@&quot;重新拍照&quot; forState:UIControlStateNormal];</span><br><span class="line">        [_reCamButton setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal];</span><br><span class="line">        _reCamButton.alpha = 0;</span><br><span class="line">    &#125;</span><br><span class="line">    return _reCamButton;</span><br><span class="line">&#125;</span><br><span class="line">-(UIButton *)PhotoButton&#123;</span><br><span class="line">    if (_PhotoButton == nil) &#123;</span><br><span class="line">        _PhotoButton = [UIButton buttonWithType:UIButtonTypeCustom];</span><br><span class="line">        _PhotoButton.frame = CGRectMake(ScreenWidth()/2.0-30, 10, 60, 60);</span><br><span class="line">        [_PhotoButton setImage:[UIImage imageNamed:@&quot;photograph&quot;] forState: UIControlStateNormal];</span><br><span class="line">        [_PhotoButton setImage:[UIImage imageNamed:@&quot;photograph_Select&quot;] forState:UIControlStateNormal];</span><br><span class="line">        [_PhotoButton addTarget:self action:@selector(shutterCamera) forControlEvents:UIControlEventTouchUpInside];</span><br><span class="line">    &#125;</span><br><span class="line">    return _PhotoButton;</span><br><span class="line">&#125;</span><br><span class="line">-(UIButton *)selectButton&#123;</span><br><span class="line">    if (_selectButton == nil) &#123;</span><br><span class="line">        _selectButton = [UIButton buttonWithType:UIButtonTypeCustom];</span><br><span class="line">        _selectButton.frame = CGRectMake(ScreenWidth()-120, 25, 80, 30);</span><br><span class="line">        [_selectButton addTarget:self action:@selector(selectImage) forControlEvents:UIControlEventTouchUpInside];</span><br><span class="line">        [_selectButton setTitle:@&quot;选择照片&quot; forState:UIControlStateNormal];</span><br><span class="line">        [_selectButton setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal];</span><br><span class="line">        _selectButton.alpha = 0;</span><br><span class="line">    &#125;</span><br><span class="line">    return _selectButton;</span><br><span class="line">&#125;</span><br><span class="line">#pragma mark - 加载照片的视图</span><br><span class="line">-(UIImageView *)imageView&#123;</span><br><span class="line">    if (_imageView == nil) &#123;</span><br><span class="line">        _imageView = [[UIImageView alloc]initWithFrame:self.previewLayer.frame];</span><br><span class="line">        _imageView.layer.masksToBounds = YES;</span><br><span class="line">        _imageView.image = _image;</span><br><span class="line">    &#125;</span><br><span class="line">    return _imageView;</span><br><span class="line">&#125;</span><br><span class="line">#pragma mark - 对焦区域</span><br><span class="line">-(UIImageView *)focusView&#123;</span><br><span class="line">    if (_focusView == nil) &#123;</span><br><span class="line">        _focusView = [[UIImageView alloc]initWithFrame:CGRectMake(0, 0, 80, 80)];</span><br><span class="line">        _focusView.backgroundColor = [UIColor clearColor];</span><br><span class="line">        _focusView.image = [UIImage imageNamed:@&quot;foucs80pt&quot;];</span><br><span class="line">    &#125;</span><br><span class="line">    return _focusView;</span><br><span class="line">&#125;</span><br><span class="line">#pragma mark - 使用self.session，初始化预览层，self.session负责驱动input进行信息的采集，layer负责把图像渲染显示</span><br><span class="line">-(AVCaptureVideoPreviewLayer *)previewLayer&#123;</span><br><span class="line">    if (_previewLayer == nil) &#123;</span><br><span class="line">        _previewLayer = [[AVCaptureVideoPreviewLayer alloc]initWithSession:self.session];</span><br><span class="line">        _previewLayer.frame = CGRectMake(0, 0, ScreenWidth(), ScreenHieght());</span><br><span class="line">        _previewLayer.videoGravity = AVLayerVideoGravityResizeAspectFill;</span><br><span class="line">    &#125;</span><br><span class="line">    return  _previewLayer;</span><br><span class="line">&#125;</span><br><span class="line">-(AVCaptureStillImageOutput *)ImageOutPut&#123;</span><br><span class="line">    if (_ImageOutPut == nil) &#123;</span><br><span class="line">        _ImageOutPut = [[AVCaptureStillImageOutput alloc] init];</span><br><span class="line">    &#125;</span><br><span class="line">    return _ImageOutPut;</span><br><span class="line">&#125;</span><br><span class="line">#pragma mark - 初始化输入</span><br><span class="line">-(AVCaptureDeviceInput *)input&#123;</span><br><span class="line">    if (_input == nil) &#123;</span><br><span class="line">        </span><br><span class="line">        _input = [[AVCaptureDeviceInput alloc]initWithDevice:self.device error:nil];</span><br><span class="line">    &#125;</span><br><span class="line">    return _input;</span><br><span class="line">&#125;</span><br><span class="line">#pragma mark - 初始化输出</span><br><span class="line">-(AVCaptureMetadataOutput *)output&#123;</span><br><span class="line">    if (_output == nil) &#123;</span><br><span class="line">        </span><br><span class="line">        _output = [[AVCaptureMetadataOutput alloc]init];</span><br><span class="line">    &#125;</span><br><span class="line">    return  _output;</span><br><span class="line">&#125;</span><br><span class="line">#pragma mark - 使用AVMediaTypeVideo 指明self.device代表视频，默认使用后置摄像头进行初始化</span><br><span class="line">-(AVCaptureDevice *)device&#123;</span><br><span class="line">    if (_device == nil) &#123;</span><br><span class="line">        </span><br><span class="line">        _device = [AVCaptureDevice defaultDeviceWithMediaType:AVMediaTypeVideo];</span><br><span class="line">    &#125;</span><br><span class="line">    return _device;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="主要逻辑代码"><a href="#主要逻辑代码" class="headerlink" title="主要逻辑代码"></a>主要逻辑代码</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line">#pragma mark - 当前视图控制器的初始化</span><br><span class="line">- (instancetype)init</span><br><span class="line">&#123;</span><br><span class="line">    self = [super init];</span><br><span class="line">    if (self) &#123;</span><br><span class="line">        _canCa = [self canUserCamear];</span><br><span class="line">    &#125;</span><br><span class="line">    return self;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">-(void)setImageblock:(void (^)(NSDictionary *))imageblock&#123;</span><br><span class="line">    _imageblock = imageblock;</span><br><span class="line">&#125;</span><br><span class="line">#pragma mark - 检查相机权限</span><br><span class="line">- (BOOL)canUserCamear&#123;</span><br><span class="line">    AVAuthorizationStatus authStatus = [AVCaptureDevice authorizationStatusForMediaType:AVMediaTypeVideo];</span><br><span class="line">    if (authStatus == AVAuthorizationStatusDenied) &#123;</span><br><span class="line">        UIAlertView *alertView = [[UIAlertView alloc]initWithTitle:@&quot;请打开相机权限&quot; message:@&quot;设置-隐私-相机&quot; delegate:self cancelButtonTitle:@&quot;确定&quot; otherButtonTitles:@&quot;取消&quot;, nil];</span><br><span class="line">        alertView.tag = 100;</span><br><span class="line">        [alertView show];</span><br><span class="line">        return NO;</span><br><span class="line">    &#125;</span><br><span class="line">    else&#123;</span><br><span class="line">        return YES;</span><br><span class="line">    &#125;</span><br><span class="line">    return YES;</span><br><span class="line">&#125;</span><br><span class="line">#pragma mark - 视图加载</span><br><span class="line">- (void)viewDidLoad &#123;</span><br><span class="line">    [super viewDidLoad];</span><br><span class="line">    self.view.backgroundColor = [UIColor clearColor];</span><br><span class="line">    if (_canCa) &#123;</span><br><span class="line">        [self customCamera];</span><br><span class="line">        [self customUI];</span><br><span class="line">        [self FlashOn];</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    // Do any additional setup after loading the view, typically from a nib.</span><br><span class="line">&#125;</span><br><span class="line">#pragma mark - 自定义视图</span><br><span class="line">- (void)customUI&#123;</span><br><span class="line">    [self.view addSubview:self.topView];</span><br><span class="line">    [self.view addSubview:self.bottomView];</span><br><span class="line">    [self.view addSubview:self.focusView];</span><br><span class="line">    UITapGestureRecognizer *tapGesture = [[UITapGestureRecognizer alloc]initWithTarget:self action:@selector(focusGesture:)];</span><br><span class="line">    [self.view addGestureRecognizer:tapGesture];</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line">#pragma mark - 自定义相机</span><br><span class="line">- (void)customCamera&#123;</span><br><span class="line">    //生成会话，用来结合输入输出</span><br><span class="line">    self.session = [[AVCaptureSession alloc]init];</span><br><span class="line">    if ([self.session canSetSessionPreset:AVCaptureSessionPresetPhoto]) &#123;</span><br><span class="line">        self.session.sessionPreset = AVCaptureSessionPresetPhoto;</span><br><span class="line">    &#125;</span><br><span class="line">    if ([self.session canAddInput:self.input]) &#123;</span><br><span class="line">        [self.session addInput:self.input];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    if ([self.session canAddOutput:self.ImageOutPut]) &#123;</span><br><span class="line">        [self.session addOutput:self.ImageOutPut];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    [self.view.layer addSublayer:self.previewLayer];</span><br><span class="line">    </span><br><span class="line">    //开始启动</span><br><span class="line">    [self.session startRunning];</span><br><span class="line">    if ([self.device lockForConfiguration:nil]) &#123;</span><br><span class="line">        if ([self.device isFlashModeSupported:AVCaptureFlashModeAuto]) &#123;</span><br><span class="line">            [self.device setFlashMode:AVCaptureFlashModeAuto];</span><br><span class="line">        &#125;</span><br><span class="line">        //自动白平衡</span><br><span class="line">        if ([self.device isWhiteBalanceModeSupported:AVCaptureWhiteBalanceModeAutoWhiteBalance]) &#123;</span><br><span class="line">            [self.device setWhiteBalanceMode:AVCaptureWhiteBalanceModeAutoWhiteBalance];</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        [self.device unlockForConfiguration];</span><br><span class="line">    &#125;</span><br><span class="line">    [self focusAtPoint:self.view.center];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>*闪光灯</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">#pragma 闪光灯</span><br><span class="line">- (void)FlashOn&#123;</span><br><span class="line">    if ([self.device lockForConfiguration:nil]) &#123;</span><br><span class="line">        if (self.isflashOn) &#123;</span><br><span class="line">            if ([self.device isFlashModeSupported:AVCaptureFlashModeOff]) &#123;</span><br><span class="line">                [self.device setFlashMode:AVCaptureFlashModeOff];</span><br><span class="line">                self.isflashOn = NO;</span><br><span class="line">                //[self.flashButton setTitle:@&quot;关&quot; forState:UIControlStateNormal];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            if ([self.device isFlashModeSupported:AVCaptureFlashModeAuto]) &#123;</span><br><span class="line">                [self.device setFlashMode:AVCaptureFlashModeAuto];</span><br><span class="line">                self.isflashOn = YES;</span><br><span class="line">                //[self.flashButton setTitle:@&quot;开&quot; forState:UIControlStateNormal];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        [self.device unlockForConfiguration];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>双摄像头切换，切换时使用高斯模糊对试图进行处理</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">#pragma mark - 相机切换</span><br><span class="line">- (void)changeCamera&#123;</span><br><span class="line">    NSUInteger cameraCount = [[AVCaptureDevice devicesWithMediaType:AVMediaTypeVideo] count];</span><br><span class="line">    if (cameraCount &gt; 1) &#123;</span><br><span class="line">        self.changeButton.userInteractionEnabled = NO;</span><br><span class="line">        [self cutoff];</span><br><span class="line">        NSError *error;</span><br><span class="line">        </span><br><span class="line">        CATransition *animation = [CATransition animation];</span><br><span class="line">        animation.duration = 1;</span><br><span class="line">        animation.timingFunction = [CAMediaTimingFunction functionWithName:kCAMediaTimingFunctionEaseInEaseOut];</span><br><span class="line">        animation.type = @&quot;oglFlip&quot;;</span><br><span class="line">        animation.delegate = self;</span><br><span class="line">        AVCaptureDevice *newCamera = nil;</span><br><span class="line">        AVCaptureDeviceInput *newInput = nil;</span><br><span class="line">        AVCaptureDevicePosition position = [[self.input device] position];</span><br><span class="line">        if (position == AVCaptureDevicePositionFront)&#123;</span><br><span class="line">            newCamera = [self cameraWithPosition:AVCaptureDevicePositionBack];</span><br><span class="line">            animation.subtype = kCATransitionFromLeft;</span><br><span class="line">            self.cameraPosition = AVCaptureDevicePositionBack;</span><br><span class="line">        &#125;else &#123;</span><br><span class="line">            newCamera = [self cameraWithPosition:AVCaptureDevicePositionFront];</span><br><span class="line">            animation.subtype = kCATransitionFromRight;</span><br><span class="line">            self.cameraPosition = AVCaptureDevicePositionFront;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        newInput = [AVCaptureDeviceInput deviceInputWithDevice:newCamera error:nil];</span><br><span class="line">        [self.previewLayer addAnimation:animation forKey:nil];</span><br><span class="line">        /*</span><br><span class="line">         高斯模糊</span><br><span class="line">         */</span><br><span class="line">        </span><br><span class="line">        [self.imageView addSubview:self.effectView];</span><br><span class="line">        [self.view insertSubview:self.imageView belowSubview:self.topView];</span><br><span class="line">        //</span><br><span class="line">        if (newInput != nil) &#123;</span><br><span class="line">            [self.session beginConfiguration];</span><br><span class="line">            [self.session removeInput:self.input];</span><br><span class="line">            if ([self.session canAddInput:newInput]) &#123;</span><br><span class="line">                [self.session addInput:newInput];</span><br><span class="line">                self.input = newInput;</span><br><span class="line"></span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                [self.session addInput:self.input];</span><br><span class="line">            &#125;</span><br><span class="line">            [self.session commitConfiguration];</span><br><span class="line">            </span><br><span class="line">        &#125; else if (error) &#123;</span><br><span class="line">            NSLog(@&quot;toggle carema failed, error = %@&quot;, error);</span><br><span class="line">        &#125;</span><br><span class="line">        //[self.session startRunning];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">- (AVCaptureDevice *)cameraWithPosition:(AVCaptureDevicePosition)position&#123;</span><br><span class="line">    NSArray *devices = [AVCaptureDevice devicesWithMediaType:AVMediaTypeVideo];</span><br><span class="line">    for ( AVCaptureDevice *device in devices )</span><br><span class="line">        if ( device.position == position ) return device;</span><br><span class="line">    return nil;</span><br><span class="line">&#125;</span><br><span class="line">-(void)animationDidStop:(CAAnimation *)anim finished:(BOOL)flag&#123;</span><br><span class="line">    self.changeButton.userInteractionEnabled = YES;</span><br><span class="line">    [self.effectView removeFromSuperview];</span><br><span class="line">    [self.imageView removeFromSuperview];</span><br><span class="line">    if (self.cameraPosition == AVCaptureDevicePositionFront) &#123;</span><br><span class="line">        self.flashButton.alpha = 0;</span><br><span class="line">    &#125;else if (self.cameraPosition == AVCaptureDevicePositionBack)&#123;</span><br><span class="line">        self.flashButton.alpha = 1;</span><br><span class="line">    &#125;</span><br><span class="line">    [self.session startRunning];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>摄像头对焦</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">#pragma mark - 聚焦</span><br><span class="line">- (void)focusGesture:(UITapGestureRecognizer*)gesture&#123;</span><br><span class="line">    CGPoint point = [gesture locationInView:gesture.view];</span><br><span class="line">    [self focusAtPoint:point];</span><br><span class="line">&#125;</span><br><span class="line">- (void)focusAtPoint:(CGPoint)point&#123;</span><br><span class="line">    CGSize size = self.view.bounds.size;</span><br><span class="line">    CGPoint focusPoint = CGPointMake( point.y /size.height ,1-point.x/size.width );</span><br><span class="line">    NSError *error;</span><br><span class="line">    if ([self.device lockForConfiguration:&amp;error]) &#123;</span><br><span class="line">        </span><br><span class="line">        if ([self.device isFocusModeSupported:AVCaptureFocusModeAutoFocus]) &#123;</span><br><span class="line">            [self.device setFocusPointOfInterest:focusPoint];</span><br><span class="line">            [self.device setFocusMode:AVCaptureFocusModeAutoFocus];</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        if ([self.device isExposureModeSupported:AVCaptureExposureModeAutoExpose ]) &#123;</span><br><span class="line">            [self.device setExposurePointOfInterest:focusPoint];</span><br><span class="line">            [self.device setExposureMode:AVCaptureExposureModeAutoExpose];</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        [self.device unlockForConfiguration];</span><br><span class="line">        self.focusView.center = point;</span><br><span class="line">        </span><br><span class="line">        //[self startFocusAnimation];</span><br><span class="line">        self.focusView.alpha = 1;</span><br><span class="line">        [UIView animateWithDuration:0.2 animations:^&#123;</span><br><span class="line">            self.focusView.transform = CGAffineTransformMakeScale(1.25f, 1.25f);</span><br><span class="line">        &#125; completion:^(BOOL finished) &#123;</span><br><span class="line">            [UIView animateWithDuration:0.3 animations:^&#123;</span><br><span class="line">                self.focusView.transform = CGAffineTransformMakeScale(1.0f, 1.0f);</span><br><span class="line">            &#125; completion:^(BOOL finished) &#123;</span><br><span class="line">                [self hiddenFocusAnimation];</span><br><span class="line">            &#125;];</span><br><span class="line">        &#125;];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="主要功能按钮-拍照按钮"><a href="#主要功能按钮-拍照按钮" class="headerlink" title="主要功能按钮 拍照按钮"></a>主要功能按钮 拍照按钮</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">#pragma mark - 拍照</span><br><span class="line">- (void)shutterCamera</span><br><span class="line">&#123;</span><br><span class="line">    </span><br><span class="line">    AVCaptureConnection * videoConnection = [self.ImageOutPut connectionWithMediaType:AVMediaTypeVideo];</span><br><span class="line">    if (!videoConnection) &#123;</span><br><span class="line">        NSLog(@&quot;take photo failed!&quot;);</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    [self.ImageOutPut captureStillImageAsynchronouslyFromConnection:videoConnection completionHandler:^(CMSampleBufferRef imageDataSampleBuffer, NSError *error) &#123;</span><br><span class="line">        if (imageDataSampleBuffer == NULL) &#123;</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line">        NSData * imageData = [AVCaptureStillImageOutput jpegStillImageNSDataRepresentation:imageDataSampleBuffer];</span><br><span class="line">        self.image = [UIImage imageWithData:imageData];</span><br><span class="line">        self.imageDict = @&#123;@&quot;image&quot;:self.image,@&quot;info&quot;:@&#123;@&quot;PHImageFileUTIKey&quot;:@&quot;.jpeg&quot;&#125;&#125;;</span><br><span class="line">        [self.session stopRunning];</span><br><span class="line">        //[self.view insertSubview:self.imageView belowSubview:self.PhotoButton];</span><br><span class="line">        [self.view insertSubview:self.imageView aboveSubview:self.topView];</span><br><span class="line">        NSLog(@&quot;image size = %@&quot;,NSStringFromCGSize(self.image.size));</span><br><span class="line">        self.topView.alpha = 0;</span><br><span class="line">        self.PhotoButton.alpha = 0;</span><br><span class="line">        self.reCamButton.alpha = 1;</span><br><span class="line">        self.selectButton.alpha = 1;</span><br><span class="line">    &#125;];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li> 保存至相册</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">#pragma - 保存至相册</span><br><span class="line">- (void)saveImageToPhotoAlbum:(UIImage*)savedImage</span><br><span class="line">&#123;</span><br><span class="line">    </span><br><span class="line">    UIImageWriteToSavedPhotosAlbum(savedImage, self, @selector(image:didFinishSavingWithError:contextInfo:), NULL);</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line">// 指定回调方法</span><br><span class="line"></span><br><span class="line">- (void)image: (UIImage *) image didFinishSavingWithError: (NSError *) error contextInfo: (void *) contextInfo&#123;</span><br><span class="line">    if(error != NULL)&#123;</span><br><span class="line">        UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@&quot;保存图片结果提示&quot;</span><br><span class="line">                                                        message:@&quot;保存图片失败&quot;</span><br><span class="line">                                                       delegate:self</span><br><span class="line">                                              cancelButtonTitle:@&quot;确定&quot;</span><br><span class="line">                                              otherButtonTitles:nil];</span><br><span class="line">        [alert show];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>取消 返回上级</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">#pragma mark - 取消 返回上级</span><br><span class="line">-(void)cancle&#123;</span><br><span class="line">    [self.imageView removeFromSuperview];</span><br><span class="line">    [self.session stopRunning];</span><br><span class="line">    [self.navigationController popViewControllerAnimated:YES];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (void)alertView:(UIAlertView *)alertView clickedButtonAtIndex:(NSInteger)buttonIndex&#123;</span><br><span class="line">    if (buttonIndex == 0 &amp;&amp; alertView.tag == 100) &#123;</span><br><span class="line">        </span><br><span class="line">        NSURL * url = [NSURL URLWithString:UIApplicationOpenSettingsURLString];</span><br><span class="line">        </span><br><span class="line">        if([[UIApplication sharedApplication] canOpenURL:url]) &#123;</span><br><span class="line">            </span><br><span class="line">            [[UIApplication sharedApplication] openURL:url];</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>重新拍照</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#pragma mark - 重新拍照</span><br><span class="line">- (void)reCam&#123;</span><br><span class="line">    self.imageView.image = nil;</span><br><span class="line">    [self.imageView removeFromSuperview];</span><br><span class="line">    [self.session startRunning];</span><br><span class="line">    self.topView.alpha = 1;</span><br><span class="line">    self.PhotoButton.alpha = 1;</span><br><span class="line">    self.reCamButton.alpha = 0;</span><br><span class="line">    self.selectButton.alpha = 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>选择照片 返回上级</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#pragma mark - 选择照片 返回上级</span><br><span class="line">- (void)selectImage&#123;</span><br><span class="line">    [self saveImageToPhotoAlbum:self.image];</span><br><span class="line">    self.imageblock(self.image);</span><br><span class="line">    [self.navigationController popViewControllerAnimated:YES];</span><br><span class="line">&#125;</span><br><span class="line">-(void)viewDidDisappear:(BOOL)animated&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (void)focusDidFinsh&#123;</span><br><span class="line">    self.focusView.hidden = YES;</span><br><span class="line">    self.focusView.transform = CGAffineTransformMakeScale(1.0f, 1.0f);</span><br><span class="line">    //self.focusView.transform=CGAffineTransformMakeScale(0.7f, 0.7f);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="对焦框动画"><a href="#对焦框动画" class="headerlink" title="对焦框动画"></a>对焦框动画</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">- (void)startFocusAnimation&#123;</span><br><span class="line">    self.focusView.hidden = NO;</span><br><span class="line">    self.focusView.transform = CGAffineTransformMakeScale(1.25f, 1.25f);//将要显示的view按照正常比例显示出来</span><br><span class="line">    [UIView beginAnimations:nil context:UIGraphicsGetCurrentContext()];</span><br><span class="line">    //[UIView setAnimationCurve:UIViewAnimationCurveEaseInOut];  //InOut 表示进入和出去时都启动动画</span><br><span class="line">    //[UIView setAnimationWillStartSelector:@selector(hiddenFoucsView)];</span><br><span class="line">    [UIView setAnimationDidStopSelector:@selector(hiddenFocusAnimation)];</span><br><span class="line">    [UIView setAnimationDuration:0.5f];//动画时间</span><br><span class="line">    self.focusView.transform = CGAffineTransformIdentity;//先让要显示的view最小直至消失</span><br><span class="line">    [UIView commitAnimations]; //启动动画</span><br><span class="line">    //相反如果想要从小到大的显示效果，则将比例调换</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line">- (void)hiddenFocusAnimation&#123;</span><br><span class="line">    [UIView beginAnimations:nil context:UIGraphicsGetCurrentContext()];</span><br><span class="line">    //NSDate *DATE = [NSDate date];</span><br><span class="line">    //[UIView setAnimationStartDate:[NSDate date]];</span><br><span class="line">    [UIView setAnimationDelay:3];</span><br><span class="line">    self.focusView.alpha = 0;</span><br><span class="line">    [UIView setAnimationDuration:0.5f];//动画时间</span><br><span class="line">    [UIView commitAnimations];</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line">- (void)hiddenFoucsView&#123;</span><br><span class="line">    self.focusView.alpha = !self.focusView.alpha;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="http://img.blog.csdn.net/20161119182623474" alt="这里写图片描述"><br><img src="http://img.blog.csdn.net/20161119182645365" alt="这里写图片描述"></p><h4 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h4><ul><li> 第一次自定义一个相机，代码写的可能不太好理解。</li><li>这个项目在码云的git库上有，地址为<a href="https://git.oschina.net/LiynXu/PhotoDemo.git%E3%80%82">https://git.oschina.net/LiynXu/PhotoDemo.git。</a> </li><li>如果有任何意见或者建议，或者发现bug(应该是有的),请移步值git库下给予指导，3Q。</li></ul>]]></content>
      
      
      <categories>
          
          <category> iOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iOS--自定义多选相册</title>
      <link href="/2017/08/18/ios-custom-ablum/"/>
      <url>/2017/08/18/ios-custom-ablum/</url>
      
        <content type="html"><![CDATA[<h4 id="自定义多选相册"><a href="#自定义多选相册" class="headerlink" title="自定义多选相册"></a><strong>自定义多选相册</strong></h4><p>一个项目需要类似于安卓的多选相册，而iOS自带的Piker只能单选，所以就想到了自定义，自定义的过程是辛苦的，结果出来之后是高兴的。</p> <span id="more"></span><h5 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h5><p>本代码只展示了iOS默认的相册内容，如果读者有其他想法的欢迎再本代码基础上修改。</p><h5 id="获取系统默认的相册"><a href="#获取系统默认的相册" class="headerlink" title="获取系统默认的相册"></a>获取系统默认的相册</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-(PHFetchResult *)smartAlbums&#123;</span><br><span class="line">    </span><br><span class="line">    if (_smartAlbums == nil) &#123;</span><br><span class="line">        _smartAlbums = [PHAssetCollection fetchAssetCollectionsWithType:PHAssetCollectionTypeSmartAlbum subtype:PHAssetCollectionSubtypeSmartAlbumUserLibrary options:nil];</span><br><span class="line">    &#125;</span><br><span class="line">    return _smartAlbums;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="获取系统相册中的相片"><a href="#获取系统相册中的相片" class="headerlink" title="获取系统相册中的相片"></a>获取系统相册中的相片</h5><p>默认的照片排序是时间先后顺序，这里我也规定了按照文件创建的先后顺序来排序呢，为了避免同时引用过多的image导致内存暴增，这里使用的都是缩略图，而且只允许引用前20项。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">- (void)initPhotoData&#123;</span><br><span class="line">    [self.photoArray removeAllObjects];</span><br><span class="line">    __weak typeof(self) weakSelf = self;</span><br><span class="line">    for (PHCollection * obj in self.smartAlbums) &#123;</span><br><span class="line">        if ([obj isKindOfClass:[PHAssetCollection class]]) &#123;</span><br><span class="line">            PHAssetCollection *collection = (PHAssetCollection *)obj;</span><br><span class="line">            PHFetchOptions *options = [[PHFetchOptions alloc] init];</span><br><span class="line">            options.sortDescriptors = @[[NSSortDescriptor sortDescriptorWithKey:@&quot;creationDate&quot; ascending:NO]];</span><br><span class="line">            PHFetchResult *fetchReuslt  = [PHAsset fetchAssetsInAssetCollection:collection options:options];</span><br><span class="line">            NSLog(@&quot;count - %ld&quot;,(unsigned long)fetchReuslt.count);</span><br><span class="line">            if (fetchReuslt.count == 0) &#123;</span><br><span class="line">                continue;</span><br><span class="line">            &#125;</span><br><span class="line">            NSInteger count = 20&lt;fetchReuslt.count?20:fetchReuslt.count;</span><br><span class="line">            __block NSInteger _index = 0;</span><br><span class="line">            for (NSInteger i = 0 ;i&lt;count;i++) &#123;</span><br><span class="line">                PHAsset *asset  = fetchReuslt[i];</span><br><span class="line">                //使用PHImageManager从PHAsset中请求图片</span><br><span class="line">                NSInteger index = _index;</span><br><span class="line">                MyImageManager *imageManager = [MyImageManager defaultManager];</span><br><span class="line">                [imageManager requestImageForAsset:asset targetSize:CGSizeMake(ItemWidth()*2-2, ItemHieght()*2-2) contentMode:PHImageContentModeAspectFill options:self.requestOption Index:index resultHandler:^(UIImage *result, NSDictionary *info, NSInteger index) &#123;</span><br><span class="line">                    NSInteger IDKey = [info[@&quot;PHImageResultRequestIDKey&quot;] integerValue];</span><br><span class="line">                    NSLog(@&quot;%@,%ld,%ld,%ld&quot;,result,(long)IDKey,index,IDKey-index);</span><br><span class="line">                    [weakSelf.photoArray addObject:result];</span><br><span class="line">                &#125;];</span><br><span class="line">                _index++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            NSLog(@&quot;NO&quot;);</span><br><span class="line">            NSAssert1(NO, @&quot;Fetch Collect Not PHCollection:%@&quot;, obj);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    NSLog(@&quot;initPhotoDataDone&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="将获取到的缩略图展示到CollectionView上"><a href="#将获取到的缩略图展示到CollectionView上" class="headerlink" title="将获取到的缩略图展示到CollectionView上"></a>将获取到的缩略图展示到CollectionView上</h5><p><img src="http://img.blog.csdn.net/20161119181658290" alt="具体的演示效果就是这样"></p><ul><li>这个项目在码云的git库上有，地址为<a href="https://git.oschina.net/LiynXu/PhotoDemo.git%E3%80%82">https://git.oschina.net/LiynXu/PhotoDemo.git。</a></li><li>如果有任何意见或者建议，或者发现bug(应该是有的),请移步值git库下给予指导，3Q。</li></ul>]]></content>
      
      
      <categories>
          
          <category> iOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iOS--实例化对象转换为JSON数据</title>
      <link href="/2017/08/18/ios-custom-object-to-json-runtime/"/>
      <url>/2017/08/18/ios-custom-object-to-json-runtime/</url>
      
        <content type="html"><![CDATA[<h3 id="如何将自定义类的实例化对象转换为JSON数据"><a href="#如何将自定义类的实例化对象转换为JSON数据" class="headerlink" title="如何将自定义类的实例化对象转换为JSON数据"></a>如何将自定义类的实例化对象转换为JSON数据</h3><p>  我所用的方法是通过Runtime的相关方法，先后两步来实现的。具体往下看：<br>  <span id="more"></span></p><h4 id="新建一个类命名为《UserClass》"><a href="#新建一个类命名为《UserClass》" class="headerlink" title="新建一个类命名为《UserClass》"></a>新建一个类命名为《UserClass》</h4><ul><li>展示.h文件UserClass.h</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">//  UserClass.h</span><br><span class="line">//  MyPickerView</span><br><span class="line">//  Created by LiynXu on 16/3/7.</span><br><span class="line">//  Copyright © 2016年 LiynXu. All rights reserved.</span><br><span class="line"></span><br><span class="line">#import &lt;Foundation/Foundation.h&gt;</span><br><span class="line">@interface UserClass : NSObject</span><br><span class="line">@property (nonatomic,strong) NSString *name;</span><br><span class="line">@property (nonatomic,strong) NSString *password;</span><br><span class="line">@property (nonatomic,assign) NSInteger age;</span><br><span class="line">@property (nonatomic,strong) NSString *sex;</span><br><span class="line">- (instancetype)initWithName:(NSString *)name Password:(NSString *)password;</span><br><span class="line">- (NSDictionary *)convertToDictWithObject:(NSObject *)object;//主要使用这个方法得到一个字典</span><br><span class="line">@end</span><br></pre></td></tr></table></figure><p>由上面的头文件可以看出我所建立的类有4个属性：name，password，age，sex。<br>并且包含一个初始化方法，和对象转字典的方法(了解过Runtime，所以知道了Runtime可以在运行时某个对象的所有属性，以及属性的相关值)</p><h4 id="具体实现方法"><a href="#具体实现方法" class="headerlink" title="具体实现方法"></a>具体实现方法</h4><ul><li>第一步将自定义类的实例化对象转为字典，这一步需要结合Runtime进行，所以我们需要做一个操作就是导入一个头文件</li><li>#import &lt;objc/runtime.h&gt;//当前需要使用使用运行时库</li></ul><p>第二步使用第一部得到的字典转为JSON数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">//  UserClass.m</span><br><span class="line">//  MyPickerView</span><br><span class="line">//  Created by LiynXu on 16/3/7.</span><br><span class="line">//  Copyright © 2016年 LiynXu. All rights reserved.</span><br><span class="line"></span><br><span class="line">#import &quot;UserClass.h&quot;</span><br><span class="line">#import &lt;objc/runtime.h&gt;//当前需要使用使用运行时库</span><br><span class="line"></span><br><span class="line">@implementation UserClass</span><br><span class="line">-(instancetype)initWithName:(NSString *)name Password:(NSString *)password&#123;</span><br><span class="line">    self= [super init];</span><br><span class="line">    if (self) &#123;</span><br><span class="line">        _name = name;</span><br><span class="line">        _password = password;</span><br><span class="line">    &#125;</span><br><span class="line">    return self;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面的主要是一个初始化方法，重要的是下面，下面，下面！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">- (NSDictionary *)convertToDictWithObject:(NSObject *)object&#123;//获取当前对象的所有属性以及属性的值</span><br><span class="line">    NSMutableDictionary *Dict = [NSMutableDictionary dictionary];</span><br><span class="line">    unsigned int outCount, i;</span><br><span class="line">    objc_property_t *properties = class_copyPropertyList([object class], &amp;outCount);</span><br><span class="line">    //获取所有属性以及属性的值,并且转换为一个字典</span><br><span class="line">    for (i = 0; i&lt;outCount; i++)&#123;</span><br><span class="line">        objc_property_t property = properties[i];</span><br><span class="line">        const char* char_f =property_getName(property);</span><br><span class="line">        NSString *propertyName = [NSString stringWithUTF8String:char_f];</span><br><span class="line">        id propertyValue = [self valueForKey:(NSString *)propertyName];</span><br><span class="line">        if (propertyValue) [Dict setObject:propertyValue forKey:propertyName];</span><br><span class="line">    &#125;</span><br><span class="line">    free(properties);</span><br><span class="line">    return Dict;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@end</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>程序入口main.m  包含具体示例代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">//</span><br><span class="line">//  main.m</span><br><span class="line">//  JsonCode</span><br><span class="line">//</span><br><span class="line">//  Created by LiynXu on 16/3/7.</span><br><span class="line">//  Copyright © 2016年 LiynXu. All rights reserved.</span><br><span class="line">//</span><br><span class="line"></span><br><span class="line">#import &lt;Foundation/Foundation.h&gt;</span><br><span class="line">#import &quot;UserClass.h&quot;</span><br><span class="line"></span><br><span class="line">int main(int argc, const char * argv[]) &#123;</span><br><span class="line">    @autoreleasepool &#123;</span><br><span class="line">        UserClass *user = [[UserClass alloc] initWithName:@&quot;name&quot; Password:@&quot;password&quot;];</span><br><span class="line">        NSDictionary *codeDict = [user convertToDictWithObject:user];//对象转字典，</span><br><span class="line">        NSLog(@&quot;%@&quot;,codeDict);</span><br><span class="line">        NSData *jsonData = [NSJSONSerialization dataWithJSONObject:codeDict options:NSJSONWritingPrettyPrinted error:nil];//字典转json  code</span><br><span class="line">        NSLog(@&quot;%@&quot;,jsonData);</span><br><span class="line">        NSFileManager *fileManager = [NSFileManager defaultManager];</span><br><span class="line">        NSString *path = [NSString stringWithFormat:@&quot;%@/Document/jsonData.json&quot;,NSHomeDirectory()];</span><br><span class="line">        BOOL res=[fileManager createFileAtPath:path contents:nil attributes:nil];</span><br><span class="line">        if (res) &#123;</span><br><span class="line">            NSLog(@&quot;文件创建成功: %@&quot; ,path);</span><br><span class="line">        &#125;else</span><br><span class="line">            NSLog(@&quot;文件创建失败: %@&quot; ,path);</span><br><span class="line">        NSString *jsonStrong = [[NSString alloc] initWithData:jsonData encoding:NSUTF8StringEncoding]; //json转字符串</span><br><span class="line">        NSLog(@&quot;%@&quot;,jsonStrong);</span><br><span class="line">        NSDictionary *decodeDict = [NSJSONSerialization JSONObjectWithData:jsonData options:NSJSONReadingMutableContainers error:nil]; //json Decode</span><br><span class="line">        NSLog(@&quot;%@&quot;,decodeDict);</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> iOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>获取iOS设备型号，目前所有iOS设备</title>
      <link href="/2017/08/18/ios-get-ios-device-model/"/>
      <url>/2017/08/18/ios-get-ios-device-model/</url>
      
        <content type="html"><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>获取iOS设备型号，目前所有iOS设备皆可识别<br> <span id="more"></span><br>下面是.h文件 声明这个返回值为NSString的类方法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">//  GetDeviceModel.h</span><br><span class="line">//  Created by LiynXu on 15/11/10.</span><br><span class="line">//  Copyright © 2015年 LiynXu. All rights reserved.</span><br><span class="line">//  xxl652170427@163.com</span><br><span class="line"></span><br><span class="line">#import &lt;Foundation/Foundation.h&gt;</span><br><span class="line"></span><br><span class="line">@interface GetDeviceModel : NSObject</span><br><span class="line">/*</span><br><span class="line"> 获取设备描述</span><br><span class="line"> */</span><br><span class="line">+ (NSString *)getCurrentDeviceModelDescription;</span><br><span class="line">/*</span><br><span class="line"> 由获取到的设备描述，来匹配设备型号</span><br><span class="line"> */</span><br><span class="line">+ (NSString *)getCurrentDeviceModel;</span><br><span class="line">@end</span><br></pre></td></tr></table></figure><p>返回值为NSString的类方法</p><p> 获取设备描述</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">+ (NSString *)getCurrentDeviceModelDescription&#123;</span><br><span class="line">    int mib[2];</span><br><span class="line">    size_t len;</span><br><span class="line">    char *machine;</span><br><span class="line">    </span><br><span class="line">    mib[0] = CTL_HW;</span><br><span class="line">    mib[1] = HW_MACHINE;</span><br><span class="line">    sysctl(mib, 2, NULL, &amp;len, NULL, 0);</span><br><span class="line">    machine = malloc(len);</span><br><span class="line">    sysctl(mib, 2, machine, &amp;len, NULL, 0);</span><br><span class="line">    </span><br><span class="line">    NSString *platform = [NSString stringWithCString:machine encoding:NSASCIIStringEncoding];</span><br><span class="line">    free(machine);</span><br><span class="line">    return platform;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>由获取到的设备描述，来匹配设备型号</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line">+ (NSString *)getCurrentDeviceModel&#123;</span><br><span class="line">    </span><br><span class="line">    NSString *platform = [GetDeviceModel getCurrentDeviceModelDescription];</span><br><span class="line">    </span><br><span class="line">    if ([platform isEqualToString:@&quot;iPhone1,1&quot;]) return @&quot;iPhone 2G&quot;;</span><br><span class="line">    if ([platform isEqualToString:@&quot;iPhone1,2&quot;]) return @&quot;iPhone 3G&quot;;</span><br><span class="line">    if ([platform isEqualToString:@&quot;iPhone2,1&quot;]) return @&quot;iPhone 3GS&quot;;</span><br><span class="line">    </span><br><span class="line">    if ([platform isEqualToString:@&quot;iPhone3,1&quot;]) return @&quot;iPhone 4&quot;;</span><br><span class="line">    if ([platform isEqualToString:@&quot;iPhone3,2&quot;]) return @&quot;iPhone 4&quot;;</span><br><span class="line">    if ([platform isEqualToString:@&quot;iPhone3,3&quot;]) return @&quot;iPhone 4&quot;;</span><br><span class="line">    if ([platform isEqualToString:@&quot;iPhone4,1&quot;]) return @&quot;iPhone 4S&quot;;</span><br><span class="line">    </span><br><span class="line">    if ([platform isEqualToString:@&quot;iPhone5,1&quot;]) return @&quot;iPhone 5&quot;;</span><br><span class="line">    if ([platform isEqualToString:@&quot;iPhone5,2&quot;]) return @&quot;iPhone 5&quot;;</span><br><span class="line">    </span><br><span class="line">    if ([platform isEqualToString:@&quot;iPhone5,3&quot;]) return @&quot;iPhone 5c&quot;;</span><br><span class="line">    if ([platform isEqualToString:@&quot;iPhone5,4&quot;]) return @&quot;iPhone 5c&quot;;</span><br><span class="line">    </span><br><span class="line">    if ([platform isEqualToString:@&quot;iPhone6,1&quot;]) return @&quot;iPhone 5s&quot;;</span><br><span class="line">    if ([platform isEqualToString:@&quot;iPhone6,2&quot;]) return @&quot;iPhone 5s&quot;;</span><br><span class="line">    </span><br><span class="line">    if ([platform isEqualToString:@&quot;iPhone7,1&quot;]) return @&quot;iPhone 6 Plus&quot;;</span><br><span class="line">    if ([platform isEqualToString:@&quot;iPhone7,2&quot;]) return @&quot;iPhone 6&quot;;</span><br><span class="line">    </span><br><span class="line">    if ([platform isEqualToString:@&quot;iPhone8,1&quot;]) return @&quot;iPhone 6S&quot;;</span><br><span class="line">    if ([platform isEqualToString:@&quot;iPhone8,2&quot;]) return @&quot;iPhone 6S Plus&quot;;</span><br><span class="line">    </span><br><span class="line">    if ([platform isEqualToString:@&quot;iPhone9,1&quot;]) return @&quot;iPhone 7 A1660&quot;;</span><br><span class="line">    if ([platform isEqualToString:@&quot;iPhone9,2&quot;]) return @&quot;iPhone 7 Plus A1661&quot;;</span><br><span class="line">    if ([platform isEqualToString:@&quot;iPhone9,3&quot;]) return @&quot;iPhone 7 A1778&quot;;</span><br><span class="line">    if ([platform isEqualToString:@&quot;iPhone9,4&quot;]) return @&quot;iPhone 7 Plus A1784&quot;;</span><br><span class="line">    </span><br><span class="line">    if ([platform isEqualToString:@&quot;iPod1,1&quot;])   return @&quot;iPod Touch 1G&quot;;</span><br><span class="line">    if ([platform isEqualToString:@&quot;iPod2,1&quot;])   return @&quot;iPod Touch 2G&quot;;</span><br><span class="line">    if ([platform isEqualToString:@&quot;iPod3,1&quot;])   return @&quot;iPod Touch 3G&quot;;</span><br><span class="line">    if ([platform isEqualToString:@&quot;iPod4,1&quot;])   return @&quot;iPod Touch 4G&quot;;</span><br><span class="line">    if ([platform isEqualToString:@&quot;iPod5,1&quot;])   return @&quot;iPod Touch 5G&quot;;</span><br><span class="line">    </span><br><span class="line">    if ([platform isEqualToString:@&quot;iPad1,1&quot;])   return @&quot;iPad 1G&quot;;</span><br><span class="line">    </span><br><span class="line">    if ([platform isEqualToString:@&quot;iPad2,1&quot;])   return @&quot;iPad 2&quot;;</span><br><span class="line">    if ([platform isEqualToString:@&quot;iPad2,2&quot;])   return @&quot;iPad 2&quot;;</span><br><span class="line">    if ([platform isEqualToString:@&quot;iPad2,3&quot;])   return @&quot;iPad 2&quot;;</span><br><span class="line">    if ([platform isEqualToString:@&quot;iPad2,4&quot;])   return @&quot;iPad 2&quot;;</span><br><span class="line">    </span><br><span class="line">    if ([platform isEqualToString:@&quot;iPad2,5&quot;])   return @&quot;iPad Mini 1G&quot;;</span><br><span class="line">    if ([platform isEqualToString:@&quot;iPad2,6&quot;])   return @&quot;iPad Mini 1G&quot;;</span><br><span class="line">    if ([platform isEqualToString:@&quot;iPad2,7&quot;])   return @&quot;iPad Mini 1G&quot;;</span><br><span class="line">    </span><br><span class="line">    if ([platform isEqualToString:@&quot;iPad3,1&quot;])   return @&quot;iPad 3&quot;;</span><br><span class="line">    if ([platform isEqualToString:@&quot;iPad3,2&quot;])   return @&quot;iPad 3&quot;;</span><br><span class="line">    if ([platform isEqualToString:@&quot;iPad3,3&quot;])   return @&quot;iPad 3&quot;;</span><br><span class="line">    if ([platform isEqualToString:@&quot;iPad3,4&quot;])   return @&quot;iPad 4&quot;;</span><br><span class="line">    if ([platform isEqualToString:@&quot;iPad3,5&quot;])   return @&quot;iPad 4&quot;;</span><br><span class="line">    if ([platform isEqualToString:@&quot;iPad3,6&quot;])   return @&quot;iPad 4&quot;;</span><br><span class="line">    </span><br><span class="line">    if ([platform isEqualToString:@&quot;iPad4,1&quot;])   return @&quot;iPad Air&quot;;</span><br><span class="line">    if ([platform isEqualToString:@&quot;iPad4,2&quot;])   return @&quot;iPad Air&quot;;</span><br><span class="line">    if ([platform isEqualToString:@&quot;iPad4,3&quot;])   return @&quot;iPad Air&quot;;</span><br><span class="line">    </span><br><span class="line">    if ([platform isEqualToString:@&quot;iPad4,4&quot;])   return @&quot;iPad Mini 2G &quot;;</span><br><span class="line">    if ([platform isEqualToString:@&quot;iPad4,5&quot;])   return @&quot;iPad Mini 2G &quot;;</span><br><span class="line">    if ([platform isEqualToString:@&quot;iPad4,6&quot;])   return @&quot;iPad Mini 2G &quot;;</span><br><span class="line">    </span><br><span class="line">    if ([platform isEqualToString:@&quot;iPad4,7&quot;])   return @&quot;iPad Mini 3 &quot;;</span><br><span class="line">    if ([platform isEqualToString:@&quot;iPad4,8&quot;])   return @&quot;iPad Mini 3 &quot;;</span><br><span class="line">    if ([platform isEqualToString:@&quot;iPad4,9&quot;])   return @&quot;iPad Mini 3 &quot;;</span><br><span class="line">    </span><br><span class="line">    if ([platform isEqualToString:@&quot;iPad5,1&quot;])   return @&quot;iPad Mini 4 WiFi  &quot;;</span><br><span class="line">    if ([platform isEqualToString:@&quot;iPad5,2&quot;])   return @&quot;iPad Mini 4 WiFi+Cellular &quot;;</span><br><span class="line">    </span><br><span class="line">    if ([platform isEqualToString:@&quot;iPad5,3&quot;])   return @&quot;iPad Air2 &quot;;</span><br><span class="line">    if ([platform isEqualToString:@&quot;iPad5,4&quot;])   return @&quot;iPad Air2 &quot;;</span><br><span class="line">    </span><br><span class="line">    if ([platform isEqualToString:@&quot;iPad6,7&quot;])   return @&quot;iPad Pro WiFi 12.7-inch&quot;;</span><br><span class="line">    if ([platform isEqualToString:@&quot;iPad6,8&quot;])   return @&quot;iPad Pro WiFi+Cellular 12.7-inch&quot;;</span><br><span class="line">    </span><br><span class="line">    if ([platform isEqualToString:@&quot;iPad6,3&quot;])   return @&quot;iPad Pro WiFi 9.7-inch&quot;;</span><br><span class="line">    if ([platform isEqualToString:@&quot;iPad6,4&quot;])   return @&quot;iPad Pro WiFi+Cellular 9.7-inch&quot;;</span><br><span class="line">    </span><br><span class="line">    if ([platform isEqualToString:@&quot;i386&quot;])      return @&quot;iPhone Simulator&quot;;</span><br><span class="line">    if ([platform isEqualToString:@&quot;x86_64&quot;])    return @&quot;iPhone Simulator&quot;;</span><br><span class="line">    return platform;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如何使用<br>首先在.m文件中导入以下两个头文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#import &quot;GetDeviceModel.h&quot;</span><br><span class="line">#import &lt;sys/sysctl.h&gt;</span><br></pre></td></tr></table></figure><p>然后在需要获取设备型号地方这样写,用一个NSString类型的对象接收</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">NSString *string = [GetDeviceModel getCurrentDeviceModel];</span><br><span class="line">NSLog(@&quot;设备型号:%@&quot;,string);</span><br></pre></td></tr></table></figure><p>也可以给当前app的AppDelegate添加一个DeviceModel属性,一下是AppDelegate的.h文件内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#import &lt;UIKit/UIKit.h&gt;</span><br><span class="line"></span><br><span class="line">@interface AppDelegate : UIResponder &lt;UIApplicationDelegate&gt;</span><br><span class="line"></span><br><span class="line">@property (strong, nonatomic) UIWindow *window;</span><br><span class="line">@property (nonatomic,copy) NSString *DeviceModel;</span><br><span class="line">@end</span><br></pre></td></tr></table></figure><p>然后直接想下面这样用就行了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">self.DeviceModel = [GetDeviceModel getCurrentDeviceModel];</span><br></pre></td></tr></table></figure><p>完整代码演示：<a href="https://git.oschina.net/LiynXu/GetDeviceModel.git">https://git.oschina.net/LiynXu/GetDeviceModel.git</a> 欢迎访问！<br>效果展示：<br><img src="http://img.blog.csdn.net/20161230172536880?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvWnVvV2VpWGlhb0R1WnVvWnVv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> iOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iOS HealthKit简单介绍</title>
      <link href="/2017/08/18/ios-healthkit/"/>
      <url>/2017/08/18/ios-healthkit/</url>
      
        <content type="html"><![CDATA[<h2 id="HealthKit简单介绍"><a href="#HealthKit简单介绍" class="headerlink" title="HealthKit简单介绍"></a>HealthKit简单介绍</h2><p>目前很多App都会有访问健康数据的需求，那么我们就不得不使用HealthKit。HealthKit框架提供了一个结构，应用可以使用它来分享健康和健身数据。HealthKit管理从不同来源获得的数据，并根据用户的偏好设置，自动将不同来源的所有数据合并起来。应用还可以获取每个来源的原始数据，然后执行自己的数据合并。<br> <span id="more"></span></p><h2 id="如何在项目中集成HealthKit"><a href="#如何在项目中集成HealthKit" class="headerlink" title="如何在项目中集成HealthKit"></a>如何在项目中集成HealthKit</h2><p>这一个部分我们将一步一步的在项目中集成HealthKit。</p><h3 id="第一步添加HealthKit"><a href="#第一步添加HealthKit" class="headerlink" title="第一步添加HealthKit"></a>第一步添加HealthKit</h3><p>1、进入项目设置–&gt;Capabilities–&gt;HealthKit，然后如下图打开就可以了，如果下面几个选项前都打上了勾的话，那么就代表OK了，一般也不会出现X。<br><img src="http://img.blog.csdn.net/20170303223122622?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvWnVvV2VpWGlhb0R1WnVvWnVv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p>2、如果上面的步骤完成了的话那么在工程目录下会多一个文件，这个文件以工程名命名，后缀名为entitlements，如下图：<br><img src="http://img.blog.csdn.net/20170303223928022?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvWnVvV2VpWGlhb0R1WnVvWnVv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p>3、并且在Frameworks目录下会多一个HealthKit.framework文件：<br><img src="http://img.blog.csdn.net/20170303225753734?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvWnVvV2VpWGlhb0R1WnVvWnVv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><h3 id="项目中的使用"><a href="#项目中的使用" class="headerlink" title="项目中的使用"></a>项目中的使用</h3><p>首先要在需要访问健康数据的地方，使用import导入HealthKit头文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#import &lt;HealthKit/HealthKit.h&gt;</span><br></pre></td></tr></table></figure><p>然后写一个属性：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@property (nonatomic, strong) HKHealthStore *healthStore;</span><br></pre></td></tr></table></figure><p>1、这一步为你的应用实例化一个 HKHealthStore 对象。每个应用只需要一个HealthKit存储实例。这个存储实例就是你和HealthKit数据库交互的主要接口。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">self.healthStore = [[HKHealthStore alloc] init];</span><br></pre></td></tr></table></figure><p>2、 调用 isHealthDataAvailable 方法来查看HealthKit在该设备上是否可用。HealthKit在iPad上不可用。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if ([HKHealthStore isHealthDataAvailable]) &#123;</span><br><span class="line">        NSLog(@&quot;HealthDataAvailable&quot;);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>3、在项目中具体代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">//创建想要获取的数据类型</span><br><span class="line">    HKObjectType *stepCpunt = [HKObjectType quantityTypeForIdentifier:HKQuantityTypeIdentifierStepCount];//步数</span><br><span class="line">    HKObjectType *Height = [HKObjectType quantityTypeForIdentifier:HKQuantityTypeIdentifierHeight];//身高</span><br><span class="line">    HKObjectType *BodyMass = [HKObjectType quantityTypeForIdentifier:HKQuantityTypeIdentifierBodyMass];//体重</span><br><span class="line">    HKObjectType *DistanceWalkingRunning = [HKObjectType quantityTypeForIdentifier:HKQuantityTypeIdentifierDistanceWalkingRunning];//步行+跑步距离</span><br><span class="line">    HKObjectType *DistanceCycling = [HKObjectType quantityTypeForIdentifier:HKQuantityTypeIdentifierDistanceCycling];//骑行距离</span><br><span class="line">    //一个集合，数据类型</span><br><span class="line">    NSSet *healthSet = [NSSet setWithObjects:stepCpunt,Height,BodyMass,DistanceWalkingRunning,DistanceCycling,nil];</span><br><span class="line">    //[self.healthStore requestAuthorizationToShareTypes:nil readTypes:healthSet completion:nil];</span><br><span class="line">    </span><br><span class="line">    //向系统的健康APP请求数据，并回调结果</span><br><span class="line">    [self.healthStore requestAuthorizationToShareTypes:nil readTypes:healthSet completion:^(BOOL success, NSError * _Nullable error) &#123;</span><br><span class="line">        if (success) &#123;</span><br><span class="line">            NSLog(@&quot;requestAuthorization success&quot;);</span><br><span class="line">            [self readHealthData:HKQuantityTypeIdentifierStepCount];</span><br><span class="line">            [self readHealthData:HKQuantityTypeIdentifierDistanceWalkingRunning];</span><br><span class="line">            [self readHealthData:HKQuantityTypeIdentifierDistanceCycling];</span><br><span class="line">            [self readHealthData:HKQuantityTypeIdentifierHeight];</span><br><span class="line">            [self readHealthData:HKQuantityTypeIdentifierBodyMass];</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">        NSLog(@&quot;requestAuthorization error&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;];</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>具体的数据获的操作</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">//查询数据</span><br><span class="line">- (void)readHealthData:(NSString* )HKQuantityTypeIdentifierType&#123;</span><br><span class="line">    //查询采样信息</span><br><span class="line">    HKSampleType *sampleType = [HKQuantityType quantityTypeForIdentifier:HKQuantityTypeIdentifierType];</span><br><span class="line">    </span><br><span class="line">    //NSSortDescriptors用来告诉healthStore怎么样将结果排序。</span><br><span class="line">    NSSortDescriptor *start = [NSSortDescriptor sortDescriptorWithKey:HKSampleSortIdentifierStartDate ascending:NO];</span><br><span class="line">    NSSortDescriptor *end = [NSSortDescriptor sortDescriptorWithKey:HKSampleSortIdentifierEndDate ascending:NO];</span><br><span class="line">    /*</span><br><span class="line">     查询的基类是HKQuery，这是一个抽象类，能够实现每一种查询目标，这里我们需要查询的步数是一个</span><br><span class="line">     HKSample类所以对应的查询类就是HKSampleQuery。</span><br><span class="line">     下面的limit参数传1表示查询最近一条数据,查询多条数据只要设置limit的参数值就可以了</span><br><span class="line">     在这里我们需要定义block里面执行哪些语句</span><br><span class="line">     */</span><br><span class="line">    HKSampleQuery *sampleQuery = [[HKSampleQuery alloc] initWithSampleType:sampleType predicate:nil limit:2 sortDescriptors:@[start,end] resultsHandler:^(HKSampleQuery * _Nonnull query, NSArray&lt;__kindof HKSample *&gt; * _Nullable results, NSError * _Nullable error) &#123;</span><br><span class="line">        //打印查询结果</span><br><span class="line">        NSLog(@&quot;resultCount = %ld result = %@&quot;,results.count,results);</span><br><span class="line">        //把结果装换成字符串类型</span><br><span class="line">        if (results.count!=0) &#123;</span><br><span class="line">        HKQuantitySample *result = results[0];</span><br><span class="line">        HKQuantity *quantity = result.quantity;</span><br><span class="line">        NSString *stepStr = (NSString *)quantity;</span><br><span class="line">        [[NSOperationQueue mainQueue] addOperationWithBlock:^&#123;</span><br><span class="line">            //查询是在多线程中进行的，如果要对UI进行刷新，要回到主线程中</span><br><span class="line">            NSLog(@&quot;最新数据：%@&quot;,stepStr);</span><br><span class="line">        &#125;];</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            NSLog(@&quot;没有健康数据&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;];</span><br><span class="line">    //执行查询</span><br><span class="line">    [self.healthStore executeQuery:sampleQuery];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h3><p>在这里</p><p><img src="http://img.blog.csdn.net/20170306144520400?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvWnVvV2VpWGlhb0R1WnVvWnVv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> iOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iOS日志本地化--日志重定向</title>
      <link href="/2017/08/18/ios-ri-zhi-ben-di-hua-ri-zhi-chong-ding-xiang/"/>
      <url>/2017/08/18/ios-ri-zhi-ben-di-hua-ri-zhi-chong-ding-xiang/</url>
      
        <content type="html"><![CDATA[<h4 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a><strong>写在前面</strong></h4><p>本文主要是给读者分享技术的，如何保存能控制台输出的log，以便于查找程序本身出现的问题。</p><h4 id="我们该如何做"><a href="#我们该如何做" class="headerlink" title="我们该如何做"></a><strong>我们该如何做</strong></h4> <span id="more"></span><h5 id="首先"><a href="#首先" class="headerlink" title="首先"></a>首先</h5><p>我们要判断，是不是模拟器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#if !(TARGET_IPHONE_SIMULATOR)//真机</span><br><span class="line">    //连接xcode时可以从监视器中看日志 没连接时Log日志会输出到文件中，</span><br><span class="line">    [self redirectNSLogToDocumentFolder];</span><br><span class="line">    NSLog(@&quot;真机&quot;);</span><br><span class="line">#else//模拟器</span><br><span class="line">    NSLog(@&quot;模拟器&quot;);</span><br><span class="line">#endif</span><br></pre></td></tr></table></figure><h5 id="其次"><a href="#其次" class="headerlink" title="其次"></a>其次</h5><p>我们还要接着判断是不是真机连接了Xcode，然后才开始进行日志本地化文件的生成</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">- (void)redirectNSLogToDocumentFolder&#123;</span><br><span class="line">    //如果已经连接Xcode调试则不输出到文件</span><br><span class="line">    if(isatty(STDOUT_FILENO)) &#123;</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    UIDevice *device = [UIDevice currentDevice];</span><br><span class="line">    if([[device model] hasSuffix:@&quot;Simulator&quot;])&#123; //在模拟器不保存到文件中</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    //将NSlog打印信息保存到Document目录下的Log文件夹下</span><br><span class="line">    NSArray *paths = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);</span><br><span class="line">    NSString *logDirectory = [[paths objectAtIndex:0] stringByAppendingPathComponent:@&quot;Log&quot;];</span><br><span class="line">    </span><br><span class="line">    NSFileManager *fileManager = [NSFileManager defaultManager];</span><br><span class="line">    BOOL fileExists = [fileManager fileExistsAtPath:logDirectory];</span><br><span class="line">    if (!fileExists) &#123;</span><br><span class="line">        [fileManager createDirectoryAtPath:logDirectory  withIntermediateDirectories:YES attributes:nil error:nil];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    NSDateFormatter *formatter = [[NSDateFormatter alloc] init];</span><br><span class="line">    [formatter setLocale:[[NSLocale alloc] initWithLocaleIdentifier:@&quot;zh_CN&quot;]];</span><br><span class="line">    [formatter setDateFormat:@&quot;yyyy-MM-dd HH:mm:ss&quot;]; //每次启动后都保存一个新的日志文件中</span><br><span class="line">    NSString *dateStr = [formatter stringFromDate:[NSDate date]];</span><br><span class="line">    self.filepath = [logDirectory stringByAppendingFormat:@&quot;/%@.log&quot;,dateStr];</span><br><span class="line">    </span><br><span class="line">    // 将log输入到文件</span><br><span class="line">    freopen([self.filepath cStringUsingEncoding:NSASCIIStringEncoding], &quot;a+&quot;, stdout);</span><br><span class="line">    freopen([self.filepath cStringUsingEncoding:NSASCIIStringEncoding], &quot;a+&quot;, stderr);</span><br><span class="line">    </span><br><span class="line">    //未捕获的Objective-C异常日志</span><br><span class="line">    NSSetUncaughtExceptionHandler (&amp;UncaughtExceptionHandler);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h5><p>这是一个报错的异常信息，也就是我们所说的崩溃信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">void UncaughtExceptionHandler(NSException* exception)</span><br><span class="line">&#123;</span><br><span class="line">    NSString* name = [ exception name ];</span><br><span class="line">    NSString* reason = [ exception reason ];</span><br><span class="line">    NSArray* symbols = [ exception callStackSymbols ]; // 异常发生时的调用栈</span><br><span class="line">    NSMutableString* strSymbols = [ [ NSMutableString alloc ] init ]; //将调用栈拼成输出日志的字符串</span><br><span class="line">    for ( NSString* item in symbols )</span><br><span class="line">    &#123;</span><br><span class="line">        [ strSymbols appendString: item ];</span><br><span class="line">        [ strSymbols appendString: @&quot;\r\n&quot; ];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    //将crash日志保存到Document目录下的Log文件夹下</span><br><span class="line">    NSArray *paths = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);</span><br><span class="line">    NSString *logDirectory = [[paths objectAtIndex:0] stringByAppendingPathComponent:@&quot;Log&quot;];</span><br><span class="line">    </span><br><span class="line">    NSFileManager *fileManager = [NSFileManager defaultManager];</span><br><span class="line">    if (![fileManager fileExistsAtPath:logDirectory]) &#123;</span><br><span class="line">        [fileManager createDirectoryAtPath:logDirectory  withIntermediateDirectories:YES attributes:nil error:nil];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    //NSString *logFilePath = [logDirectory stringByAppendingPathComponent:@&quot;UncaughtException.log&quot;];</span><br><span class="line">    NSDateFormatter *formatter = [[NSDateFormatter alloc] init];</span><br><span class="line">    [formatter setLocale:[[NSLocale alloc] initWithLocaleIdentifier:@&quot;zh_CN&quot;]];</span><br><span class="line">    [formatter setDateFormat:@&quot;yyyy-MM-dd HH:mm:ss&quot;];</span><br><span class="line">    </span><br><span class="line">    AppDelegate *app = [UIApplication sharedApplication].delegate;</span><br><span class="line">    NSString *dateStr = [formatter stringFromDate:app.date];</span><br><span class="line">    </span><br><span class="line">    NSString *crashString = [NSString stringWithFormat:@&quot;&lt;- %@ -&gt;[ Uncaught Exception ]\r\nName: %@, Reason: %@\r\n[ Fe Symbols Start ]\r\n%@[ Fe Symbols End ]\r\n\r\n&quot;, dateStr, name, reason, strSymbols];</span><br><span class="line">    //把错误日志写到文件中</span><br><span class="line">    if (![fileManager fileExistsAtPath:app.filepath]) &#123;</span><br><span class="line">        [crashString writeToFile:app.filepath atomically:YES encoding:NSUTF8StringEncoding error:nil];</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        NSFileHandle *outFile = [NSFileHandle fileHandleForWritingAtPath:app.filepath];</span><br><span class="line">        [outFile seekToEndOfFile];</span><br><span class="line">        [outFile writeData:[crashString dataUsingEncoding:NSUTF8StringEncoding]];</span><br><span class="line">        [outFile closeFile];</span><br><span class="line">    &#125;</span><br><span class="line">    //把错误日志发送到邮箱</span><br><span class="line">    NSString *urlStr = [NSString stringWithFormat:@&quot;mailto://邮箱账号?subject=bug报告&amp;body=感谢您的配合!错误详情:%@&quot;,crashString ];</span><br><span class="line">    NSURL *url = [NSURL URLWithString:[urlStr stringByAddingPercentEscapesUsingEncoding:NSUTF8StringEncoding]];</span><br><span class="line">    [[UIApplication sharedApplication] openURL:url];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h5><p>在AppDelegate的这个方法中编写如下代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions &#123;</span><br><span class="line">#if !(TARGET_IPHONE_SIMULATOR)//真机</span><br><span class="line">    //连接xcode时可以从监视器中看日志 没连接时Log日志会输出到文件中，</span><br><span class="line">    [self redirectNSLogToDocumentFolder];</span><br><span class="line">    NSLog(@&quot;真机&quot;);</span><br><span class="line">#else//模拟器</span><br><span class="line">    NSLog(@&quot;模拟器&quot;);</span><br><span class="line">#endif</span><br><span class="line">return YES;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> iOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解除百度网盘下载限速</title>
      <link href="/2017/08/09/release-baidunetdisk-downloading-speed-limit/"/>
      <url>/2017/08/09/release-baidunetdisk-downloading-speed-limit/</url>
      
        <content type="html"><![CDATA[<p>众所周知的百度网盘为了迫使用户花钱，对用户的下载速度做出了限制。今天我就来分享一个破解限制的好办法，这个也是网上扒来的。<br> <span id="more"></span></p><h4 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h4><p>1、下载相关资料，也就是两个文件：<a href="http://pan.baidu.com/s/1nuPgpNN">http://pan.baidu.com/s/1nuPgpNN</a></p><p>2、安装chrome浏览器</p><p>3、安装下载的Aria2GUI 1.3.7.dmg</p><p>4、安装chrome插件BaiduExporter.zip</p><p>解压这个zip文件，然后打开chrome，</p><p><img src="http://upload-images.jianshu.io/upload_images/1519926-88222a108071279b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="安装步骤1"></p><p><img src="http://upload-images.jianshu.io/upload_images/1519926-6e8702b54479388c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="安装步骤2"></p><p><img src="http://upload-images.jianshu.io/upload_images/1519926-aaab1c25ca4e9f57.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="安装步骤3"></p><p><img src="http://upload-images.jianshu.io/upload_images/1519926-3e70ff8b319a20f6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="安装步骤4"></p><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><p>1、打开刚刚安装的Aria2GUI客户端</p><p><img src="http://upload-images.jianshu.io/upload_images/1519926-4dba49a5c0e21450.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图片.png"></p><p>2、在chrome里面打开百度云网页,插件安装成功网页上就会多出一个“导出下载”的按钮</p><p><img src="http://upload-images.jianshu.io/upload_images/1519926-eb4d9ce68643c1b2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图片.png"></p><p>3、找到你要下载的文件，并且勾选文件（这里最好先把文件存入自己的网盘目录）,然后点击ARIA2 RPC下载任务就会被客户端执行</p><p><img src="http://upload-images.jianshu.io/upload_images/1519926-00af7cefab9ef166.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图片.png"><br>4、看一下速度</p><p><img src="http://upload-images.jianshu.io/upload_images/1519926-f7664495cee555af.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="牛逼了"></p><h4 id="ATTENSION！！！"><a href="#ATTENSION！！！" class="headerlink" title="ATTENSION！！！"></a>ATTENSION！！！</h4><p>本项目是MAC OS专用的，windows的目前不清楚<br>安装chrome插件之后,插件原文件就不能移动位置,更不能删除,否则插件就会失效.</p>]]></content>
      
      
      
        <tags>
            
            <tag> 转载 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iOS--富文本推送UIMutableUserNotificationAction</title>
      <link href="/2017/07/18/ios-uimutableusernotificationaction/"/>
      <url>/2017/07/18/ios-uimutableusernotificationaction/</url>
      
        <content type="html"><![CDATA[<p> iOS10富文本推送–UIMutableUserNotificationAction</p> <span id="more"></span><h3 id="AppDelagate文件"><a href="#AppDelagate文件" class="headerlink" title="AppDelagate文件"></a>AppDelagate文件</h3><h4 id="添加action"><a href="#添加action" class="headerlink" title="添加action"></a>添加action</h4><p>根据以下ContentExtension Info.plist文件中的配置决定category的设置，两者必须一致<br><img src="http://upload-images.jianshu.io/upload_images/1519926-7fefc908b0ad05c4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="ContentExtension Info.plist"></p><p>宏定义采用下列代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">//推送相关设置</span><br><span class="line">#define Action_Category_Identifier_Image @&quot;Image_Category&quot; //图片类别标识符</span><br><span class="line">#define Action_Category_Identifier_Audio @&quot;Audio_Category&quot; //音频类别标识符</span><br><span class="line">#define Action_Category_Identifier_Movie @&quot;Movie_Category&quot; //视频类别标识符</span><br><span class="line">#define Action_Identifier_Image_Confirm @&quot;imageConfirmAction&quot;  //图片确认按钮</span><br><span class="line">#define Action_Identifier_Image_Concel  @&quot;imageConcelAction&quot;   //图片取消按钮</span><br><span class="line">#define Action_Identifier_Audio_Confirm @&quot;audioConfirmAction&quot;  //音频确认按钮</span><br><span class="line">#define Action_Identifier_Audio_Concel  @&quot;audioConcelAction&quot;   //音频取消按钮</span><br><span class="line">#define Action_Identifier_Movie_Confirm @&quot;movieConfirmAction&quot;  //视频确认按钮</span><br><span class="line">#define Action_Identifier_Movie_Concel  @&quot;movieConcelAction&quot;   //视频取消按钮</span><br><span class="line">#define Action_Title_Image_Confirm @&quot;查看&quot;  //图片确认按钮标题</span><br><span class="line">#define Action_Title_Image_Concel  @&quot;忽略&quot;  //图片取消按钮标题</span><br><span class="line">#define Action_Title_Audio_Confirm @&quot;查看&quot;  //音频确认按钮标题</span><br><span class="line">#define Action_Title_Audio_Concel  @&quot;忽略&quot;  //音频取消按钮标题</span><br><span class="line">#define Action_Title_Movie_Confirm @&quot;查看&quot;  //视频确认按钮标题</span><br><span class="line">#define Action_Title_Movie_Concel  @&quot;忽略&quot;  //视频取消按钮标题</span><br></pre></td></tr></table></figure><p>添加相应类别的aciton，一个类别必须对应一个category，<br>在下面这个方法里面执行,</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">//添加相应类别的aciton，一个类别必须对应一个category</span><br><span class="line">- (void)addNotificationAction&#123;</span><br><span class="line">    </span><br><span class="line">    //Image_Category</span><br><span class="line">    UIMutableUserNotificationAction *imageConfirmAction = [self creatNotificationActionIdentifier:Action_Identifier_Image_Confirm</span><br><span class="line">                                                                                            title:Action_Title_Image_Confirm</span><br><span class="line">                                                                                   activationMode:UIUserNotificationActivationModeForeground];</span><br><span class="line">    imageConfirmAction.authenticationRequired = YES;</span><br><span class="line">    imageConfirmAction.destructive = YES;</span><br><span class="line">    </span><br><span class="line">    UIMutableUserNotificationAction *imageConcelAction = [self creatNotificationActionIdentifier:Action_Identifier_Image_Concel</span><br><span class="line">                                                                                           title:Action_Title_Image_Concel</span><br><span class="line">                                                                                  activationMode:UIUserNotificationActivationModeBackground];</span><br><span class="line">    UIMutableUserNotificationCategory *ImageCategory = [self creatNotificationCategoryIdentifier:Action_Category_Identifier_Image</span><br><span class="line">                                                                                      setActions:@[imageConfirmAction,imageConcelAction]</span><br><span class="line">                                                                                      forContext:UIUserNotificationActionContextDefault];</span><br><span class="line">    </span><br><span class="line">    //Audio_Category</span><br><span class="line">    UIMutableUserNotificationAction *audioConfirmAction = [self creatNotificationActionIdentifier:Action_Identifier_Audio_Confirm</span><br><span class="line">                                                                                            title:Action_Title_Audio_Confirm</span><br><span class="line">                                                                                   activationMode:UIUserNotificationActivationModeForeground];</span><br><span class="line">    audioConfirmAction.authenticationRequired = YES;</span><br><span class="line">    audioConfirmAction.destructive = YES;</span><br><span class="line">    </span><br><span class="line">    UIMutableUserNotificationAction *audioConcelAction = [self creatNotificationActionIdentifier:Action_Identifier_Audio_Concel</span><br><span class="line">                                                                                           title:Action_Title_Audio_Concel</span><br><span class="line">                                                                                  activationMode:UIUserNotificationActivationModeBackground];</span><br><span class="line">    UIMutableUserNotificationCategory *audioCategory = [self creatNotificationCategoryIdentifier:Action_Category_Identifier_Audio</span><br><span class="line">                                                                                      setActions:@[audioConfirmAction,audioConcelAction]</span><br><span class="line">                                                                                      forContext:UIUserNotificationActionContextDefault];</span><br><span class="line">    //Movie_Category</span><br><span class="line">    UIMutableUserNotificationAction *movieConfirmAction = [self creatNotificationActionIdentifier:Action_Identifier_Movie_Confirm</span><br><span class="line">                                                                                            title:Action_Title_Movie_Confirm</span><br><span class="line">                                                                                   activationMode:UIUserNotificationActivationModeForeground];</span><br><span class="line">    movieConfirmAction.authenticationRequired = YES;</span><br><span class="line">    movieConfirmAction.destructive = YES;</span><br><span class="line">    </span><br><span class="line">    UIMutableUserNotificationAction *movieConcelAction = [self creatNotificationActionIdentifier:Action_Identifier_Movie_Concel</span><br><span class="line">                                                                                           title:Action_Title_Movie_Concel</span><br><span class="line">                                                                                  activationMode:UIUserNotificationActivationModeBackground];</span><br><span class="line">    UIMutableUserNotificationCategory *movieCategory = [self creatNotificationCategoryIdentifier:Action_Category_Identifier_Movie</span><br><span class="line">                                                                                      setActions:@[movieConfirmAction,movieConcelAction]</span><br><span class="line">                                                                                      forContext:UIUserNotificationActionContextDefault];</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    NSSet *categories = [NSSet setWithObjects:ImageCategory,audioCategory,movieCategory,nil];</span><br><span class="line">    UIUserNotificationType types = (UIUserNotificationTypeAlert|</span><br><span class="line">                                    UIUserNotificationTypeSound|</span><br><span class="line">                                    UIUserNotificationTypeBadge);</span><br><span class="line">    </span><br><span class="line">    UIUserNotificationSettings *settings;</span><br><span class="line">    settings = [UIUserNotificationSettings settingsForTypes:types</span><br><span class="line">                                                 categories:categories];</span><br><span class="line">    </span><br><span class="line">    [[UIApplication sharedApplication] registerUserNotificationSettings:settings]; </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>创建一个category</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">//创建一个category</span><br><span class="line">- (UIMutableUserNotificationCategory*)creatNotificationCategoryIdentifier:(NSString *)identifier</span><br><span class="line">                                                               setActions:(nullable NSArray&lt;UIUserNotificationAction *&gt; *)actions</span><br><span class="line">                                                               forContext:(UIUserNotificationActionContext)context</span><br><span class="line">&#123;</span><br><span class="line">    UIMutableUserNotificationCategory *category = [[UIMutableUserNotificationCategory alloc] init];</span><br><span class="line">    category.identifier = identifier;//这组动作的唯一标示</span><br><span class="line">    [category setActions:actions forContext:context];</span><br><span class="line">    return category;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>创建一个action</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">//创建一个action</span><br><span class="line">-(UIMutableUserNotificationAction *)creatNotificationActionIdentifier:(NSString *)identifier</span><br><span class="line">                                                                title:(NSString *)title</span><br><span class="line">                                                       activationMode:(UIUserNotificationActivationMode)activationMode</span><br><span class="line">&#123;</span><br><span class="line">    UIMutableUserNotificationAction *action = [[UIMutableUserNotificationAction alloc] init];  //第二按钮</span><br><span class="line">    action.identifier = identifier;</span><br><span class="line">    action.title = title;</span><br><span class="line">    action.activationMode = activationMode;</span><br><span class="line">    return action;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> iOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iOS--富文本推送NotificationServiceExtension</title>
      <link href="/2017/07/18/ios-notificationserviceextension/"/>
      <url>/2017/07/18/ios-notificationserviceextension/</url>
      
        <content type="html"><![CDATA[<p>添加http协议支持，没错，这里是支持http协议的，不像其他文章说的不支持<br>配置在另外基础篇文章里面有，info.plist文件里修改一下就行了</p> <span id="more"></span><p><img src="http://upload-images.jianshu.io/upload_images/1519926-892db870b6756ca8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="NotificationService info.plist"></p><h3 id="NotificationService文件"><a href="#NotificationService文件" class="headerlink" title="NotificationService文件"></a>NotificationService文件</h3><p>额外添加了一个文件管理器的字段，用来存储数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">@interface NotificationService ()</span><br><span class="line"></span><br><span class="line">@property (nonatomic, strong) void (^contentHandler)(UNNotificationContent *contentToDeliver);</span><br><span class="line">@property (nonatomic, strong) UNMutableNotificationContent *bestAttemptContent;</span><br><span class="line">@property (nonatomic, strong) NSFileManager *fileMgr;</span><br><span class="line">@property (nonatomic, strong) NSURLSessionDownloadTask *download;</span><br><span class="line">@property (nonatomic, strong) NSURLSession *session;</span><br><span class="line">@property (nonatomic, strong) NSDictionary *userInfo;</span><br><span class="line">@property (nonatomic, strong) NSURL *attchUrl;</span><br><span class="line">@property (nonatomic, strong) NSString *imageExtension;</span><br><span class="line">@end</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@implementation NotificationService</span><br></pre></td></tr></table></figure><p>LazyLoad</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-(NSFileManager *)fileMgr&#123;</span><br><span class="line">    return [NSFileManager defaultManager];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>网络session</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-(NSURLSession *)session&#123;</span><br><span class="line">    if (_session == nil) &#123;</span><br><span class="line">        _session = [NSURLSession sessionWithConfiguration:[NSURLSessionConfiguration defaultSessionConfiguration]];</span><br><span class="line">    &#125;</span><br><span class="line">    return _session;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下载任务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">-(NSURLSessionDownloadTask *)download&#123;</span><br><span class="line">    if (!_download) &#123;</span><br><span class="line">       _download = [self.session downloadTaskWithURL:self.attchUrl completionHandler:^(NSURL * _Nullable tempLocation, NSURLResponse * _Nullable response, NSError * _Nullable error) &#123;</span><br><span class="line">            if (!error) &#123;</span><br><span class="line">                NSURL *localURL = [NSURL fileURLWithPath:[tempLocation.path stringByAppendingString:self.imageExtension]];</span><br><span class="line">                [self.fileMgr moveItemAtURL:tempLocation toURL:localURL error:&amp;error];</span><br><span class="line">                NSError *attachmentError = nil;</span><br><span class="line">                UNNotificationAttachment * attachment = [UNNotificationAttachment attachmentWithIdentifier:@&quot;photo&quot; URL:localURL options:nil error:&amp;attachmentError];</span><br><span class="line">                if (attachmentError) &#123;</span><br><span class="line">                    NSLog(@&quot;attachmentError %@&quot;,attachmentError);</span><br><span class="line">                &#125;else if (attachment)&#123;</span><br><span class="line">                    self.bestAttemptContent.attachments = @[attachment];</span><br><span class="line">                &#125;else&#123;</span><br><span class="line">                    </span><br><span class="line">                &#125;</span><br><span class="line">            &#125;else&#123;</span><br><span class="line">                NSLog(@&quot;downloadTaskerror %@&quot;,error.localizedDescription);</span><br><span class="line">            &#125;</span><br><span class="line">            self.bestAttemptContent.categoryIdentifier = self.userInfo[@&quot;aps&quot;][@&quot;category&quot;];</span><br><span class="line">            self.contentHandler(self.bestAttemptContent);</span><br><span class="line">        &#125;];</span><br><span class="line">    &#125;</span><br><span class="line">    return _download;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>收到远程通知之后，在当前方法内进行处理，并生成attchment，最终回调给系统</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">- (void)didReceiveNotificationRequest:(UNNotificationRequest *)request withContentHandler:(void (^)(UNNotificationContent * _Nonnull))contentHandler &#123;</span><br><span class="line">   self.contentHandler = contentHandler;</span><br><span class="line">    self.bestAttemptContent = [request.content mutableCopy];</span><br><span class="line">    self.resumeTime = 0;</span><br><span class="line">    self.userInfo = [request.content.userInfo copy];</span><br><span class="line">    NSString * attchUrl = self.userInfo[@&quot;image&quot;];</span><br><span class="line">    self.imageExtension = [NSString stringWithFormat:@&quot;.%@&quot;,[[attchUrl componentsSeparatedByString:@&quot;.&quot;] lastObject]];</span><br><span class="line">    if (attchUrl) &#123;</span><br><span class="line">        self.attchUrl = [NSURL URLWithString:attchUrl];</span><br><span class="line">        [self resumeSession];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>开始执行下载多媒体资源任务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- (void)resumeSession&#123;</span><br><span class="line">    [self.download resume];</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>超时，异常时调用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">- (void)serviceExtensionTimeWillExpire &#123;</span><br><span class="line">    // Called just before the extension will be terminated by the system.</span><br><span class="line">    // Use this as an opportunity to deliver your &quot;best attempt&quot; at modified content, otherwise the original push payload will be used.</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    self.contentHandler(self.bestAttemptContent);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@end</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> iOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iOS--富文本推送NotificationContentExtension</title>
      <link href="/2017/07/18/ios-notificationcontentextension/"/>
      <url>/2017/07/18/ios-notificationcontentextension/</url>
      
        <content type="html"><![CDATA[<h3 id="NotificationContentExtension文件"><a href="#NotificationContentExtension文件" class="headerlink" title="NotificationContentExtension文件"></a>NotificationContentExtension文件</h3><p>根据以下ContentExtension Info.plist文件中的配置决定category的设置，两者必须一致：</p> <span id="more"></span><ul><li>NSExtensionPrincipalClass对应的值是你展示视图的controller（这里就是NotificationViewController）</li></ul><p><img src="http://upload-images.jianshu.io/upload_images/1519926-7fefc908b0ad05c4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="ContentExtension Info.plist"></p><p>宏定义采用下列代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">//推送相关设置</span><br><span class="line">#define Action_Category_Identifier_Image @&quot;Image_Category&quot; //图片类别标识符</span><br><span class="line">#define Action_Category_Identifier_Audio @&quot;Audio_Category&quot; //音频类别标识符</span><br><span class="line">#define Action_Category_Identifier_Movie @&quot;Movie_Category&quot; //视频类别标识符</span><br><span class="line">#define Action_Identifier_Image_Confirm @&quot;imageConfirmAction&quot;  //图片确认按钮</span><br><span class="line">#define Action_Identifier_Image_Concel  @&quot;imageConcelAction&quot;   //图片取消按钮</span><br><span class="line">#define Action_Identifier_Audio_Confirm @&quot;audioConfirmAction&quot;  //音频确认按钮</span><br><span class="line">#define Action_Identifier_Audio_Concel  @&quot;audioConcelAction&quot;   //音频取消按钮</span><br><span class="line">#define Action_Identifier_Movie_Confirm @&quot;movieConfirmAction&quot;  //视频确认按钮</span><br><span class="line">#define Action_Identifier_Movie_Concel  @&quot;movieConcelAction&quot;   //视频取消按钮</span><br><span class="line">#define Action_Title_Image_Confirm @&quot;查看&quot;  //图片确认按钮标题</span><br><span class="line">#define Action_Title_Image_Concel  @&quot;忽略&quot;  //图片取消按钮标题</span><br><span class="line">#define Action_Title_Audio_Confirm @&quot;查看&quot;  //音频确认按钮标题</span><br><span class="line">#define Action_Title_Audio_Concel  @&quot;忽略&quot;  //音频取消按钮标题</span><br><span class="line">#define Action_Title_Movie_Confirm @&quot;查看&quot;  //视频确认按钮标题</span><br><span class="line">#define Action_Title_Movie_Concel  @&quot;忽略&quot;  //视频取消按钮标题</span><br></pre></td></tr></table></figure><p>采用的是自定义布局，注意如果想使用这个布局的话，<br>你必须提前在service里面设置好categoryIdentifier，它的值是你plist文件里面的任何一个</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">@interface NotificationViewController () &lt;UNNotificationContentExtension&gt;</span><br><span class="line">@property (nonatomic, strong)UIImageView *imageView;</span><br><span class="line">@property (nonatomic,strong)UILabel *label;</span><br><span class="line">@end</span><br></pre></td></tr></table></figure><p>LazyLoad</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-(UIImageView *)imageView&#123;</span><br><span class="line">    if (_imageView == nil) &#123;</span><br><span class="line">        _imageView = [[UIImageView alloc] init];</span><br><span class="line">        _imageView.contentMode = UIViewContentModeScaleAspectFit;</span><br><span class="line">    &#125;</span><br><span class="line">    return _imageView;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>AddView</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">- (void)viewDidLoad &#123;</span><br><span class="line">    [super viewDidLoad];</span><br><span class="line">    [self.view addSubview:self.imageView];</span><br><span class="line">    // Do any required interface initialization here.</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>取出多媒体资料并展示到视图上，下面为image</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">- (void)didReceiveNotification:(UNNotification *)notification &#123;</span><br><span class="line">    NSLog(@&quot;notification.request.content.userInfo%@&quot;,notification.request.content.userInfo);</span><br><span class="line">    UNNotificationContent * content = notification.request.content;</span><br><span class="line">    CGFloat widthTime = 2;</span><br><span class="line">    if ([UIScreen mainScreen].bounds.size.width&gt;375) &#123;</span><br><span class="line">        widthTime = 3.0;</span><br><span class="line">    &#125;</span><br><span class="line">    UIImage *image = nil;</span><br><span class="line">    if (content.attachments.count) &#123;</span><br><span class="line">        UNNotificationAttachment * attachment_img = content.attachments[0];</span><br><span class="line">        if (attachment_img.URL.startAccessingSecurityScopedResource) &#123;</span><br><span class="line">            image = [UIImage imageWithContentsOfFile:attachment_img.URL.path];</span><br><span class="line">            self.imageView.image = image;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    self.imageView.frame = self.view.frame;</span><br><span class="line">    self.label.text = notification.request.content.body;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>响应相关Action</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">-(void)didReceiveNotificationResponse:(UNNotificationResponse *)response completionHandler:(void (^)(UNNotificationContentExtensionResponseOption))completion&#123;</span><br><span class="line">    UNNotificationContent *content = [response.notification.request.content mutableCopy];</span><br><span class="line">    NSString *category =  content.categoryIdentifier;</span><br><span class="line">    NSString *actionIdentifier = [response.actionIdentifier copy];</span><br><span class="line">   if ([category isEqualToString:Action_Category_Identifier_Image]) &#123;</span><br><span class="line">        if ([actionIdentifier isEqualToString:Action_Identifier_Image_Confirm]) &#123;</span><br><span class="line">            completion(UNNotificationContentExtensionResponseOptionDismissAndForwardAction);</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            completion(UNNotificationContentExtensionResponseOptionDismiss);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;else if ([category isEqualToString:Action_Category_Identifier_Audio])&#123;</span><br><span class="line">        if ([actionIdentifier isEqualToString:Action_Identifier_Audio_Confirm]) &#123;</span><br><span class="line">            completion(UNNotificationContentExtensionResponseOptionDismissAndForwardAction);</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            completion(UNNotificationContentExtensionResponseOptionDismiss);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        if ([actionIdentifier isEqualToString:Action_Identifier_Movie_Confirm]) &#123;</span><br><span class="line">            completion(UNNotificationContentExtensionResponseOptionDismissAndForwardAction);</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            completion(UNNotificationContentExtensionResponseOptionDismiss);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> iOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iOS时间工具类</title>
      <link href="/2017/07/14/ios-shi-jian-gong-ju-lei/"/>
      <url>/2017/07/14/ios-shi-jian-gong-ju-lei/</url>
      
        <content type="html"><![CDATA[<h3 id="iOS时间工具类"><a href="#iOS时间工具类" class="headerlink" title="iOS时间工具类"></a>iOS时间工具类</h3><p>工作之余写的一个关于Unix时间的工具</p> <span id="more"></span><figure class="highlight plaintext"><figcaption><span><Foundation/Foundation.h></span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">@interface UnixTime : NSObject</span><br><span class="line">@property (nonatomic,assign) double    unixTimeInterval;//GMT时间戳 微秒级</span><br><span class="line">@property (nonatomic,strong) NSDate   *unixDate;//GMT时间 2016-01-04 8:55:46 +0000</span><br><span class="line">@property (nonatomic,strong) NSString *LocalTimeZone;//本地时区 GMT-12  GMT+12</span><br><span class="line">@property (nonatomic,assign) NSInteger timeOffset;//时间偏移量 </span><br><span class="line">@property (nonatomic,assign) double    unixTimestamp;//GMT+0 毫秒</span><br><span class="line">@property (nonatomic,assign) NSInteger unixZeroTimestamp;//当天零点 GMT+0 秒</span><br><span class="line">+ (UnixTime *)shareUnixTime;//单例 类方法</span><br><span class="line">- (void)getUnixTimestampAtNow;//Unix时间戳  若要获取某天的零时刻  必须先执行找个方法</span><br><span class="line">- (void)getSystemTimeZone;//本地时区</span><br><span class="line">- (NSString *)getTimeStringWithTime:(double)time;//字符串输出时间 设置日期格式带毫秒的 2016-01-04 16:55:46</span><br><span class="line">- (NSInteger)getUnixTimeWithDay:(NSInteger)day;// 某天的零时Unix时间戳</span><br><span class="line">- (NSInteger)getUnixTimeWithDay:(NSInteger)day AndClock:(NSInteger)clock; // 某天的特定时刻Unix时间戳</span><br><span class="line">- (NSInteger)gettimestampWithDateFormatString:(NSString *)dateFormatString;</span><br><span class="line">- (NSString *)formatTimeWithTime:(NSNumber *)time;//根据传入时间数值 返回hh:mm:ss格式的时间  这个是表示时间点的</span><br><span class="line">- (NSString *)formatHMWithTime:(NSNumber *)time;//根据传入时间数值 返回hh:mm格式的时间 这个时用来表示时间长短的</span><br><span class="line">- (NSString *)getTravelTimeWithStartTime:(NSNumber *)startTime andEndTime:(NSNumber *)endTime;//根据传入时间数值返回时间差值分钟 这个时用来表示时间长短的</span><br><span class="line">- (NSString *)getDayHourMinWithTimeStamp:(NSNumber *)time;</span><br><span class="line">@end</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>UnixTime.m文件<br>包含方法的具体实现，用法都在.h文件里写了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#import &quot;UnixTime.h&quot;</span><br><span class="line"></span><br><span class="line">@implementation UnixTime</span><br><span class="line"></span><br><span class="line">+ (UnixTime *)shareUnixTime&#123;</span><br><span class="line">    static UnixTime *unixTime = nil;</span><br><span class="line">    static dispatch_once_t onceToken;</span><br><span class="line">    dispatch_once(&amp;onceToken, ^&#123;</span><br><span class="line">        unixTime = [[UnixTime alloc]init];</span><br><span class="line">    &#125;);</span><br><span class="line">    return unixTime;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- (void)getUnixTimestampAtNow&#123;</span><br><span class="line">    self.unixDate = [NSDate date];</span><br><span class="line">    NSLog(@&quot;GMT %@&quot;,self.unixDate);</span><br><span class="line">    NSTimeInterval time=[self.unixDate timeIntervalSince1970];</span><br><span class="line">    self.unixTimeInterval =time;</span><br><span class="line">    NSString *timeIntervalString = [NSString stringWithFormat:@&quot;%f&quot;,self.unixTimeInterval];</span><br><span class="line">    NSLog(@&quot;GMTTimeInterval    %@&quot;,timeIntervalString);</span><br><span class="line">    NSString *micSecondString = [timeIntervalString substringWithRange:NSMakeRange(timeIntervalString.length-6, 3)];</span><br><span class="line">    //NSLog(@&quot;micSec %@&quot;,micSecondString);</span><br><span class="line">    NSInteger micSec = [micSecondString integerValue];</span><br><span class="line">    self.unixTimestamp = (NSInteger)time+micSec/1000.000;</span><br><span class="line">    NSLog(@&quot;GMTTimestamp       %ld&quot;,(long)self.unixTimestamp);</span><br><span class="line">    [self getUnixZeroTimestamp];</span><br><span class="line">    [self getSystemTimeZone];</span><br><span class="line">    [self getTimeOffset];</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">- (void)getSystemTimeZone&#123;</span><br><span class="line">    NSTimeZone *timezone = [NSTimeZone systemTimeZone];</span><br><span class="line">    //NSLog(@&quot;timeZone%@&quot;,timezone);</span><br><span class="line">    NSString *timeAbbreviation = timezone.abbreviation;</span><br><span class="line">    self.LocalTimeZone = timeAbbreviation;</span><br><span class="line">    if ([timeAbbreviation isEqualToString:@&quot;GMT&quot;]) &#123;</span><br><span class="line">        self.LocalTimeZone = @&quot;GMT+0&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">   // NSLog(@&quot;TimeZone.abb: %@&quot;,self.LocalTimeZone);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- (void)getTimeOffset&#123;</span><br><span class="line">    NSString *str1 = [self.LocalTimeZone substringWithRange:NSMakeRange(3, 1)];</span><br><span class="line">    NSString *str2 = [self.LocalTimeZone substringWithRange:NSMakeRange(4, self.LocalTimeZone.length-4)];</span><br><span class="line">    NSInteger timeZoneOffset = [str2 integerValue];</span><br><span class="line">    if ([str1 isEqualToString:@&quot;+&quot;]) &#123;</span><br><span class="line">        self.timeOffset = timeZoneOffset*3600;</span><br><span class="line">    &#125;else if ([str1 isEqualToString:@&quot;-&quot;])&#123;</span><br><span class="line">        self.timeOffset = -timeZoneOffset*3600;</span><br><span class="line">    &#125;</span><br><span class="line">    //NSLog(@&quot;timeOffSet %ld&quot;,(long)self.timeOffset);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- (void)getUnixZeroTimestamp&#123;</span><br><span class="line">    self.unixZeroTimestamp =  (NSInteger)(self.unixTimestamp/86400)*86400;</span><br><span class="line">    NSInteger days =  self.unixZeroTimestamp/86400 ;</span><br><span class="line">    NSLog(@&quot;GMTZeroTimestamp   %ld&quot;,self.unixZeroTimestamp);</span><br><span class="line">    NSLog(@&quot;days %ld&quot;,days);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- (NSString *)getTimeStringWithTime:(double)time&#123;</span><br><span class="line">    NSDate *date = [NSDate dateWithTimeIntervalSince1970:time];</span><br><span class="line">    NSDateFormatter *dateFormat = [[NSDateFormatter alloc] init];</span><br><span class="line">    [dateFormat setDateFormat:@&quot;YYYY-MM-dd HH:mm:ss&quot;];</span><br><span class="line">    // 设置日期格式带秒的 2016-01-04 16:55:46</span><br><span class="line">    //NSLog(@&quot;date %@&quot;,date);</span><br><span class="line">    NSString *timeString = [dateFormat stringFromDate:date];</span><br><span class="line">    //NSLog(@&quot;time %@&quot;,timeString);</span><br><span class="line">    return timeString;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- (NSInteger)gettimestampWithDateFormatString:(NSString *)dateFormatString&#123;</span><br><span class="line">    NSDateFormatter *dateFormat = [[NSDateFormatter alloc] init];</span><br><span class="line">    [dateFormat setDateFormat:@&quot;YYYY-MM-dd HH:mm:ss&quot;];</span><br><span class="line">    NSDate *date = [dateFormat dateFromString:dateFormatString];</span><br><span class="line">    NSInteger time= [date timeIntervalSince1970];</span><br><span class="line">    NSLog(@&quot;time %ld&quot;,time);</span><br><span class="line">    return time;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- (NSInteger)getUnixTimeWithDay:(NSInteger)day&#123;</span><br><span class="line">    NSInteger unixTime = self.unixZeroTimestamp-(day-1)*86400-self.timeOffset;</span><br><span class="line">    NSLog(@&quot;unixTime   %ld&quot;,unixTime);</span><br><span class="line">    NSLog(@&quot;%@&quot;,[self getTimeStringWithTime:unixTime]);</span><br><span class="line">    return unixTime;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- (NSInteger)getUnixTimeWithDay:(NSInteger)day AndClock:(NSInteger)clock&#123;//特定时刻的Unix时间戳</span><br><span class="line">    </span><br><span class="line">    if (clock&lt;0||clock&gt;24) &#123;//为了避免传入数据不正确 进行换算 增强可靠性</span><br><span class="line">        clock = clock%24;</span><br><span class="line">        if (clock&lt;0) &#123;</span><br><span class="line">            clock=clock+24;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            clock=clock;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        clock=clock;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    NSInteger unixTime = self.unixZeroTimestamp-(day-1)*86400+3600*clock;//-self.timeOffset;</span><br><span class="line">    //NSLog(@&quot;unixTime   %ld&quot;,unixTime);</span><br><span class="line">    return unixTime;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- (NSString *)formatTimeWithTime:(NSNumber *)time&#123;</span><br><span class="line">    float _time_2 = [time floatValue];</span><br><span class="line">    NSInteger _time_1 = [time integerValue];</span><br><span class="line">    NSInteger sec = (NSInteger)((_time_2-_time_1)*60);</span><br><span class="line">    NSInteger hour;</span><br><span class="line">    NSInteger min;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    if (_time_1&gt;=1 &amp;&amp; _time_1&lt;60) &#123;</span><br><span class="line">         min = _time_1%60;</span><br><span class="line">        return [NSString stringWithFormat:@&quot;%ld:%.2ld&quot;,min,sec];</span><br><span class="line">    &#125;</span><br><span class="line">    if (_time_1&gt;=60) &#123;</span><br><span class="line">        hour = _time_1/60;</span><br><span class="line">        min = _time_1%60;</span><br><span class="line">        return [NSString stringWithFormat:@&quot;%ld:%.2ld:%.2ld&quot;,hour,min,sec];</span><br><span class="line">    &#125;</span><br><span class="line">    return [NSString stringWithFormat:@&quot;0:%.2ld&quot;,sec];</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- (NSString *)formatHMWithTime:(NSNumber *)time&#123;</span><br><span class="line">    UnixTime *unixtime = [UnixTime shareUnixTime];</span><br><span class="line">    NSString *string = [unixtime getTimeStringWithTime:[time integerValue]];</span><br><span class="line">    NSArray *firArray = [string componentsSeparatedByString:@&quot; &quot;];</span><br><span class="line">    NSString *firstring = firArray[1];</span><br><span class="line">    </span><br><span class="line">    NSMutableArray *secArray = [NSMutableArray arrayWithArray:[firstring componentsSeparatedByString:@&quot;:&quot;]];</span><br><span class="line">    [secArray removeLastObject];</span><br><span class="line">    </span><br><span class="line">    return [secArray componentsJoinedByString:@&quot;:&quot;];</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- (NSString *)getTravelTimeWithStartTime:(NSNumber *)startTime andEndTime:(NSNumber *)endTime&#123;</span><br><span class="line"></span><br><span class="line">    NSInteger _startTime = [startTime integerValue];</span><br><span class="line">    NSInteger _endTime = [endTime integerValue];</span><br><span class="line">    </span><br><span class="line">    NSInteger travelTime = (_endTime - _startTime)/60+1;</span><br><span class="line">    </span><br><span class="line">    return [NSString stringWithFormat:@&quot;%ld&quot;,travelTime];</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">- (NSString *)getDayHourMinWithTimeStamp:(NSNumber *)time&#123;</span><br><span class="line">    NSInteger _time = [time integerValue];</span><br><span class="line">    NSDate *date = [NSDate dateWithTimeIntervalSince1970:_time];</span><br><span class="line">    NSDateFormatter *dateFormat = [[NSDateFormatter alloc] init];</span><br><span class="line">    [dateFormat setDateFormat:@&quot;YYYY-MM-dd HH:mm&quot;];</span><br><span class="line">    // 设置日期格式 2016-01-04 16:55:46</span><br><span class="line">    //NSLog(@&quot;date %@&quot;,date);</span><br><span class="line">    NSString *timeString = [dateFormat stringFromDate:date];</span><br><span class="line">    //NSLog(@&quot;time %@&quot;,timeString);</span><br><span class="line">    return timeString;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@end</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> iOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iOS--富文本推送UNNotificationExtension基础篇</title>
      <link href="/2017/07/14/ios-unnotificationextension/"/>
      <url>/2017/07/14/ios-unnotificationextension/</url>
      
        <content type="html"><![CDATA[<p>本文主要讲述如何集成富文本推送的相关扩展，另外还会有文章来详细展开</p> <span id="more"></span><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>本地推送和远程推送同时都可支持附带Media Attachments。不过远程通知需要实现通知服务扩展（UNNotificationServiceExtension），在service extension里面去下载attachment，但是需要注意，service extension会限制下载的时间（30s），并且下载的文件大小也会同样被限制。这里毕竟是一个推送，而不是把所有的内容都推送给用户。所以你应该去推送一些缩小比例之后的版本。比如图片，推送里面附带缩略图，当用户打开app之后，再去下载完整的高清图。视频就附带视频的关键帧或者开头的几秒，当用户打开app之后再去下载完整视频。<br><strong>attachment支持图片，音频，视频，<a href="https://developer.apple.com/documentation/usernotifications/unnotificationattachment?preferredLanguage=occ">附件支持的类型及大小</a></strong></p><h4 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h4><h3 id="添加Notification-Service-Extension"><a href="#添加Notification-Service-Extension" class="headerlink" title="添加Notification Service Extension"></a>添加Notification Service Extension</h3><p>在当前工程项目中添加新的Target–&gt; Notification Service<br>先在Xcode 打开你的工程，File–&gt;New–&gt;Target然后添加这个Notification Service Extension：<br><img src="http://upload-images.jianshu.io/upload_images/1519926-4b2dec473ad115ab.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=" Service Extension"></p><h3 id="添加Notification-Content-Extension"><a href="#添加Notification-Content-Extension" class="headerlink" title="添加Notification Content Extension"></a>添加Notification Content Extension</h3><p>在当前工程项目中添加新的Target–&gt; Notification Content<br>先在Xcode 打开你的工程，File–&gt;New–&gt;Target然后添加这个Notification Content Extension：</p><p><img src="http://upload-images.jianshu.io/upload_images/1519926-80fe0d45afd8962d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Content Extension"></p><h3 id="添加扩展完成"><a href="#添加扩展完成" class="headerlink" title="添加扩展完成"></a>添加扩展完成</h3><p>这样你的项目中就会有两个Extension Target</p><p><img src="http://upload-images.jianshu.io/upload_images/1519926-27417edf00b78513.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Extension Target"></p><h2 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h2><h3 id="ServiceExtension-Info-plist"><a href="#ServiceExtension-Info-plist" class="headerlink" title="ServiceExtension Info.plist"></a><strong>ServiceExtension Info.plist</strong></h3><ul><li>添加http协议支持，没错，这里是支持http协议的，不像其他文章说的不支持</li></ul><p><img src="http://upload-images.jianshu.io/upload_images/1519926-ab76b6192e080b34.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="ServiceExtension Info.plist"></p><h3 id="ContentExtension-Info-plist"><a href="#ContentExtension-Info-plist" class="headerlink" title="ContentExtension Info.plist"></a><strong>ContentExtension Info.plist</strong></h3><ul><li>设置可以改变</li><li>如果不想使用故事版把NSExtensionMainStoryboard替换为NSExtensionPrincipalClass（我这里已经）<br><img src="http://upload-images.jianshu.io/upload_images/1519926-f3f71592d59fa490.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="ContentExtension Info.plist"></li></ul><h3 id="ServiceExtension基本设置"><a href="#ServiceExtension基本设置" class="headerlink" title="ServiceExtension基本设置"></a><strong>ServiceExtension基本设置</strong></h3><ul><li>当前Target的BundleID根据项目主Target的BundleID自动生成</li><li>格式”项目主Target的BundleID.-当前Target名称”</li><li>例如当前项目BundleID为 com.apple.NotificationDemo，ServiceExtension的名字是NotificationService</li><li>那么ServiceExtension的BundleID就是com.apple.NotificationDemo.-NotificationService</li><li>Automatically manages signing 官方建议勾选</li><li>Deployment Target 必须设置为10.0以上，不能设置为10.0以下<br><img src="http://upload-images.jianshu.io/upload_images/1519926-c444d42624ec040d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="ServiceExtension基本设置"></li></ul><h3 id="ContentExtension基本设置"><a href="#ContentExtension基本设置" class="headerlink" title="ContentExtension基本设置"></a><strong>ContentExtension基本设置</strong></h3><ul><li>当前Target的BundleID根据项目主Target的BundleID自动生成</li><li>格式”项目主Target的BundleID.-当前Target名称”</li><li>例如当前项目BundleID为 com.apple.NotificationDemo，ContentExtension的名字是NotificationContent</li><li>那么ServiceExtension的BundleID就是com.apple.NotificationDemo.-NotificationContent</li><li>Automatically manages signing 官方建议勾选</li><li>Deployment Target 必须设置为10.0以上，不能设置为10.0以下<br><img src="http://upload-images.jianshu.io/upload_images/1519926-891c922f190d490f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="ContentExtension基本设置"></li></ul><h2 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h2><ul><li>首先当前应用需要支持APNS,不支持的自己集成去吧<h3 id="服务器向设备发送通知"><a href="#服务器向设备发送通知" class="headerlink" title="服务器向设备发送通知"></a>服务器向设备发送通知</h3>这个通知消息的格式是有要求的，有以下几点需要注意：</li><li>aps字段必须要有，不然收不到通知</li><li>aps字段下alert字段必须要有，不然也收不到通知</li><li>alert字段的值是字符串的时候，不可为空，不然的话你虽然收的到通知，但是是手机除了震动或者声音，没有任何提示</li><li>alert字段的值是字典的时候，下面这三个字段必须要有一个，不然和上面一样。就是一句话alert的值必须是可以使用的</li><li>mutable-content字段值最好是1，目前没见过其他值</li><li>如果你想在iOS10上展示位富文本的推送格式，category字段必须带，值必须在info.plist文件中能找的到的</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"> &#123;</span><br><span class="line">   &quot;aps&quot;:&#123;</span><br><span class="line">        &quot;alert&quot; : &#123;</span><br><span class="line">             &quot;title&quot; : &quot;iOS远程消息主标题！-title&quot;,</span><br><span class="line">              &quot;subtitle&quot; : &quot;iOS远程消息副标题！-Subtitle&quot;,</span><br><span class="line">              &quot;body&quot; : &quot;longge -body&quot;</span><br><span class="line">            &#125;,</span><br><span class="line">        &quot;sound&quot; : &quot;default&quot;,</span><br><span class="line">        &quot;badge&quot; : &quot;1&quot;,</span><br><span class="line">        &quot;mutable-content&quot; : &quot;1&quot;,</span><br><span class="line">        &quot;category&quot; : &quot;Image_Category&quot;,</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;image&quot; : &quot;http://ot260qjni.bkt.clouddn.com/testOne.jpeg&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面的测试图片好像不能用了（具体能不能用你们最好测试一下，直接浏览器打开能看到就可以用），我也不知道为啥 你们可以自己去找找先关的图床。</p>]]></content>
      
      
      <categories>
          
          <category> iOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iOS--简单封装AFNetworking</title>
      <link href="/2017/07/14/ios-custom-afnetworking/"/>
      <url>/2017/07/14/ios-custom-afnetworking/</url>
      
        <content type="html"><![CDATA[<p>由于本人在工作中经常会进行网络请求，实在是不想一直写那段请求代码，就自己封装了一个LiynNet类。其中使用代理完成方法回调。</p> <span id="more"></span><p>这里面涉及到了GET/POST方法。<br>废话不多说直接上代码</p><h2 id="下面是-h文件的内容"><a href="#下面是-h文件的内容" class="headerlink" title="下面是.h文件的内容:"></a><strong>下面是.h文件的内容:</strong></h2><p><strong>代理回调协议方法</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">@protocol LiynNetDelegate &lt;NSObject&gt;</span><br><span class="line">- (void)netFinsh:(id)object;</span><br><span class="line">- (void)netError:(id)errorMsg;</span><br><span class="line">@end</span><br></pre></td></tr></table></figure><p>这里只有一个属性delegate，用于建立代理关系；<br>这里向外暴露了五个方法，其中第一个类方法用来初始化一个网络请求类的实例化对象，这个对象是一个单例对象，因为网络请求对象，不存储数据，只作为一个单纯的工具类，所以这个对象只需要存在一个就可以。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">@interface LiynNet : NSObject</span><br><span class="line">@property (nonatomic, weak) id&lt;LiynNetDelegate&gt; delegate;</span><br><span class="line">#pragma mark: method</span><br><span class="line">+ (LiynNet *)defaultNet;</span><br><span class="line">- (void)uploadPOST:(NSString *)URLString Parameters:(id)parameters UploadDictionary:(NSDictionary*)uploadInfo;</span><br><span class="line">- (void)POST:(NSString *)URLString Parameters:(id)parameters;</span><br><span class="line">- (void)GET:(NSString *)URLString Parameters:(id)parameters;</span><br><span class="line">- (void)GETPic:(NSString *)URLString Parameters:(id)parameters Path:(NSString *)path;</span><br><span class="line">@end</span><br></pre></td></tr></table></figure><h2 id="下面是-m文件的内容"><a href="#下面是-m文件的内容" class="headerlink" title="下面是.m文件的内容"></a><strong>下面是.m文件的内容</strong></h2><p><strong>创建单例对象</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">+(LiynNet *)defaultNet&#123;</span><br><span class="line">    static LiynNet *net = nil;</span><br><span class="line">    if (net == nil) &#123;</span><br><span class="line">        net = [[LiynNet alloc] init];</span><br><span class="line">        net.manager = [AFHTTPSessionManager manager];</span><br><span class="line">        net.manager.responseSerializer = [AFHTTPResponseSerializer serializer];</span><br><span class="line">    &#125;</span><br><span class="line">    return net;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="以下是网络请求"><a href="#以下是网络请求" class="headerlink" title="以下是网络请求"></a>以下是网络请求</h2><p>在这里我就想了定制，因为有时候需要判断返回数据的类型，例如：当一个页面进行多种数据请求时，代理方法只有一个，那么我们就需要一个标记变量来区别这次返回的数据类型是什么。<br>所以这里的parameters字典里需要一个字段msgType来区别。</p><h3 id="一般POST下载请求"><a href="#一般POST下载请求" class="headerlink" title="一般POST下载请求"></a><strong>一般POST下载请求</strong></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">- (void)POST:(NSString *)URLString Parameters:(id)parameters&#123;</span><br><span class="line">    NSString *msgType = parameters[@&quot;msgType&quot;];</span><br><span class="line">    NSLog(@&quot;&#123;\nmethod:POST \nURL:%@  \nParameters:%@&quot;,URLString,parameters);</span><br><span class="line">    [self.manager POST:URLString parameters:parameters[@&quot;msg&quot;] progress:^(NSProgress * _Nonnull uploadProgress) &#123;</span><br><span class="line">        </span><br><span class="line">    &#125; success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) &#123;</span><br><span class="line">        [self success:@&#123;@&quot;msgType&quot;:msgType,@&quot;msg&quot;:responseObject&#125;];</span><br><span class="line">    &#125; failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) &#123;</span><br><span class="line">        [self failure:@&#123;@&quot;msgType&quot;:msgType,@&quot;error&quot;:error&#125;];</span><br><span class="line">    &#125;];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="一般的GET下载请求"><a href="#一般的GET下载请求" class="headerlink" title="一般的GET下载请求"></a><strong>一般的GET下载请求</strong></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">- (void)GET:(NSString *)URLString Parameters:(id)parameters&#123;</span><br><span class="line">    NSString *msgType = parameters[@&quot;msgType&quot;];</span><br><span class="line">    NSLog(@&quot;method:GET URL:%@  Parameters:%@&quot;,URLString,parameters);</span><br><span class="line">    [self.manager GET:URLString parameters:parameters progress:^(NSProgress * _Nonnull downloadProgress) &#123;</span><br><span class="line">        </span><br><span class="line">    &#125; success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) &#123;</span><br><span class="line">        [self success:responseObject];</span><br><span class="line">    &#125; failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) &#123;</span><br><span class="line">        [self failure:@&#123;@&quot;msgType&quot;:msgType,@&quot;error&quot;:error&#125;];</span><br><span class="line">    &#125;];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="一般的POST上传请求"><a href="#一般的POST上传请求" class="headerlink" title="一般的POST上传请求"></a><strong>一般的POST上传请求</strong></h3><p>注意上传的字段是服务器给定的，传入的字典uploadInfo内@”uploadParameter”对应的值。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">- (void)uploadPOST:(NSString *)URLString Parameters:(id)parameters UploadDictionary:(NSDictionary*)uploadInfo&#123;</span><br><span class="line">    NSString *msgType = parameters[@&quot;msgType&quot;];</span><br><span class="line">    NSLog(@&quot;&#123;\nmethod:POST \nURL:%@  \nParametersCid:%@&quot;,URLString,parameters[@&quot;msg&quot;]);</span><br><span class="line">    NSDictionary *dict = parameters[@&quot;msg&quot;];</span><br><span class="line">    [self.manager POST: URLString parameters:dict constructingBodyWithBlock:^(id  _Nonnull formData) &#123;</span><br><span class="line">        NSData *rightData = UIImageJPEGRepresentation(uploadInfo[@&quot;image&quot;], 0.7);</span><br><span class="line">        [formData appendPartWithFileData:rightData</span><br><span class="line">                                    name: uploadInfo[@&quot;uploadParameter&quot;]</span><br><span class="line">                                fileName:@&quot;IDRight.png&quot;</span><br><span class="line">                                mimeType:@&quot;image/jpeg&quot;];</span><br><span class="line">    &#125; progress:^(NSProgress * _Nonnull uploadProgress) &#123;</span><br><span class="line">        </span><br><span class="line">        NSLog(@&quot;%f&quot;,1.0 * uploadProgress.completedUnitCount/uploadProgress.totalUnitCount);</span><br><span class="line">        </span><br><span class="line">    &#125; success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) &#123;</span><br><span class="line">        NSDictionary *dict = [NSJSONSerialization JSONObjectWithData:responseObject</span><br><span class="line">                                                             options:NSJSONReadingMutableContainers</span><br><span class="line">                                                               error:nil];</span><br><span class="line">        [self success:@&#123;@&quot;msgType&quot;:msgType,@&quot;msg&quot;:dict&#125;];</span><br><span class="line">    &#125; failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) &#123;</span><br><span class="line">        [self failure:@&#123;@&quot;msgType&quot;:msgType,@&quot;error&quot;:error&#125;];</span><br><span class="line">    &#125;];</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="两个私有方法"><a href="#两个私有方法" class="headerlink" title="两个私有方法"></a><strong>两个私有方法</strong></h3><h4 id="请求数据成功"><a href="#请求数据成功" class="headerlink" title="请求数据成功"></a><strong>请求数据成功</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- (void)success:(id)responseObject&#123;</span><br><span class="line">    if (_delegate &amp;&amp; [_delegate respondsToSelector:@selector(netFinsh:)]) &#123;</span><br><span class="line">        [_delegate netFinsh:responseObject];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="请求数据失败"><a href="#请求数据失败" class="headerlink" title="请求数据失败"></a><strong>请求数据失败</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- (void)failure:(id)error&#123;</span><br><span class="line">    if (_delegate &amp;&amp; [_delegate respondsToSelector:@selector(netError:)]) &#123;</span><br><span class="line">        [_delegate netError:error];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个类是基于AFNetworking的，所以在使用的时候必须要先倒入AFNetworking的第三方库，建议使用CocoaPods来导入，如果有人不会使用的可以自行百度。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pod &#x27;AFNetworking&#x27;, &#x27;~&gt; 3.1.0&#x27;</span><br></pre></td></tr></table></figure><p>首先在使用的类里遵循协议</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;LiynNetDelegate&gt;</span><br></pre></td></tr></table></figure><p>声明一个全局的LiynNet类的对象（这个全局只是建议 不全局也可以）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">LiynNet *_net;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>或者定义一个属性</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@property (nonatomic, strong) LiynNet *net;</span><br></pre></td></tr></table></figure><p>实例化这个LiynNet对象并建立代理关系</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#pragma mark - 懒加载</span><br><span class="line">-(LiynNet *)net&#123;</span><br><span class="line">    if (_net == nil) &#123;</span><br><span class="line">        _net = [LiynNet defaultNet];</span><br><span class="line">        _net.delegate = self;</span><br><span class="line">    &#125;</span><br><span class="line">    return  _net;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="实现协议的方法"><a href="#实现协议的方法" class="headerlink" title="实现协议的方法"></a><strong>实现协议的方法</strong></h3><p>在这里你就可以操作返回的数据了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- (void)netFinsh:(id)object&#123;</span><br><span class="line">    NSLog(@&quot;msgType %@\n msg %@&quot;,object[@&quot;msgType&quot;],object[@&quot;msg&quot;]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里你就需要慢慢查找原因了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- (void)netError:(id)errorMsg&#123;</span><br><span class="line">    NSLog(@&quot;msgType %@\n msg %@&quot;, errorMsg[@&quot;msgType&quot;], errorMsg[@&quot;msg&quot;]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> iOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>macOS--Cocoapods的安装</title>
      <link href="/2017/07/14/macos-cocoapods-de-an-zhuang/"/>
      <url>/2017/07/14/macos-cocoapods-de-an-zhuang/</url>
      
        <content type="html"><![CDATA[ <span id="more"></span><h2 id="重新配置gem源"><a href="#重新配置gem源" class="headerlink" title="重新配置gem源"></a>重新配置gem源</h2><h3 id="替换"><a href="#替换" class="headerlink" title="替换"></a>替换</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gem sources --add https://gems.ruby-china.org/ --remove https://rubygems.org/</span><br></pre></td></tr></table></figure><h3 id="查看"><a href="#查看" class="headerlink" title="查看"></a>查看</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gem sources -l</span><br></pre></td></tr></table></figure><p>请确保只有一个gem源—“<a href="https://gems.ruby-china.org/%E2%80%9D">https://gems.ruby-china.org/”</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">*** CURRENT SOURCES ***</span><br><span class="line"></span><br><span class="line">https://gems.ruby-china.org/</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> macOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>水波纹-OC-iOS</title>
      <link href="/2017/07/14/ios-water-ripple-oc/"/>
      <url>/2017/07/14/ios-water-ripple-oc/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>使用iOS原生CoreGraphic框架完成，主要内容就是在给定的路径上绘制出图形，水波纹的实现是按照三角函数的sin函数来实现的，利用sin函数计算出大量的点，然后做颜色填充。</p> <span id="more"></span><h2 id="实现方法"><a href="#实现方法" class="headerlink" title="实现方法"></a>实现方法</h2><p>首先一个波纹需要一个layer来进行渲染，越底层的波纹要越早绘制，本Demo只实现了双波纹交错。<br>水波纹基本属性：</p><p><strong>不需要对外暴露的属性</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">@interface WaterRippleView()&#123;</span><br><span class="line">    float _currentLinePointY;</span><br><span class="line">&#125;</span><br><span class="line">@property (nonatomic, strong)CADisplayLink *rippleDisplayLink;//苹果的垂直同步</span><br><span class="line">@property (nonatomic, strong)CAShapeLayer *mainRippleLayer;//主波图层</span><br><span class="line">@property (nonatomic, strong)CAShapeLayer *minorRippleLayer;//次波图层</span><br><span class="line">@property (nonatomic, assign)CGFloat rippleWidth;//波浪宽度</span><br><span class="line">@end</span><br></pre></td></tr></table></figure><p><strong>可以对外暴露的属性</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">@property (nonatomic, strong)UIColor *mainRippleColor;//主波填充颜色</span><br><span class="line">@property (nonatomic, strong)UIColor *minorRippleColor;//次波填充颜色</span><br><span class="line">@property (nonatomic, assign)CGFloat mainRippleoffsetX;//主波偏移量</span><br><span class="line">@property (nonatomic, assign)CGFloat minorRippleoffsetX;//次波偏移量</span><br><span class="line">@property (nonatomic, assign)CGFloat rippleSpeed;//波浪速度</span><br><span class="line">@property (nonatomic, assign)CGFloat ripplePosition;//波浪Y轴位置</span><br><span class="line">@property (nonatomic, assign)float rippleAmplitude;//波浪振幅</span><br></pre></td></tr></table></figure><p><strong>各属性的默认值设置</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">self.mainRippleColor = [UIColor colorWithRed:255/255.0f green:127/255.0f blue:80/255.0f alpha:1];</span><br><span class="line">self.minorRippleColor = [UIColor whiteColor];</span><br><span class="line">self.mainRippleoffsetX = 1;</span><br><span class="line">self.minorRippleoffsetX = 2;</span><br><span class="line">self.rippleSpeed = .5f;</span><br><span class="line">self.rippleWidth = frame.size.width;</span><br><span class="line">self.ripplePosition = frame.size.height-10.0f;</span><br><span class="line">self.rippleAmplitude = 5;</span><br></pre></td></tr></table></figure><p><strong>对外暴露的方法</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//设置frame 主波填充颜色  次波填充颜色</span><br><span class="line">- (instancetype)initWithFrame:(CGRect)frame mainRippleColor:(UIColor *)mainRippleColor minorRippleColor:(UIColor *)minorRippleColor;</span><br><span class="line">//设置frame 主波填充颜色  次波填充颜色 主波偏移量 次波偏移量 波浪速度 波浪Y轴位置 波浪振幅</span><br><span class="line">- (instancetype)initWithFrame:(CGRect)frame mainRippleColor:(UIColor *)mainRippleColor minorRippleColor:(UIColor *)minorRippleColor mainRippleoffsetX:(float)mainRippleoffsetX minorRippleoffsetX:(float)minorRippleoffsetX rippleSpeed:(float)rippleSpeed ripplePosition:(float)ripplePosition rippleAmplitude:(float)rippleAmplitude;</span><br></pre></td></tr></table></figure><p>在view中需要绘制图形时，要在自带的dramRect：方法中编写相关代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">- (void)drawRect:(CGRect)rect &#123;</span><br><span class="line">    /*</span><br><span class="line">     *创建两个layer</span><br><span class="line">     */</span><br><span class="line">    self.mainRippleLayer = [CAShapeLayer layer];</span><br><span class="line">    self.mainRippleLayer.fillColor = self.mainRippleColor.CGColor;</span><br><span class="line">    [self.layer addSublayer:self.mainRippleLayer];</span><br><span class="line">    self.minorRippleLayer = [CAShapeLayer layer];</span><br><span class="line">    self.minorRippleLayer.fillColor = self.minorRippleColor.CGColor;</span><br><span class="line">    [self.layer addSublayer:self.minorRippleLayer];</span><br><span class="line">    self.rippleDisplayLink = [CADisplayLink displayLinkWithTarget:self</span><br><span class="line">                                                         selector:@selector(getCurrentRipple)];</span><br><span class="line">    [self.rippleDisplayLink addToRunLoop:[NSRunLoop mainRunLoop]</span><br><span class="line">                                 forMode:NSRunLoopCommonModes];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面是绘制代码：<br><strong>主波</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">- (void)drawMainRipple&#123;</span><br><span class="line">    self.mainRippleoffsetX += self.rippleSpeed;</span><br><span class="line">    CGMutablePathRef path = CGPathCreateMutable();</span><br><span class="line">    CGPathMoveToPoint(path, nil, 0, self.ripplePosition);</span><br><span class="line">    CGFloat y = 0.f;</span><br><span class="line">    for (float x = 0.f; x &lt;= self.rippleWidth ; x++) &#123;</span><br><span class="line">        y = self.rippleAmplitude * sin(1.2 *  M_PI/ self.rippleWidth  * x   - self.mainRippleoffsetX *M_PI/180) + self.ripplePosition;</span><br><span class="line">        CGPathAddLineToPoint(path, nil, x, y);</span><br><span class="line">    &#125;</span><br><span class="line">    CGPathAddLineToPoint(path, nil, self.rippleWidth, self.frame.size.height);</span><br><span class="line">    CGPathAddLineToPoint(path, nil, 0, self.frame.size.height);</span><br><span class="line">    CGPathCloseSubpath(path);</span><br><span class="line">    self.mainRippleLayer.path = path;</span><br><span class="line">    CGPathRelease(path);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>次波</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">- (void)drawMinorRipple&#123;</span><br><span class="line">    self.minorRippleoffsetX += self.rippleSpeed+0.1f;</span><br><span class="line">    CGMutablePathRef minorRipple = CGPathCreateMutable();</span><br><span class="line">    CGPathMoveToPoint(minorRipple, nil, 0, self.ripplePosition);</span><br><span class="line">    CGFloat y = 0.f;</span><br><span class="line">    for (float x = 0.f; x &lt;= self.rippleWidth ; x++) &#123;</span><br><span class="line">        y = self.rippleAmplitude * sin(1.2 *  M_PI/ self.rippleWidth  * x   - self.minorRippleoffsetX*M_PI/360 ) + self.ripplePosition;</span><br><span class="line">        CGPathAddLineToPoint(minorRipple, nil, x, y);</span><br><span class="line">    &#125;</span><br><span class="line">    CGPathAddLineToPoint(minorRipple, nil, self.rippleWidth, self.frame.size.height);</span><br><span class="line">    CGPathAddLineToPoint(minorRipple, nil, 0, self.frame.size.height);</span><br><span class="line">    CGPathCloseSubpath(minorRipple);</span><br><span class="line">    self.minorRippleLayer.path = minorRipple;</span><br><span class="line">    CGPathRelease(minorRipple);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="实现效果"><a href="#实现效果" class="headerlink" title="实现效果"></a>实现效果</h3><p><img src="http://img.blog.csdn.net/20170525155948950?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvWnVvV2VpWGlhb0R1WnVvWnVv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="水波纹Gif"></p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>本Demo的git库地址：<a href="https://git.oschina.net/LiynXu/waterripple.git">https://git.oschina.net/LiynXu/waterripple.git</a><br>欢迎访问</p>]]></content>
      
      
      <categories>
          
          <category> iOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Xcode下载地址大全</title>
      <link href="/2017/07/14/macos-xcode-xia-zai-di-zhi/"/>
      <url>/2017/07/14/macos-xcode-xia-zai-di-zhi/</url>
      
        <content type="html"><![CDATA[<h3 id="Xcode下载——绝对的官方地址"><a href="#Xcode下载——绝对的官方地址" class="headerlink" title="Xcode下载——绝对的官方地址"></a>Xcode下载——绝对的官方地址</h3><p>下载方式简单粗暴：<br>第一种、点击Xcode版本名称稍等几秒即可开始下载<br>另一种、右键复制链接地址，打开下载软件，新建任务把复制的链接粘贴在地址输入框即可开始下载<br>本文中涉及到的下载地址均为苹果官方下载地址</p> <span id="more"></span><h4 id="Xcode-2"><a href="#Xcode-2" class="headerlink" title="Xcode 2"></a>Xcode 2</h4><p><a href="http://adcdownload.apple.com/Developer_Tools/xcode_2.3/xcode_2.3_8m1780_oz693620813.dmg">Xcode_2.3.dmg</a> 915.0MB<br><a href="http://adcdownload.apple.com/Developer_Tools/xcode_2.4/xcode_2.4_8k1079_6936199.dmg">Xcode_2.4.dmg</a> 938.2MB<br><a href="http://adcdownload.apple.com/Developer_Tools/xcode_2.4.1/xcode_2.4.1_8m1910_6936315.dmg">Xcode_2.4.1.dmg</a> 923.2MB</p><h4 id="Xcode-3"><a href="#Xcode-3" class="headerlink" title="Xcode 3"></a>Xcode 3</h4><p><a href="http://adcdownload.apple.com/Developer_Tools/xcode_3.0/xcode_3.0.dmg">Xcode_3.0.dmg</a> 1.1GB<br><a href="http://adcdownload.apple.com/Developer_Tools/xcode_3.2/xcode3210a432.dmg">Xcode_3.2.dmg</a> 748.7MB<br><a href="http://adcdownload.apple.com/ios/ios_sdk_4.0.1__final/xcode_3.2.3_and_ios_sdk_4.0.1.dmg">Xcode_3.2.3_and_ios_sdk_4.0.1.dmg</a> 2.2GB<br><a href="http://adcdownload.apple.com/ios/ios_sdk_4.0.2__final/xcode_3.2.3_and_ios_sdk_4.0.2.dmg">Xcode_3.2.3_and_ios_sdk_4.0.2.dmg</a> 2.4GB<br><a href="http://adcdownload.apple.com/ios/ios_sdk_4.1__final/xcode_3.2.4_and_ios_sdk_4.1.dmg">Xcode_3.2.4_and_ios_sdk_4.1.dmg</a> 2.9GB<br><a href="http://adcdownload.apple.com/ios/ios_sdk_4.2__final/xcode_3.2.5_and_ios_sdk_4.2_final.dmg">Xcode_3.2.5_and_ios_sdk_4.2.dmg</a> 3.5GB<br><a href="http://adcdownload.apple.com/Developer_Tools/xcode_3.2.6_and_ios_sdk_4.3__final/xcode_3.2.6_and_ios_sdk_4.3.dmg">Xcode_3.2.6_and_ios_sdk_4.3.dmg</a> 4.1GB</p><h4 id="Xcode-4"><a href="#Xcode-4" class="headerlink" title="Xcode 4"></a>Xcode 4</h4><p><a href="http://adcdownload.apple.com/Developer_Tools/xcode_4_and_ios_sdk_4.3__final/xcode_4_and_ios_sdk_4.3__final.dmg">Xcode_4_and_ios_sdk_4.3.dmg</a> 4.2GB<br><a href="http://adcdownload.apple.com/Developer_Tools/xcode_4.0.1_and_ios_sdk_4.3/xcode_4.0.1_and_ios_sdk_4.3.dmg">Xcode_4.0.1_and_ios_sdk_4.3.dmg</a> 4.2GB<br><a href="http://adcdownload.apple.com/Developer_Tools/xcode_4.0.2_and_ios_sdk_4.3/xcode_4.0.2_and_ios_sdk_4.3.dmg">Xcode_4.0.2_and_ios_sdk_4.3.dmg</a> 4.2GB<br><a href="http://adcdownload.apple.com/Developer_Tools/xcode_4.1_for_snow_leopard_21110/xcode_4.1_for_snow_leopard.dmg">Xcode_4.1_for_snow_leopard.dmg</a> 4.3GB<br><a href="http://adcdownload.apple.com/Developer_Tools/xcode_4.1_for_lion_21263/installxcode_41_lion.dmg">Xcode_4.1_for_lion.dmg</a> 2.9GB<br><a href="http://adcdownload.apple.com/Developer_Tools/xcode_4.2_for_snow_leopard/xcode_4.2_for_snow_leopard.dmg">Xcode_4.2_for_snow_leopard.dmg</a> 1.6GB<br><a href="http://adcdownload.apple.com/Developer_Tools/xcode_4.2_for_lion_21264/installxcode_42_lion.dmg">Xcode_4.2_for_lion.dmg</a> 1.6GB<br><a href="http://adcdownload.apple.com/Developer_Tools/xcode_4.2.1_for_lion_21265/installxcode_421_lion.dmg">Xcode_4.2.1_for_lion.dmg</a> 1.6GB<br><a href="http://adcdownload.apple.com/Developer_Tools/xcode_4.3_for_lion_21266/xcode_43_lion.dmg">Xcode_4.3_for_lion.dmg</a>  1.4GB<br><a href="http://adcdownload.apple.com/Developer_Tools/xcode_4.3.1_for_lion_21267/xcode_431_lion.dmg">Xcode_4.3.1_for_lion.dmg</a> 1.4GB<br><a href="http://adcdownload.apple.com/Developer_Tools/xcode_4.3.2/xcode_432_lion.dmg">Xcode_4.3.2_for_lion.dmg</a> 1.8GB<br><a href="http://adcdownload.apple.com/Developer_Tools/xcode_4.3.3_for_lion/xcode_4.3.3_for_lion.dmg">Xcode_4.3.3_for_lion.dmg</a> 1.8GB<br><a href="http://adcdownload.apple.com/Developer_Tools/xcode_4.4_21362/xcode446938108a.dmg">Xcode_4.4.dmg</a> 1.8GB<br><a href="http://adcdownload.apple.com/Developer_Tools/xcode_4.4.1/xcode_4.4.1_6938145.dmg">Xcode_4.4.1.dmg</a> 1.8GB<br><a href="http://adcdownload.apple.com/Developer_Tools/xcode_4.5/xcode_4.5.dmg">Xcode_4.5.dmg</a> 1.5GB<br><a href="http://adcdownload.apple.com/Developer_Tools/xcode_4.5.1/xcode4510417539a.dmg">Xcode_4.5.1.dmg</a> 1.5GB<br><a href="http://adcdownload.apple.com/Developer_Tools/xcode_4.5.2/xcode4520418508a.dmg">Xcode_4.5.2.dmg</a> 1.5GB<br><a href="http://adcdownload.apple.com/Developer_Tools/xcode_4.6/xcode460417218a.dmg">Xcode_4.6.dmg</a> 1.6GB<br><a href="http://adcdownload.apple.com/Developer_Tools/xcode_4.6.1/xcode4610419628a.dmg">Xcode_4.6.1.dmg</a> 1.6GB<br><a href="http://adcdownload.apple.com/Developer_Tools/xcode_4.6.2/xcode4620419895a.dmg">Xcode_4.6.2.dmg</a> 1.6GB<br><a href="http://adcdownload.apple.com/Developer_Tools/xcode_4.6.3/xcode4630916281a.dmg">Xcode_4.6.3.dmg</a> 1.6GB</p><h4 id="Xcode-5"><a href="#Xcode-5" class="headerlink" title="Xcode 5"></a>Xcode 5</h4><p><a href="http://adcdownload.apple.com/Developer_Tools/xcode_5/xcode_5.dmg">Xcode_5.dmg</a> 1.9GB<br><a href="http://adcdownload.apple.com/Developer_Tools/xcode_5.0.1/xcode_5.0.1.dmg">Xcode_5.0.1.dmg</a> 2.0GB<br><a href="http://adcdownload.apple.com/Developer_Tools/xcode_5.0.2/xcode_5.0.2.dmg">Xcode_5.0.2.dmg</a> 2.0GB<br><a href="http://adcdownload.apple.com/Developer_Tools/xcode_5.1/xcode_5.1.dmg">Xcode_5.1.dmg</a> 2.1GB<br><a href="http://adcdownload.apple.com/Developer_Tools/xcode_5.1.1/xcode_5.1.1.dmg">Xcode_5.1.1.dmg</a>  2.1GB</p><h4 id="Xcode-6"><a href="#Xcode-6" class="headerlink" title="Xcode 6"></a>Xcode 6</h4><p><a href="http://adcdownload.apple.com/Developer_Tools/xcode_6.0.1/xcode_6.0.1.dmg">Xcode_6.0.1.dmg</a> 2.1GB<br><a href="http://adcdownload.apple.com/Developer_Tools/xcode_6.1/56841_xcode_6.1.dmg">Xcode_6.1.dmg</a> 2.5GB<br><a href="http://adcdownload.apple.com/Developer_Tools/xcode_6.1.1/xcode_6.1.1.dmg">Xcode_6.1.1.dmg</a> 2.5GB<br><a href="http://adcdownload.apple.com/Developer_Tools/Xcode_6.2/Xcode_6.2.dmg">Xcode_6.2.dmg</a> 2.5GB<br><a href="http://adcdownload.apple.com/Developer_Tools/Xcode_6.3/Xcode_6.3.dmg">Xcode_6.3.dmg</a> 2.5GB<br><a href="http://adcdownload.apple.com/Developer_Tools/Xcode_6.3.1/Xcode_6.3.1.dmg">Xcode_6.3.1.dmg</a> 2.5GB<br><a href="http://adcdownload.apple.com/Developer_Tools/Xcode_6.3.2/Xcode_6.3.2.dmg">Xcode_6.3.2.dmg</a> 2.5GB<br><a href="http://adcdownload.apple.com/Developer_Tools/Xcode_6.4/Xcode_6.4.dmg">Xcode_6.4.dmg</a> 2.6GB</p><h4 id="Xcode-7"><a href="#Xcode-7" class="headerlink" title="Xcode 7"></a>Xcode 7</h4><p><a href="http://adcdownload.apple.com/Developer_Tools/Xcode_7/Xcode_7.dmg">Xcode_7.dmg</a> 3.5GB<br><a href="http://adcdownload.apple.com/Developer_Tools/Xcode_7.0.1/Xcode_7.0.1.dmg">Xcode_7.0.1.dmg</a> 3.5GB<br><a href="http://adcdownload.apple.com/Developer_Tools/Xcode_7.1/Xcode_7.1.dmg">Xcode_7.1.dmg</a> 4.2GB<br><a href="http://adcdownload.apple.com/Developer_Tools/Xcode_7.1.1/Xcode_7.1.1.dmg">Xcode_7.1.1.dmg</a> 4.2GB<br><a href="http://adcdownload.apple.com/Developer_Tools/Xcode_7.2/Xcode_7.2.dmg">Xcode_7.2.dmg</a> 4.4GB<br><a href="http://adcdownload.apple.com/Developer_Tools/Xcode_7.2.1/Xcode_7.2.1.dmg">Xcode_7.2.1.dmg</a> 4.4GB<br><a href="http://adcdownload.apple.com/Developer_Tools/Xcode_7.3/Xcode_7.3.dmg">Xcode_7.3.dmg</a> 4.8GB<br><a href="http://adcdownload.apple.com/Developer_Tools/Xcode_7.3.1/Xcode_7.3.1.dmg">Xcode_7.3.1.dmg</a> 4.8GB</p><h4 id="Xcode-8"><a href="#Xcode-8" class="headerlink" title="Xcode 8"></a>Xcode 8</h4><p><a href="http://adcdownload.apple.com/Developer_Tools/Xcode_8/Xcode_8.xip">Xcode_8.xip</a> 4.1GB<br><a href="http://adcdownload.apple.com/Developer_Tools/Xcode_8.1/Xcode_8.1.xip">Xcode_8.1.xip</a> 4.1GB<br><a href="http://adcdownload.apple.com/Developer_Tools/Xcode_8.2/Xcode_8.2.xip">Xcode_8.2.xip</a> 4.2GB<br><a href="http://adcdownload.apple.com/Developer_Tools/Xcode_8.2.1/Xcode_8.2.1.xip">Xcode_8.2.1.xip</a> 4.2GB<br><a href="http://adcdownload.apple.com/Developer_Tools/Xcode_8.3/Xcode_8.3.xip">Xcode_8.3.xip</a> 4.1GB<br><a href="http://adcdownload.apple.com/Developer_Tools/Xcode_8.3.1/Xcode_8.3.1.xip">Xcode_8.3.1.xip</a> 4.1GB<br><a href="http://adcdownload.apple.com/Developer_Tools/Xcode_8.3.2/Xcode8.3.2.xip">Xcode_8.3.2.xip</a>4.1GB</p>]]></content>
      
      
      <categories>
          
          <category> macOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
